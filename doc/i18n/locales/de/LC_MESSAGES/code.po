# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2014 Bastian Kleineidam
# This file is distributed under the same license as the LinkChecker
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: LinkChecker \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-08-05 19:32+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../src/code/index.rst:4
msgid "Code"
msgstr ""

#: ../../src/code/index.rst:6
msgid "LinkChecker comprises the linkchecker executable and linkcheck package."
msgstr ""

#: ../../src/code/index.rst:13:<autosummary>:1
msgid ":obj:`linkcheck <linkcheck>`\\"
msgstr ""

#: ../../src/code/index.rst:13:<autosummary>:1 linkcheck:1 of
msgid "Main package for link checking."
msgstr ""

#: ../../src/code/index.rst:15
msgid "Running"
msgstr ""

#: ../../src/code/index.rst:16
msgid ""
"linkchecker provides the command-line arguments and reads a list of URLs "
"from standard input, reads configuration files, drops privileges if run "
"as root, initialises the chosen logger and collects an optional password."
msgstr ""

#: ../../src/code/index.rst:20
msgid ""
"Uses :meth:`linkcheck.director.get_aggregate` to obtain an *aggregate* "
"object :class:`linkcheck.director.aggregator.Aggregate` that includes "
":class:`linkcheck.cache.urlqueue.UrlQueue`, "
":class:`linkcheck.plugins.PluginManager` and "
":class:`linkcheck.cache.results.ResultCache` objects."
msgstr ""

#: ../../src/code/index.rst:26
msgid ""
"Adds URLs in the form of *url_data* objects to the aggregate's *urlqueue*"
" with :meth:`linkcheck.cmdline.aggregate_url` which uses "
":meth:`linkcheck.checker.get_url_from` to return a *url_data* object that"
" is an instance of one of the :mod:`linkcheck.checker` classes derived "
"from :class:`linkcheck.checker.urlbase.UrlBase`, according to the URL "
"scheme."
msgstr ""

#: ../../src/code/index.rst:67
msgid "Optionally initialises profiling."
msgstr ""

#: ../../src/code/index.rst:69
msgid ""
"Starts the checking with :meth:`linkcheck.director.check_urls`, passing "
"the *aggregate*."
msgstr ""

#: ../../src/code/index.rst:71
msgid "Finally it counts any errors and exits with the appropriate code."
msgstr ""

#: ../../src/code/index.rst:74
msgid "Checking & Parsing"
msgstr ""

#: ../../src/code/index.rst:75
msgid "That is:"
msgstr ""

#: ../../src/code/index.rst:77
msgid "Checking a link is valid"
msgstr ""

#: ../../src/code/index.rst:78
msgid "Parsing the document the link points to for new links"
msgstr ""

#: ../../src/code/index.rst:80
msgid ""
":meth:`linkcheck.director.check_urls` authenticates with a login form if "
"one is configured via "
":meth:`linkcheck.director.aggregator.Aggregate.visit_loginurl`, starts "
"logging with "
":meth:`linkcheck.director.aggregator.Aggregate.logger.start_log_output` "
"and calls :meth:`linkcheck.director.aggregator.Aggregate.start_threads` "
"which instantiates a :class:`linkcheck.director.checker.Checker` object "
"with the urlqueue if there is at least one thread configured, else it "
"calls :meth:`linkcheck.director.checker.check_urls` which loops through "
"the entries in the *urlqueue*."
msgstr ""

#: ../../src/code/index.rst:88
msgid ""
"Either way :meth:`linkcheck.director.checker.check_url` tests to see if "
"*url_data* already has a result and whether the cache already has a "
"result for that key. If not it calls *url_data.check()*, which calls "
"*url_data.check_content()* that runs content plugins and returns "
"*do_parse* according to *url_data.do_check_content* and "
":meth:`linkcheck.checker.urlbase.UrlBase.allows_recursion` which includes"
" :meth:`linkcheck.checker.urlbase.UrlBase.allows_simple_recursion` that "
"is monitoring the recursion level (with "
":attr:`linkcheck.checker.urlbase.UrlBase.recursion_level`). If *do_parse*"
" is True, passes the *url_data* object to "
":meth:`linkcheck.parser.parse_url` to call a `linkcheck.parser.parse_` "
"method according to the document type e.g. "
":meth:`linkcheck.parser.parse_html` for HTML which calls "
":meth:`linkcheck.htmlutil.linkparse.find_links` passing "
"*url_data.get_soup()* and *url_data.add_url*. `url_data.add_url` puts the"
" new *url_data* object on the *urlqueue*."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:2
msgid "linkcheck"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.ansicolor.rst:13
#: ../../src/code/linkcheck/linkcheck.better_exchook2.rst:13
#: ../../src/code/linkcheck/linkcheck.bookmarks.chromium.rst:13
#: ../../src/code/linkcheck/linkcheck.bookmarks.firefox.rst:13
#: ../../src/code/linkcheck/linkcheck.bookmarks.opera.rst:13
#: ../../src/code/linkcheck/linkcheck.bookmarks.safari.rst:13
#: ../../src/code/linkcheck/linkcheck.checker.fileurl.rst:13
#: ../../src/code/linkcheck/linkcheck.checker.internpaturl.rst:13
#: ../../src/code/linkcheck/linkcheck.checker.mailtourl.rst:13
#: ../../src/code/linkcheck/linkcheck.checker.rst:13
#: ../../src/code/linkcheck/linkcheck.checker.telneturl.rst:13
#: ../../src/code/linkcheck/linkcheck.checker.urlbase.rst:13
#: ../../src/code/linkcheck/linkcheck.cmdline.rst:13
#: ../../src/code/linkcheck/linkcheck.configuration.confparse.rst:13
#: ../../src/code/linkcheck/linkcheck.configuration.rst:13
#: ../../src/code/linkcheck/linkcheck.cookies.rst:13
#: ../../src/code/linkcheck/linkcheck.decorators.rst:13
#: ../../src/code/linkcheck/linkcheck.director.aggregator.rst:13
#: ../../src/code/linkcheck/linkcheck.director.checker.rst:13
#: ../../src/code/linkcheck/linkcheck.director.console.rst:13
#: ../../src/code/linkcheck/linkcheck.director.rst:13
#: ../../src/code/linkcheck/linkcheck.dummy.rst:13
#: ../../src/code/linkcheck/linkcheck.fileutil.rst:13
#: ../../src/code/linkcheck/linkcheck.ftpparse.rst:13
#: ../../src/code/linkcheck/linkcheck.htmlutil.htmlsoup.rst:13
#: ../../src/code/linkcheck/linkcheck.htmlutil.linkparse.rst:13
#: ../../src/code/linkcheck/linkcheck.htmlutil.loginformsearch.rst:13
#: ../../src/code/linkcheck/linkcheck.httputil.rst:13
#: ../../src/code/linkcheck/linkcheck.i18n.rst:13
#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:13
#: ../../src/code/linkcheck/linkcheck.loader.rst:13
#: ../../src/code/linkcheck/linkcheck.lock.rst:13
#: ../../src/code/linkcheck/linkcheck.log.rst:13
#: ../../src/code/linkcheck/linkcheck.logconf.rst:13
#: ../../src/code/linkcheck/linkcheck.logger.dot.rst:13
#: ../../src/code/linkcheck/linkcheck.logger.graph.rst:13
#: ../../src/code/linkcheck/linkcheck.logger.sql.rst:13
#: ../../src/code/linkcheck/linkcheck.logger.xmllog.rst:13
#: ../../src/code/linkcheck/linkcheck.memoryutil.rst:13
#: ../../src/code/linkcheck/linkcheck.mimeutil.rst:13
#: ../../src/code/linkcheck/linkcheck.network.iputil.rst:13
#: ../../src/code/linkcheck/linkcheck.parser.rst:13
#: ../../src/code/linkcheck/linkcheck.parser.sitemap.rst:13
#: ../../src/code/linkcheck/linkcheck.plugins.locationinfo.rst:13
#: ../../src/code/linkcheck/linkcheck.plugins.parsepdf.rst:13
#: ../../src/code/linkcheck/linkcheck.plugins.parseword.rst:13
#: ../../src/code/linkcheck/linkcheck.plugins.rst:13
#: ../../src/code/linkcheck/linkcheck.plugins.syntaxchecks.rst:13
#: ../../src/code/linkcheck/linkcheck.plugins.viruscheck.rst:13
#: ../../src/code/linkcheck/linkcheck.rst:13
#: ../../src/code/linkcheck/linkcheck.socketutil.rst:13
#: ../../src/code/linkcheck/linkcheck.strformat.rst:13
#: ../../src/code/linkcheck/linkcheck.trace.rst:13
#: ../../src/code/linkcheck/linkcheck.url.rst:13
msgid "Functions"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:30:<autosummary>:1
msgid ":obj:`drop_privileges <linkcheck.drop_privileges>`\\ \\(\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:30:<autosummary>:1
#: linkcheck.drop_privileges:1 of
msgid "Make sure to drop root privileges on POSIX systems."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:30:<autosummary>:1
msgid ":obj:`get_install_data <linkcheck.get_install_data>`\\ \\(\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:30:<autosummary>:1
#: linkcheck.get_install_data:1 of
msgid "Return absolute path of LinkChecker data installation directory."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:30:<autosummary>:1
msgid ":obj:`get_link_pat <linkcheck.get_link_pat>`\\ \\(arg\\[\\, strict\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:30:<autosummary>:1
msgid "Get a link pattern matcher for intern/extern links."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:30:<autosummary>:1
msgid ":obj:`init_i18n <linkcheck.init_i18n>`\\ \\(\\[loc\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:30:<autosummary>:1
msgid "Initialize i18n with the configured locale dir."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:30:<autosummary>:1
msgid ":obj:`module_path <linkcheck.module_path>`\\ \\(\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:30:<autosummary>:1
#: linkcheck.module_path:1 of
msgid "Return absolute directory of system executable."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:30:<autosummary>:1
msgid ""
":obj:`print_threadstacks <linkcheck.print_threadstacks>`\\ \\(sig\\, "
"frame\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:30:<autosummary>:1
#: linkcheck.print_threadstacks:1 of
msgid "Print stack traces of all running threads."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cache.urlqueue.rst:27
#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:44
#: ../../src/code/linkcheck/linkcheck.plugins.viruscheck.rst:38
#: ../../src/code/linkcheck/linkcheck.rst:32
msgid "Exceptions"
msgstr ""

#: linkcheck.LinkCheckerError:1:<autosummary>:1 of
msgid ":obj:`LinkCheckerError <linkcheck.LinkCheckerError>`\\"
msgstr ""

#: linkcheck.LinkCheckerError:1 linkcheck.LinkCheckerError:1:<autosummary>:1 of
msgid "Exception to be raised on linkchecker-specific check errors."
msgstr ""

#: linkcheck.LinkCheckerError:1:<autosummary>:1 of
msgid ":obj:`LinkCheckerInterrupt <linkcheck.LinkCheckerInterrupt>`\\"
msgstr ""

#: linkcheck.LinkCheckerError:1:<autosummary>:1
#: linkcheck.LinkCheckerInterrupt:1 of
msgid "Used for testing."
msgstr ""

#: linkcheck.LinkCheckerError:1 linkcheck.LinkCheckerInterrupt:1
#: linkcheck.cache.urlqueue.Empty:1 linkcheck.cache.urlqueue.Timeout:1
#: linkcheck.lc_cgi.LCFormError:1 linkcheck.plugins.viruscheck.ClamavError:1 of
msgid "Bases: :class:`Exception`"
msgstr ""

#: linkcheck.get_link_pat:1 of
msgid ""
"Get a link pattern matcher for intern/extern links. Returns a compiled "
"pattern and a negate and strict option."
msgstr ""

#: linkcheck.checker.absolute_url linkcheck.checker.dnsurl.DnsUrl
#: linkcheck.checker.fileurl.FileUrl linkcheck.checker.ftpurl.FtpUrl
#: linkcheck.checker.get_index_html linkcheck.checker.get_url_from
#: linkcheck.checker.guess_url linkcheck.checker.httpurl.HttpUrl
#: linkcheck.checker.httpurl.HttpUrl.allows_robots
#: linkcheck.checker.ignoreurl.IgnoreUrl
#: linkcheck.checker.internpaturl.InternPatternUrl
#: linkcheck.checker.itmsservicesurl.ItmsServicesUrl
#: linkcheck.checker.mailtourl.MailtoUrl linkcheck.checker.nntpurl.NntpUrl
#: linkcheck.checker.telneturl.TelnetUrl
#: linkcheck.checker.unknownurl.UnknownUrl linkcheck.checker.urlbase.UrlBase
#: linkcheck.checker.urlbase.UrlBase.get_intern_pattern
#: linkcheck.configuration.get_share_file
#: linkcheck.director.interrupter.Interrupt linkcheck.director.status.Status
#: linkcheck.get_link_pat linkcheck.lc_cgi.format_error
#: linkcheck.loader.get_plugins linkcheck.lock.get_lock
#: linkcheck.lock.get_semaphore linkcheck.logger.sql.intify
#: linkcheck.network.iputil.resolve_host linkcheck.strformat.ascii_safe
#: linkcheck.strformat.limit linkcheck.url.parse_qsl linkcheck.url.splitport of
msgid "Parameters"
msgstr ""

#: linkcheck.get_link_pat:4 of
msgid "pattern from config"
msgstr ""

#: linkcheck.get_link_pat:6 of
msgid "if pattern is to be handled strict"
msgstr ""

#: linkcheck.checker.dnsurl.DnsUrl.can_get_content
#: linkcheck.checker.fileurl.FileUrl.get_os_filename
#: linkcheck.checker.fileurl.FileUrl.is_directory
#: linkcheck.checker.fileurl.FileUrl.is_parseable linkcheck.checker.guess_url
#: linkcheck.checker.httpurl.HttpUrl.allows_robots
#: linkcheck.checker.httpurl.HttpUrl.get_robots_txt_url
#: linkcheck.checker.httpurl.HttpUrl.is_parseable
#: linkcheck.checker.mailtourl.MailtoUrl.can_get_content
#: linkcheck.checker.nntpurl.NntpUrl.can_get_content
#: linkcheck.checker.telneturl.TelnetUrl.can_get_content
#: linkcheck.checker.unknownurl.UnknownUrl.can_get_content
#: linkcheck.checker.urlbase.UrlBase.get_intern_pattern
#: linkcheck.checker.urlbase.UrlBase.set_extern
#: linkcheck.checker.urlbase.urljoin linkcheck.configuration.get_certifi_file
#: linkcheck.configuration.get_share_file linkcheck.cookies.from_file
#: linkcheck.cookies.from_headers linkcheck.director.check_urls
#: linkcheck.get_link_pat linkcheck.httputil.asn1_generaltime_to_seconds
#: linkcheck.httputil.get_content_type linkcheck.init_i18n
#: linkcheck.lc_cgi.format_error linkcheck.loader.get_importable_files
#: linkcheck.loader.get_package_modules linkcheck.loader.get_plugins
#: linkcheck.lock.get_lock linkcheck.lock.get_semaphore
#: linkcheck.logger.sql.intify linkcheck.memoryutil.write_memory_dump
#: linkcheck.plugins.locationinfo.get_location
#: linkcheck.plugins.viruscheck.ClamavConfig.new_connection
#: linkcheck.plugins.viruscheck.scan
#: linkcheck.robotparser2.RobotFileParser.can_fetch
#: linkcheck.robotparser2.RobotFileParser.get_crawldelay
#: linkcheck.robotparser2.RobotFileParser.mtime
#: linkcheck.robotparser2.RobotFileParser.parse linkcheck.strformat.ascii_safe
#: linkcheck.strformat.limit linkcheck.strformat.unquote
#: linkcheck.url.get_content linkcheck.url.parse_qsl linkcheck.url.splitport
#: linkcheck.url.url_norm of
msgid "Returns"
msgstr ""

#: linkcheck.get_link_pat:8 of
msgid "dictionary with keys 'pattern', 'negate' and 'strict'"
msgstr ""

#: linkcheck.checker.dnsurl.DnsUrl.can_get_content
#: linkcheck.checker.fileurl.FileUrl.get_os_filename
#: linkcheck.checker.fileurl.FileUrl.is_directory
#: linkcheck.checker.fileurl.FileUrl.is_parseable linkcheck.checker.guess_url
#: linkcheck.checker.httpurl.HttpUrl.allows_robots
#: linkcheck.checker.httpurl.HttpUrl.get_robots_txt_url
#: linkcheck.checker.httpurl.HttpUrl.is_parseable
#: linkcheck.checker.mailtourl.MailtoUrl.can_get_content
#: linkcheck.checker.nntpurl.NntpUrl.can_get_content
#: linkcheck.checker.telneturl.TelnetUrl.can_get_content
#: linkcheck.checker.unknownurl.UnknownUrl.can_get_content
#: linkcheck.checker.urlbase.UrlBase.get_intern_pattern
#: linkcheck.configuration.get_certifi_file
#: linkcheck.configuration.get_share_file linkcheck.get_link_pat
#: linkcheck.httputil.get_content_type linkcheck.lc_cgi.format_error
#: linkcheck.loader.get_importable_files linkcheck.loader.get_package_modules
#: linkcheck.loader.get_plugins linkcheck.lock.get_lock
#: linkcheck.lock.get_semaphore linkcheck.logger.sql.intify
#: linkcheck.memoryutil.write_memory_dump linkcheck.plugins.viruscheck.scan
#: linkcheck.robotparser2.RobotFileParser.can_fetch
#: linkcheck.robotparser2.RobotFileParser.get_crawldelay
#: linkcheck.robotparser2.RobotFileParser.mtime linkcheck.strformat.ascii_safe
#: linkcheck.strformat.unquote linkcheck.url.get_content
#: linkcheck.url.parse_qsl linkcheck.url.splitport linkcheck.url.url_norm of
msgid "Return type"
msgstr ""

#: linkcheck.configuration.Configuration.read
#: linkcheck.configuration.confparse.LCConfigParser.read
#: linkcheck.configuration.get_certifi_file
#: linkcheck.configuration.get_share_file linkcheck.cookies.from_headers
#: linkcheck.get_link_pat of
msgid "raises"
msgstr ""

#: linkcheck.get_link_pat:10 of
msgid "re.error on invalid regular expressions"
msgstr ""

#: linkcheck.init_i18n:1 of
msgid ""
"Initialize i18n with the configured locale dir. The environment variable "
"LOCPATH can also specify a locale dir."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.set_extern:5
#: linkcheck.director.check_urls:4 linkcheck.init_i18n:4
#: linkcheck.robotparser2.RobotFileParser.parse:5 of
msgid "None"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.bookmarks.rst:25
#: ../../src/code/linkcheck/linkcheck.cache.rst:25
#: ../../src/code/linkcheck/linkcheck.checker.rst:35
#: ../../src/code/linkcheck/linkcheck.configuration.rst:56
#: ../../src/code/linkcheck/linkcheck.director.rst:36
#: ../../src/code/linkcheck/linkcheck.htmlutil.rst:25
#: ../../src/code/linkcheck/linkcheck.logger.rst:31
#: ../../src/code/linkcheck/linkcheck.network.rst:25
#: ../../src/code/linkcheck/linkcheck.parser.rst:41
#: ../../src/code/linkcheck/linkcheck.plugins.rst:39
#: ../../src/code/linkcheck/linkcheck.rst:43
msgid "Modules"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.ansicolor <linkcheck.ansicolor>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid "ANSI Color definitions and functions."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.better_exchook2 <linkcheck.better_exchook2>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.bookmarks <linkcheck.bookmarks>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.cache <linkcheck.cache>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1 linkcheck.cache:1
#: of
msgid "Store and provide cached data during checking in a thread-safe manner."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.checker <linkcheck.checker>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
#: linkcheck.checker:1 of
msgid "Main functions for link checking."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.cmdline <linkcheck.cmdline>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
#: linkcheck.cmdline:1 of
msgid "Utility functions suitable for command line clients."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.configuration <linkcheck.configuration>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
#: linkcheck.configuration:1 of
msgid "Store metadata and options."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.containers <linkcheck.containers>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
#: linkcheck.containers:1 of
msgid "Special container classes."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.cookies <linkcheck.cookies>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
#: linkcheck.cookies:1 of
msgid "Parsing of cookies."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.decorators <linkcheck.decorators>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
#: linkcheck.decorators:1 of
msgid "Simple decorators (usable in Python >= 2.4)."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.director <linkcheck.director>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
#: linkcheck.director:1 of
msgid "Management of checking a queue of links with several threads."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.dummy <linkcheck.dummy>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1 linkcheck.dummy:1
#: of
msgid "Dummy objects."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.fileutil <linkcheck.fileutil>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
#: linkcheck.fileutil:1 linkcheck.mimeutil:1 of
msgid "File and path utilities."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.ftpparse <linkcheck.ftpparse>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
#: linkcheck.ftpparse:1 of
msgid "Python implementation of a part of Dan Bernstein's ftpparse library."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.htmlutil <linkcheck.htmlutil>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
#: linkcheck.htmlutil:1 of
msgid "HTML utils"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.httputil <linkcheck.httputil>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.i18n <linkcheck.i18n>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1 linkcheck.i18n:1
#: of
msgid "Application internationalization support."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.lc_cgi <linkcheck.lc_cgi>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1 linkcheck.lc_cgi:1
#: of
msgid "Functions used by the WSGI script."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.loader <linkcheck.loader>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1 linkcheck.loader:1
#: of
msgid "Functions to load plugin modules."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.lock <linkcheck.lock>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1 linkcheck.lock:1
#: of
msgid "Locking utility class."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.log <linkcheck.log>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1 linkcheck.log:1 of
msgid "Logging and debug functions."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.logconf <linkcheck.logconf>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
#: linkcheck.logconf:1 of
msgid "Logging configuration"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.logger <linkcheck.logger>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1 linkcheck.logger:1
#: of
msgid "Output logging support for different formats."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.memoryutil <linkcheck.memoryutil>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
#: linkcheck.memoryutil:1 of
msgid "Memory utilities."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.mimeutil <linkcheck.mimeutil>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.network <linkcheck.network>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.parser <linkcheck.parser>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.parser.rst:47:<autosummary>:1
#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1 linkcheck.parser:1
#: linkcheck.parser.sitemap:1 of
msgid "Main functions for link parsing"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.plugins <linkcheck.plugins>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
#: linkcheck.plugins:1 of
msgid "Module for plugin management."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.robotparser2 <linkcheck.robotparser2>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
#: linkcheck.robotparser2:1 of
msgid "Robots.txt parser."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.socketutil <linkcheck.socketutil>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.strformat <linkcheck.strformat>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid "Various string utility functions."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.threader <linkcheck.threader>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
#: linkcheck.threader:1 of
msgid "Support for managing threads."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.trace <linkcheck.trace>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.url <linkcheck.url>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1 linkcheck.url:1 of
msgid "Functions for parsing and matching URL strings."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.ansicolor.rst:2
msgid "linkcheck.ansicolor"
msgstr ""

#: linkcheck.ansicolor:1 of
msgid ""
"ANSI Color definitions and functions. For Windows systems, the colorama "
"module uses ctypes and Windows DLLs to generate colored output."
msgstr ""

#: linkcheck.ansicolor:4 of
msgid "From Term::ANSIColor, applies also to this module:"
msgstr ""

#: linkcheck.ansicolor:6 of
msgid ""
"The codes output by this module are standard terminal control codes, "
"complying with ECMA-48 and ISO 6429 (generally referred to as \"ANSI "
"color\" for the color codes). The non-color control codes (bold, dark, "
"italic, underline, and reverse) are part of the earlier ANSI X3.64 "
"standard for control sequences for video terminals and peripherals."
msgstr ""

#: linkcheck.ansicolor:12 of
msgid ""
"Note that not all displays are ISO 6429-compliant, or even "
"X3.64-compliant (or are even attempting to be so)."
msgstr ""

#: linkcheck.ansicolor:15 of
msgid ""
"Jean Delvare provided the following table of different common terminal "
"emulators and their support for the various attributes and others have "
"helped me flesh it out::"
msgstr ""

#: linkcheck.ansicolor:31 of
msgid "SEE ALSO"
msgstr ""

#: linkcheck.ansicolor:33 of
msgid ""
"ECMA-048 is available on-line (at least at the time of this writing) at "
"http://www.ecma-international.org/publications/standards/ECMA-048.HTM."
msgstr ""

#: linkcheck.ansicolor:36 of
msgid ""
"ISO 6429 is available from ISO for a charge; the author of this module "
"does not own a copy of it. Since the source material for ISO 6429 was "
"ECMA-048 and the latter is available for free, there seems little reason "
"to obtain the ISO standard."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.ansicolor.rst:25:<autosummary>:1
msgid ":obj:`esc_ansicolor <linkcheck.ansicolor.esc_ansicolor>`\\ \\(color\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.ansicolor.rst:25:<autosummary>:1
#: linkcheck.ansicolor.esc_ansicolor:1 of
msgid "convert a named color definition to an escaped ANSI color"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.ansicolor.rst:25:<autosummary>:1
msgid ":obj:`get_columns <linkcheck.ansicolor.get_columns>`\\ \\(fp\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.ansicolor.rst:25:<autosummary>:1
#: linkcheck.ansicolor.get_columns:1 of
msgid "Return number of columns for given file."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.ansicolor.rst:25:<autosummary>:1
msgid ":obj:`get_win_color <linkcheck.ansicolor.get_win_color>`\\ \\(color\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.ansicolor.rst:25:<autosummary>:1
#: linkcheck.ansicolor.get_win_color:1 of
msgid ""
"Convert a named color definition to Windows console color foreground, "
"background and style numbers."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.ansicolor.rst:25:<autosummary>:1
msgid ":obj:`has_colors <linkcheck.ansicolor.has_colors>`\\ \\(fp\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.ansicolor.rst:25:<autosummary>:1
#: linkcheck.ansicolor.has_colors:1 of
msgid "Test if given file is an ANSI color enabled tty."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.ansicolor.rst:25:<autosummary>:1
msgid ""
":obj:`write_color <linkcheck.ansicolor.write_color>`\\ \\(fp\\, text\\, "
"color\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.ansicolor.rst:25:<autosummary>:1
#: linkcheck.ansicolor.write_color:1 of
msgid "Colorize text with given color."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.ansicolor.rst:27
#: ../../src/code/linkcheck/linkcheck.cache.results.rst:17
#: ../../src/code/linkcheck/linkcheck.cache.robots_txt.rst:17
#: ../../src/code/linkcheck/linkcheck.cache.urlqueue.rst:17
#: ../../src/code/linkcheck/linkcheck.checker.dnsurl.rst:17
#: ../../src/code/linkcheck/linkcheck.checker.fileurl.rst:27
#: ../../src/code/linkcheck/linkcheck.checker.ftpurl.rst:17
#: ../../src/code/linkcheck/linkcheck.checker.httpurl.rst:17
#: ../../src/code/linkcheck/linkcheck.checker.ignoreurl.rst:17
#: ../../src/code/linkcheck/linkcheck.checker.internpaturl.rst:23
#: ../../src/code/linkcheck/linkcheck.checker.itmsservicesurl.rst:17
#: ../../src/code/linkcheck/linkcheck.checker.mailtourl.rst:26
#: ../../src/code/linkcheck/linkcheck.checker.nntpurl.rst:17
#: ../../src/code/linkcheck/linkcheck.checker.proxysupport.rst:17
#: ../../src/code/linkcheck/linkcheck.checker.telneturl.rst:23
#: ../../src/code/linkcheck/linkcheck.checker.unknownurl.rst:17
#: ../../src/code/linkcheck/linkcheck.checker.urlbase.rst:24
#: ../../src/code/linkcheck/linkcheck.cmdline.rst:26
#: ../../src/code/linkcheck/linkcheck.configuration.confparse.rst:23
#: ../../src/code/linkcheck/linkcheck.configuration.rst:42
#: ../../src/code/linkcheck/linkcheck.containers.rst:17
#: ../../src/code/linkcheck/linkcheck.decorators.rst:30
#: ../../src/code/linkcheck/linkcheck.director.aggregator.rst:23
#: ../../src/code/linkcheck/linkcheck.director.checker.rst:24
#: ../../src/code/linkcheck/linkcheck.director.console.rst:28
#: ../../src/code/linkcheck/linkcheck.director.interrupter.rst:17
#: ../../src/code/linkcheck/linkcheck.director.logger.rst:17
#: ../../src/code/linkcheck/linkcheck.director.status.rst:17
#: ../../src/code/linkcheck/linkcheck.director.task.rst:17
#: ../../src/code/linkcheck/linkcheck.dummy.rst:23
#: ../../src/code/linkcheck/linkcheck.htmlutil.linkparse.rst:26
#: ../../src/code/linkcheck/linkcheck.htmlutil.loginformsearch.rst:23
#: ../../src/code/linkcheck/linkcheck.i18n.rst:33
#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:34
#: ../../src/code/linkcheck/linkcheck.lock.rst:24
#: ../../src/code/linkcheck/linkcheck.logger.blacklist.rst:17
#: ../../src/code/linkcheck/linkcheck.logger.csvlog.rst:17
#: ../../src/code/linkcheck/linkcheck.logger.customxml.rst:17
#: ../../src/code/linkcheck/linkcheck.logger.dot.rst:23
#: ../../src/code/linkcheck/linkcheck.logger.gml.rst:17
#: ../../src/code/linkcheck/linkcheck.logger.gxml.rst:17
#: ../../src/code/linkcheck/linkcheck.logger.html.rst:17
#: ../../src/code/linkcheck/linkcheck.logger.none.rst:17
#: ../../src/code/linkcheck/linkcheck.logger.rst:17
#: ../../src/code/linkcheck/linkcheck.logger.sitemapxml.rst:17
#: ../../src/code/linkcheck/linkcheck.logger.sql.rst:24
#: ../../src/code/linkcheck/linkcheck.logger.text.rst:17
#: ../../src/code/linkcheck/linkcheck.parser.sitemap.rst:24
#: ../../src/code/linkcheck/linkcheck.plugins.anchorcheck.rst:17
#: ../../src/code/linkcheck/linkcheck.plugins.httpheaderinfo.rst:17
#: ../../src/code/linkcheck/linkcheck.plugins.locationinfo.rst:25
#: ../../src/code/linkcheck/linkcheck.plugins.markdowncheck.rst:17
#: ../../src/code/linkcheck/linkcheck.plugins.parsepdf.rst:23
#: ../../src/code/linkcheck/linkcheck.plugins.parseword.rst:31
#: ../../src/code/linkcheck/linkcheck.plugins.regexcheck.rst:17
#: ../../src/code/linkcheck/linkcheck.plugins.rst:25
#: ../../src/code/linkcheck/linkcheck.plugins.sslcertcheck.rst:17
#: ../../src/code/linkcheck/linkcheck.plugins.syntaxchecks.rst:24
#: ../../src/code/linkcheck/linkcheck.plugins.viruscheck.rst:26
#: ../../src/code/linkcheck/linkcheck.robotparser2.rst:17
#: ../../src/code/linkcheck/linkcheck.threader.rst:17
msgid "Classes"
msgstr ""

#: linkcheck.ansicolor.ColoredStreamHandler:1:<autosummary>:1 of
msgid ""
":obj:`ColoredStreamHandler <linkcheck.ansicolor.ColoredStreamHandler>`\\ "
"\\(\\[strm\\]\\)"
msgstr ""

#: linkcheck.ansicolor.ColoredStreamHandler:1
#: linkcheck.ansicolor.ColoredStreamHandler:1:<autosummary>:1 of
msgid "Send colored log messages to streams (file-like objects)."
msgstr ""

#: linkcheck.ansicolor.ColoredStreamHandler:1:<autosummary>:1 of
msgid ":obj:`Colorizer <linkcheck.ansicolor.Colorizer>`\\ \\(fp\\)"
msgstr ""

#: linkcheck.ansicolor.ColoredStreamHandler:1:<autosummary>:1
#: linkcheck.ansicolor.Colorizer:1 of
msgid "Prints colored messages to streams."
msgstr ""

#: linkcheck.ansicolor.ColoredStreamHandler:1 of
msgid "Bases: :class:`logging.StreamHandler`"
msgstr ""

#: linkcheck.ansicolor.ColoredStreamHandler:3 of
msgid "Log to given stream (a file-like object) or to stderr if strm is None."
msgstr ""

#: linkcheck.ansicolor.ColoredStreamHandler.emit:1 of
msgid "Emit a record."
msgstr ""

#: linkcheck.ansicolor.ColoredStreamHandler.emit:3 of
msgid ""
"If a formatter is specified, it is used to format the record. The record "
"is then written to the stream with a trailing newline [N.B. this may be "
"removed depending on feedback]."
msgstr ""

#: linkcheck.ansicolor.ColoredStreamHandler.get_color:1 of
msgid "Get appropriate color according to log level."
msgstr ""

#: linkcheck.ansicolor.Colorizer:1 linkcheck.cache.results.ResultCache:1
#: linkcheck.cache.robots_txt.RobotsTxt:1 linkcheck.cache.urlqueue.UrlQueue:1
#: linkcheck.checker.proxysupport.ProxySupport:1
#: linkcheck.checker.urlbase.CompactUrlData:1
#: linkcheck.checker.urlbase.UrlBase:1 linkcheck.decorators.curried:1
#: linkcheck.director.aggregator.Aggregate:1
#: linkcheck.director.console.StatusLogger:1 linkcheck.director.logger.Logger:1
#: linkcheck.dummy.Dummy:1 linkcheck.htmlutil.linkparse.LinkFinder:1
#: linkcheck.htmlutil.loginformsearch.Form:1 linkcheck.lc_cgi.ThreadsafeIO:1
#: linkcheck.lock.DebugLock:1 linkcheck.logger.LogStatistics:1
#: linkcheck.parser.sitemap.XmlTagUrlParser:1 linkcheck.plugins.PluginManager:1
#: linkcheck.plugins.syntaxchecks.W3Timer:1
#: linkcheck.plugins.viruscheck.ClamdScanner:1
#: linkcheck.robotparser2.RobotFileParser:1 of
msgid "Bases: :class:`object`"
msgstr ""

#: linkcheck.ansicolor.Colorizer:3 of
msgid "Initialize with given stream (file-like object)."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.better_exchook2.rst:2
msgid "linkcheck.better\\_exchook2"
msgstr ""

#: linkcheck.better_exchook2.better_exchook:1:<autosummary>:1 of
msgid ""
":obj:`better_exchook <linkcheck.better_exchook2.better_exchook>`\\ "
"\\(etype\\, value\\, tb\\[\\, out\\]\\)"
msgstr ""

#: linkcheck.better_exchook2.better_exchook:1:<autosummary>:1 of
msgid ""
":obj:`fallback_findfile <linkcheck.better_exchook2.fallback_findfile>`\\ "
"\\(filename\\)"
msgstr ""

#: linkcheck.better_exchook2.better_exchook:1:<autosummary>:1 of
msgid ""
":obj:`grep_full_py_identifiers "
"<linkcheck.better_exchook2.grep_full_py_identifiers>`\\ \\(tokens\\)"
msgstr ""

#: linkcheck.better_exchook2.better_exchook:1:<autosummary>:1 of
msgid ":obj:`install <linkcheck.better_exchook2.install>`\\ \\(\\)"
msgstr ""

#: linkcheck.better_exchook2.better_exchook:1:<autosummary>:1 of
msgid ":obj:`output <linkcheck.better_exchook2.output>`\\ \\(s\\[\\, out\\]\\)"
msgstr ""

#: linkcheck.better_exchook2.better_exchook:1:<autosummary>:1 of
msgid ":obj:`output_limit <linkcheck.better_exchook2.output_limit>`\\ \\(\\)"
msgstr ""

#: linkcheck.better_exchook2.better_exchook:1:<autosummary>:1 of
msgid ""
":obj:`parse_py_statement "
"<linkcheck.better_exchook2.parse_py_statement>`\\ \\(line\\)"
msgstr ""

#: linkcheck.better_exchook2.better_exchook:1:<autosummary>:1 of
msgid ""
":obj:`pp_extra_info <linkcheck.better_exchook2.pp_extra_info>`\\ "
"\\(obj\\[\\, depthlimit\\]\\)"
msgstr ""

#: linkcheck.better_exchook2.better_exchook:1:<autosummary>:1 of
msgid ":obj:`pretty_print <linkcheck.better_exchook2.pretty_print>`\\ \\(obj\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.bookmarks.rst:2
msgid "linkcheck.bookmarks"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.bookmarks.rst:34:<autosummary>:1
msgid ":obj:`linkcheck.bookmarks.chromium <linkcheck.bookmarks.chromium>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.bookmarks.rst:34:<autosummary>:1
msgid ":obj:`linkcheck.bookmarks.firefox <linkcheck.bookmarks.firefox>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.bookmarks.rst:34:<autosummary>:1
#: linkcheck.bookmarks.firefox:1 of
msgid "Parser for Firefox bookmark file."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.bookmarks.rst:34:<autosummary>:1
msgid ":obj:`linkcheck.bookmarks.opera <linkcheck.bookmarks.opera>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.bookmarks.rst:34:<autosummary>:1
msgid ":obj:`linkcheck.bookmarks.safari <linkcheck.bookmarks.safari>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.bookmarks.chromium.rst:2
msgid "linkcheck.bookmarks.chromium"
msgstr ""

#: linkcheck.bookmarks.chromium.parse_bookmark_data:1:<autosummary>:1 of
msgid ""
":obj:`parse_bookmark_data "
"<linkcheck.bookmarks.chromium.parse_bookmark_data>`\\ \\(data\\)"
msgstr ""

#: linkcheck.bookmarks.chromium.parse_bookmark_data:1:<autosummary>:1 of
msgid "Parse data string."
msgstr ""

#: linkcheck.bookmarks.chromium.parse_bookmark_data:1:<autosummary>:1 of
msgid ""
":obj:`parse_bookmark_json "
"<linkcheck.bookmarks.chromium.parse_bookmark_json>`\\ \\(data\\)"
msgstr ""

#: linkcheck.bookmarks.chromium.parse_bookmark_data:1:<autosummary>:1
#: linkcheck.bookmarks.chromium.parse_bookmark_json:1 of
msgid "Parse complete JSON data for Chromium Bookmarks."
msgstr ""

#: linkcheck.bookmarks.chromium.parse_bookmark_data:1:<autosummary>:1 of
msgid ""
":obj:`parse_bookmark_node "
"<linkcheck.bookmarks.chromium.parse_bookmark_node>`\\ \\(node\\)"
msgstr ""

#: linkcheck.bookmarks.chromium.parse_bookmark_data:1:<autosummary>:1
#: linkcheck.bookmarks.chromium.parse_bookmark_node:1 of
msgid "Parse one JSON node of Chromium Bookmarks."
msgstr ""

#: linkcheck.bookmarks.chromium.parse_bookmark_data:1 of
msgid ""
"Parse data string. Return iterator for bookmarks of the form (url, name)."
" Bookmarks are not sorted."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.bookmarks.firefox.rst:2
msgid "linkcheck.bookmarks.firefox"
msgstr ""

#: linkcheck.bookmarks.firefox.parse_bookmark_file:1:<autosummary>:1 of
msgid ""
":obj:`parse_bookmark_file "
"<linkcheck.bookmarks.firefox.parse_bookmark_file>`\\ \\(filename\\)"
msgstr ""

#: linkcheck.bookmarks.firefox.parse_bookmark_file:1:<autosummary>:1
#: linkcheck.bookmarks.safari.get_plist_data_from_string:1:<autosummary>:1 of
msgid "Return iterator for bookmarks of the form (url, name)."
msgstr ""

#: linkcheck.bookmarks.firefox.parse_bookmark_file:1 of
msgid ""
"Return iterator for bookmarks of the form (url, name). Bookmarks are not "
"sorted. Returns None if sqlite3 module is not installed."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.bookmarks.opera.rst:2
msgid "linkcheck.bookmarks.opera"
msgstr ""

#: linkcheck.bookmarks.opera.parse_bookmark_data:1:<autosummary>:1 of
msgid ""
":obj:`parse_bookmark_data "
"<linkcheck.bookmarks.opera.parse_bookmark_data>`\\ \\(data\\)"
msgstr ""

#: linkcheck.bookmarks.opera.parse_bookmark_data:1:<autosummary>:1 of
msgid "Return iterator for bookmarks of the form (url, name, line number)."
msgstr ""

#: linkcheck.bookmarks.opera.parse_bookmark_data:1 of
msgid ""
"Return iterator for bookmarks of the form (url, name, line number). "
"Bookmarks are not sorted."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.bookmarks.safari.rst:2
msgid "linkcheck.bookmarks.safari"
msgstr ""

#: linkcheck.bookmarks.safari.get_plist_data_from_string:1:<autosummary>:1 of
msgid ""
":obj:`get_plist_data_from_string "
"<linkcheck.bookmarks.safari.get_plist_data_from_string>`\\ \\(data\\)"
msgstr ""

#: linkcheck.bookmarks.safari.get_plist_data_from_string:1:<autosummary>:1 of
msgid "Parse plist data for a string."
msgstr ""

#: linkcheck.bookmarks.safari.get_plist_data_from_string:1:<autosummary>:1 of
msgid ""
":obj:`has_children <linkcheck.bookmarks.safari.has_children>`\\ "
"\\(entry\\)"
msgstr ""

#: linkcheck.bookmarks.safari.get_plist_data_from_string:1:<autosummary>:1
#: linkcheck.bookmarks.safari.has_children:1 of
msgid "Return true if plist entry has children."
msgstr ""

#: linkcheck.bookmarks.safari.get_plist_data_from_string:1:<autosummary>:1 of
msgid ":obj:`is_leaf <linkcheck.bookmarks.safari.is_leaf>`\\ \\(entry\\)"
msgstr ""

#: linkcheck.bookmarks.safari.get_plist_data_from_string:1:<autosummary>:1
#: linkcheck.bookmarks.safari.is_leaf:1 of
msgid "Return true if plist entry is an URL entry."
msgstr ""

#: linkcheck.bookmarks.safari.get_plist_data_from_string:1:<autosummary>:1 of
msgid ""
":obj:`parse_bookmark_data "
"<linkcheck.bookmarks.safari.parse_bookmark_data>`\\ \\(data\\)"
msgstr ""

#: linkcheck.bookmarks.safari.get_plist_data_from_string:1:<autosummary>:1 of
msgid ":obj:`parse_plist <linkcheck.bookmarks.safari.parse_plist>`\\ \\(entry\\)"
msgstr ""

#: linkcheck.bookmarks.safari.get_plist_data_from_string:1:<autosummary>:1
#: linkcheck.bookmarks.safari.parse_plist:1 of
msgid "Parse a XML dictionary entry."
msgstr ""

#: linkcheck.bookmarks.safari.get_plist_data_from_string:1 of
msgid "Parse plist data for a string. Tries biplist, falling back to plistlib."
msgstr ""

#: linkcheck.bookmarks.safari.parse_bookmark_data:1 of
msgid ""
"Return iterator for bookmarks of the form (url, name). Bookmarks are not "
"sorted."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cache.rst:2
msgid "linkcheck.cache"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cache.rst:33:<autosummary>:1
msgid ":obj:`linkcheck.cache.results <linkcheck.cache.results>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cache.rst:33:<autosummary>:1
#: linkcheck.cache.results:1 of
msgid "Cache check results."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cache.rst:33:<autosummary>:1
msgid ":obj:`linkcheck.cache.robots_txt <linkcheck.cache.robots_txt>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cache.rst:33:<autosummary>:1
#: linkcheck.cache.robots_txt:1 of
msgid "Cache robots.txt contents."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cache.rst:33:<autosummary>:1
msgid ":obj:`linkcheck.cache.urlqueue <linkcheck.cache.urlqueue>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cache.rst:33:<autosummary>:1
#: linkcheck.cache.urlqueue:1 of
msgid "Handle a queue of URLs to check."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cache.results.rst:2
msgid "linkcheck.cache.results"
msgstr ""

#: linkcheck.cache.results.ResultCache:1:<autosummary>:1 of
msgid ""
":obj:`ResultCache <linkcheck.cache.results.ResultCache>`\\ "
"\\(\\[max\\_size\\]\\)"
msgstr ""

#: linkcheck.cache.results.ResultCache:1:<autosummary>:1 of
msgid "Thread-safe cache of UrlData.to_wire() results."
msgstr ""

#: linkcheck.cache.results.ResultCache:1 of
msgid ""
"Thread-safe cache of UrlData.to_wire() results. the cache is limited in "
"size since we rather recheck the same URL multiple times instead of "
"running out of memory. format: {cache key (string) -> result "
"(UrlData.towire())}"
msgstr ""

#: linkcheck.cache.results.ResultCache:6 of
msgid "Initialize result cache."
msgstr ""

#: linkcheck.cache.results.ResultCache.add_result:1 of
msgid ""
"Add result object to cache with given key. The request is ignored when "
"the cache is already full or the key is None."
msgstr ""

#: linkcheck.cache.results.ResultCache.get_result:1 of
msgid "Return cached result or None if not found."
msgstr ""

#: linkcheck.cache.results.ResultCache.has_non_empty_result:1
#: linkcheck.cache.results.ResultCache.has_result:1 of
msgid "Non-thread-safe function for fast containment checks."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cache.robots_txt.rst:2
msgid "linkcheck.cache.robots\\_txt"
msgstr ""

#: linkcheck.cache.robots_txt.RobotsTxt:1:<autosummary>:1 of
msgid ":obj:`RobotsTxt <linkcheck.cache.robots_txt.RobotsTxt>`\\ \\(useragent\\)"
msgstr ""

#: linkcheck.cache.robots_txt.RobotsTxt:1:<autosummary>:1 of
msgid "Thread-safe cache of downloaded robots.txt files."
msgstr ""

#: linkcheck.cache.robots_txt.RobotsTxt:1 of
msgid ""
"Thread-safe cache of downloaded robots.txt files. format: {cache key "
"(string) -> robots.txt content (RobotFileParser)}"
msgstr ""

#: linkcheck.cache.robots_txt.RobotsTxt:4 of
msgid "Initialize per-URL robots.txt cache."
msgstr ""

#: linkcheck.cache.robots_txt.RobotsTxt.add_sitemap_urls:1 of
msgid "Add sitemap URLs to queue."
msgstr ""

#: linkcheck.cache.robots_txt.RobotsTxt.allows_url:1 of
msgid "Ask robots.txt allowance."
msgstr ""

#: linkcheck.cache.robots_txt.RobotsTxt.get_lock:1 of
msgid "Return lock for robots.txt url."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cache.urlqueue.rst:2
msgid "linkcheck.cache.urlqueue"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cache.urlqueue.rst:25:<autosummary>:1
msgid ""
":obj:`UrlQueue <linkcheck.cache.urlqueue.UrlQueue>`\\ "
"\\(\\[max\\_allowed\\_urls\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cache.urlqueue.rst:25:<autosummary>:1
msgid "A queue supporting several consumer tasks."
msgstr ""

#: linkcheck.cache.urlqueue.Empty:1:<autosummary>:1 of
msgid ":obj:`Empty <linkcheck.cache.urlqueue.Empty>`\\"
msgstr ""

#: linkcheck.cache.urlqueue.Empty:1
#: linkcheck.cache.urlqueue.Empty:1:<autosummary>:1 of
msgid "Exception raised by get()."
msgstr ""

#: linkcheck.cache.urlqueue.Empty:1:<autosummary>:1 of
msgid ":obj:`Timeout <linkcheck.cache.urlqueue.Timeout>`\\"
msgstr ""

#: linkcheck.cache.urlqueue.Empty:1:<autosummary>:1
#: linkcheck.cache.urlqueue.Timeout:1 of
msgid "Raised by join()"
msgstr ""

#: linkcheck.cache.urlqueue.UrlQueue:1 of
msgid ""
"A queue supporting several consumer tasks. The task_done() idea is from "
"the Python 2.5 implementation of Queue.Queue()."
msgstr ""

#: linkcheck.cache.urlqueue.UrlQueue:4 of
msgid "Initialize the queue state and task counters."
msgstr ""

#: linkcheck.cache.urlqueue.UrlQueue.cleanup:1 of
msgid "Move cached elements to top."
msgstr ""

#: linkcheck.cache.urlqueue.UrlQueue.do_shutdown:1 of
msgid "Shutdown the queue by not accepting any more URLs."
msgstr ""

#: linkcheck.cache.urlqueue.UrlQueue.empty:1 of
msgid ""
"Return True if the queue is empty, False otherwise. Result is thread-"
"safe, but not reliable since the queue could have been changed before the"
" result is returned!"
msgstr ""

#: linkcheck.cache.urlqueue.UrlQueue.get:1 of
msgid ""
"Get first not-in-progress url from the queue and return it. If no such "
"url is available return None."
msgstr ""

#: linkcheck.cache.urlqueue.UrlQueue.join:1 of
msgid "Blocks until all items in the Queue have been gotten and processed."
msgstr ""

#: linkcheck.cache.urlqueue.UrlQueue.join:3 of
msgid ""
"The count of unfinished tasks goes up whenever an item is added to the "
"queue. The count goes down whenever a consumer thread calls task_done() "
"to indicate the item was retrieved and all work on it is complete."
msgstr ""

#: linkcheck.cache.urlqueue.UrlQueue.join:7 of
msgid "When the count of unfinished tasks drops to zero, join() unblocks."
msgstr ""

#: linkcheck.cache.urlqueue.UrlQueue.put:1 of
msgid ""
"Put an item into the queue. Block if necessary until a free slot is "
"available."
msgstr ""

#: linkcheck.cache.urlqueue.UrlQueue.qsize:1 of
msgid "Return the approximate size of the queue (not reliable!)."
msgstr ""

#: linkcheck.cache.urlqueue.UrlQueue.status:1 of
msgid "Get tuple (finished tasks, in progress, queue size)."
msgstr ""

#: linkcheck.cache.urlqueue.UrlQueue.task_done:1 of
msgid "Indicate that a formerly enqueued task is complete."
msgstr ""

#: linkcheck.cache.urlqueue.UrlQueue.task_done:3 of
msgid ""
"Used by Queue consumer threads.  For each get() used to fetch a task, a "
"subsequent call to task_done() tells the queue that the processing on the"
" task is complete."
msgstr ""

#: linkcheck.cache.urlqueue.UrlQueue.task_done:7 of
msgid ""
"If a join() is currently blocking, it will resume when all items have "
"been processed (meaning that a task_done() call was received for every "
"item that had been put() into the queue)."
msgstr ""

#: linkcheck.cache.urlqueue.UrlQueue.task_done:11 of
msgid ""
"Raises a ValueError if called more times than there were items placed in "
"the queue."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:2
msgid "linkcheck.checker"
msgstr ""

#: linkcheck.checker.absolute_url:1:<autosummary>:1 of
msgid ""
":obj:`absolute_url <linkcheck.checker.absolute_url>`\\ \\(base\\_url\\, "
"base\\_ref\\, parent\\_url\\)"
msgstr ""

#: linkcheck.checker.absolute_url:1:<autosummary>:1 of
msgid "Search for the absolute url to detect the link type."
msgstr ""

#: linkcheck.checker.absolute_url:1:<autosummary>:1 of
msgid ":obj:`get_index_html <linkcheck.checker.get_index_html>`\\ \\(urls\\)"
msgstr ""

#: linkcheck.checker.absolute_url:1:<autosummary>:1
#: linkcheck.checker.get_index_html:1 of
msgid "Construct artificial index.html from given URLs."
msgstr ""

#: linkcheck.checker.absolute_url:1:<autosummary>:1 of
msgid ""
":obj:`get_url_from <linkcheck.checker.get_url_from>`\\ \\(base\\_url\\, "
"recursion\\_level\\, ...\\)"
msgstr ""

#: linkcheck.checker.absolute_url:1:<autosummary>:1
#: linkcheck.checker.get_url_from:1 of
msgid "Get url data from given base data."
msgstr ""

#: linkcheck.checker.absolute_url:1:<autosummary>:1 of
msgid ""
":obj:`get_urlclass_from <linkcheck.checker.get_urlclass_from>`\\ "
"\\(scheme\\[\\, assume\\_local\\_file\\]\\)"
msgstr ""

#: linkcheck.checker.absolute_url:1:<autosummary>:1 of
msgid "Return checker class for given URL scheme."
msgstr ""

#: linkcheck.checker.absolute_url:1:<autosummary>:1 of
msgid ":obj:`guess_url <linkcheck.checker.guess_url>`\\ \\(url\\)"
msgstr ""

#: linkcheck.checker.absolute_url:1:<autosummary>:1
#: linkcheck.checker.guess_url:1 of
msgid "Guess if URL is a http or ftp URL."
msgstr ""

#: linkcheck.checker.absolute_url:1 of
msgid ""
"Search for the absolute url to detect the link type. This does not join "
"any url fragments together!"
msgstr ""

#: linkcheck.checker.absolute_url:4 linkcheck.checker.get_url_from:3 of
msgid "base url from a link tag"
msgstr ""

#: linkcheck.checker.absolute_url:6 linkcheck.checker.get_url_from:11 of
msgid "base url from <base> tag"
msgstr ""

#: linkcheck.checker.absolute_url:8 of
msgid "url of parent document"
msgstr ""

#: linkcheck.checker.get_index_html:3 of
msgid "URL strings"
msgstr ""

#: linkcheck.checker.get_url_from:5 of
msgid "current recursion level"
msgstr ""

#: linkcheck.checker.get_url_from:7 of
msgid "aggregate object"
msgstr ""

#: linkcheck.checker.get_url_from:9 of
msgid "parent url"
msgstr ""

#: linkcheck.checker.get_url_from:13 of
msgid "line number"
msgstr ""

#: linkcheck.checker.get_url_from:15 of
msgid "column number"
msgstr ""

#: linkcheck.checker.get_url_from:17 of
msgid "page number"
msgstr ""

#: linkcheck.checker.get_url_from:19 of
msgid "link name"
msgstr ""

#: linkcheck.checker.get_url_from:21 of
msgid "(is_extern, is_strict) or None"
msgstr ""

#: linkcheck.checker.get_urlclass_from:1 of
msgid ""
"Return checker class for given URL scheme. If the scheme cannot be "
"matched and assume_local_file is True, assume a local file."
msgstr ""

#: linkcheck.checker.guess_url:3 of
msgid "the URL to check"
msgstr ""

#: linkcheck.checker.guess_url:5 of
msgid ""
"url with http:// or ftp:// prepended if it's detected as a http "
"respective ftp URL."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.checker.const <linkcheck.checker.const>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
#: linkcheck.checker.const:1 of
msgid "Helper constants."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.checker.dnsurl <linkcheck.checker.dnsurl>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
#: linkcheck.checker.dnsurl:1 of
msgid "Handler for dns: links."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.checker.fileurl <linkcheck.checker.fileurl>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
#: linkcheck.checker.fileurl:1 of
msgid "Handle local file: links."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.checker.ftpurl <linkcheck.checker.ftpurl>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
#: linkcheck.checker.ftpurl:1 of
msgid "Handle FTP links."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.checker.httpurl <linkcheck.checker.httpurl>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
#: linkcheck.checker.httpurl:1 of
msgid "Handle http links."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.checker.ignoreurl <linkcheck.checker.ignoreurl>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
#: linkcheck.checker.ignoreurl:1 of
msgid "Handle ignored URLs."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.checker.internpaturl <linkcheck.checker.internpaturl>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
#: linkcheck.checker.internpaturl:1 of
msgid "Intern URL pattern support."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
msgid ""
":obj:`linkcheck.checker.itmsservicesurl "
"<linkcheck.checker.itmsservicesurl>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
#: linkcheck.checker.itmsservicesurl:1 of
msgid "Handle itms-services URLs."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.checker.mailtourl <linkcheck.checker.mailtourl>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
#: linkcheck.checker.mailtourl:1 of
msgid "Handler for mailto: links."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.checker.nntpurl <linkcheck.checker.nntpurl>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
#: linkcheck.checker.nntpurl:1 of
msgid "Handle nntp: and news: links."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.checker.proxysupport <linkcheck.checker.proxysupport>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
#: linkcheck.checker.proxysupport:1 of
msgid "Mixin class for URLs that can be fetched over a proxy."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.checker.telneturl <linkcheck.checker.telneturl>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
#: linkcheck.checker.telneturl:1 of
msgid "Handle telnet: links."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.checker.unknownurl <linkcheck.checker.unknownurl>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
#: linkcheck.checker.unknownurl:1 of
msgid "Handle uncheckable URLs."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.checker.urlbase <linkcheck.checker.urlbase>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
#: linkcheck.checker.urlbase:1 of
msgid "Base URL handler."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.const.rst:2
msgid "linkcheck.checker.const"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.dnsurl.rst:2
msgid "linkcheck.checker.dnsurl"
msgstr ""

#: linkcheck.checker.dnsurl.DnsUrl:1:<autosummary>:1 of
msgid ""
":obj:`DnsUrl <linkcheck.checker.dnsurl.DnsUrl>`\\ \\(base\\_url\\, "
"recursion\\_level\\, aggregate\\)"
msgstr ""

#: linkcheck.checker.dnsurl.DnsUrl:1
#: linkcheck.checker.dnsurl.DnsUrl:1:<autosummary>:1 of
msgid "Url link with dns scheme."
msgstr ""

#: linkcheck.checker.dnsurl.DnsUrl:1 linkcheck.checker.fileurl.FileUrl:1
#: linkcheck.checker.internpaturl.InternPatternUrl:1
#: linkcheck.checker.itmsservicesurl.ItmsServicesUrl:1
#: linkcheck.checker.mailtourl.MailtoUrl:1 linkcheck.checker.nntpurl.NntpUrl:1
#: linkcheck.checker.telneturl.TelnetUrl:1
#: linkcheck.checker.unknownurl.UnknownUrl:1 of
msgid "Bases: :class:`linkcheck.checker.urlbase.UrlBase`"
msgstr ""

#: linkcheck.checker.dnsurl.DnsUrl:3 linkcheck.checker.fileurl.FileUrl:3
#: linkcheck.checker.ftpurl.FtpUrl:3 linkcheck.checker.httpurl.HttpUrl:3
#: linkcheck.checker.ignoreurl.IgnoreUrl:3
#: linkcheck.checker.internpaturl.InternPatternUrl:3
#: linkcheck.checker.itmsservicesurl.ItmsServicesUrl:3
#: linkcheck.checker.mailtourl.MailtoUrl:3 linkcheck.checker.nntpurl.NntpUrl:3
#: linkcheck.checker.telneturl.TelnetUrl:3
#: linkcheck.checker.unknownurl.UnknownUrl:3
#: linkcheck.checker.urlbase.UrlBase:3 of
msgid "Initialize check data, and store given variables."
msgstr ""

#: linkcheck.checker.dnsurl.DnsUrl:5 linkcheck.checker.fileurl.FileUrl:5
#: linkcheck.checker.ftpurl.FtpUrl:5 linkcheck.checker.httpurl.HttpUrl:5
#: linkcheck.checker.ignoreurl.IgnoreUrl:5
#: linkcheck.checker.internpaturl.InternPatternUrl:5
#: linkcheck.checker.itmsservicesurl.ItmsServicesUrl:5
#: linkcheck.checker.mailtourl.MailtoUrl:5 linkcheck.checker.nntpurl.NntpUrl:5
#: linkcheck.checker.telneturl.TelnetUrl:5
#: linkcheck.checker.unknownurl.UnknownUrl:5
#: linkcheck.checker.urlbase.UrlBase:5 of
msgid "unquoted and possibly unnormed url"
msgstr ""

#: linkcheck.checker.dnsurl.DnsUrl:6 linkcheck.checker.fileurl.FileUrl:6
#: linkcheck.checker.ftpurl.FtpUrl:6 linkcheck.checker.httpurl.HttpUrl:6
#: linkcheck.checker.ignoreurl.IgnoreUrl:6
#: linkcheck.checker.internpaturl.InternPatternUrl:6
#: linkcheck.checker.itmsservicesurl.ItmsServicesUrl:6
#: linkcheck.checker.mailtourl.MailtoUrl:6 linkcheck.checker.nntpurl.NntpUrl:6
#: linkcheck.checker.telneturl.TelnetUrl:6
#: linkcheck.checker.unknownurl.UnknownUrl:6
#: linkcheck.checker.urlbase.UrlBase:6 of
msgid "on what check level lies the base url"
msgstr ""

#: linkcheck.checker.dnsurl.DnsUrl:7 linkcheck.checker.fileurl.FileUrl:7
#: linkcheck.checker.ftpurl.FtpUrl:7 linkcheck.checker.httpurl.HttpUrl:7
#: linkcheck.checker.ignoreurl.IgnoreUrl:7
#: linkcheck.checker.internpaturl.InternPatternUrl:7
#: linkcheck.checker.itmsservicesurl.ItmsServicesUrl:7
#: linkcheck.checker.mailtourl.MailtoUrl:7 linkcheck.checker.nntpurl.NntpUrl:7
#: linkcheck.checker.telneturl.TelnetUrl:7
#: linkcheck.checker.unknownurl.UnknownUrl:7
#: linkcheck.checker.urlbase.UrlBase:7 of
msgid "aggregate instance"
msgstr ""

#: linkcheck.checker.dnsurl.DnsUrl:8 linkcheck.checker.fileurl.FileUrl:8
#: linkcheck.checker.ftpurl.FtpUrl:8 linkcheck.checker.httpurl.HttpUrl:8
#: linkcheck.checker.ignoreurl.IgnoreUrl:8
#: linkcheck.checker.internpaturl.InternPatternUrl:8
#: linkcheck.checker.itmsservicesurl.ItmsServicesUrl:8
#: linkcheck.checker.mailtourl.MailtoUrl:8 linkcheck.checker.nntpurl.NntpUrl:8
#: linkcheck.checker.telneturl.TelnetUrl:8
#: linkcheck.checker.unknownurl.UnknownUrl:8
#: linkcheck.checker.urlbase.UrlBase:8 of
msgid "quoted and normed url of parent or None"
msgstr ""

#: linkcheck.checker.dnsurl.DnsUrl:9 linkcheck.checker.fileurl.FileUrl:9
#: linkcheck.checker.ftpurl.FtpUrl:9 linkcheck.checker.httpurl.HttpUrl:9
#: linkcheck.checker.ignoreurl.IgnoreUrl:9
#: linkcheck.checker.internpaturl.InternPatternUrl:9
#: linkcheck.checker.itmsservicesurl.ItmsServicesUrl:9
#: linkcheck.checker.mailtourl.MailtoUrl:9 linkcheck.checker.nntpurl.NntpUrl:9
#: linkcheck.checker.telneturl.TelnetUrl:9
#: linkcheck.checker.unknownurl.UnknownUrl:9
#: linkcheck.checker.urlbase.UrlBase:9 of
msgid "quoted and normed url of <base href=\"\"> or None"
msgstr ""

#: linkcheck.checker.dnsurl.DnsUrl:10 linkcheck.checker.fileurl.FileUrl:10
#: linkcheck.checker.ftpurl.FtpUrl:10 linkcheck.checker.httpurl.HttpUrl:10
#: linkcheck.checker.ignoreurl.IgnoreUrl:10
#: linkcheck.checker.internpaturl.InternPatternUrl:10
#: linkcheck.checker.itmsservicesurl.ItmsServicesUrl:10
#: linkcheck.checker.mailtourl.MailtoUrl:10
#: linkcheck.checker.nntpurl.NntpUrl:10
#: linkcheck.checker.telneturl.TelnetUrl:10
#: linkcheck.checker.unknownurl.UnknownUrl:10
#: linkcheck.checker.urlbase.UrlBase:10 of
msgid "line number of url in parent content"
msgstr ""

#: linkcheck.checker.dnsurl.DnsUrl:11 linkcheck.checker.fileurl.FileUrl:11
#: linkcheck.checker.ftpurl.FtpUrl:11 linkcheck.checker.httpurl.HttpUrl:11
#: linkcheck.checker.ignoreurl.IgnoreUrl:11
#: linkcheck.checker.internpaturl.InternPatternUrl:11
#: linkcheck.checker.itmsservicesurl.ItmsServicesUrl:11
#: linkcheck.checker.mailtourl.MailtoUrl:11
#: linkcheck.checker.nntpurl.NntpUrl:11
#: linkcheck.checker.telneturl.TelnetUrl:11
#: linkcheck.checker.unknownurl.UnknownUrl:11
#: linkcheck.checker.urlbase.UrlBase:11 of
msgid "column number of url in parent content"
msgstr ""

#: linkcheck.checker.dnsurl.DnsUrl:12 linkcheck.checker.fileurl.FileUrl:12
#: linkcheck.checker.ftpurl.FtpUrl:12 linkcheck.checker.httpurl.HttpUrl:12
#: linkcheck.checker.ignoreurl.IgnoreUrl:12
#: linkcheck.checker.internpaturl.InternPatternUrl:12
#: linkcheck.checker.itmsservicesurl.ItmsServicesUrl:12
#: linkcheck.checker.mailtourl.MailtoUrl:12
#: linkcheck.checker.nntpurl.NntpUrl:12
#: linkcheck.checker.telneturl.TelnetUrl:12
#: linkcheck.checker.unknownurl.UnknownUrl:12
#: linkcheck.checker.urlbase.UrlBase:12 of
msgid "page number of url in parent content"
msgstr ""

#: linkcheck.checker.dnsurl.DnsUrl:13 linkcheck.checker.fileurl.FileUrl:13
#: linkcheck.checker.ftpurl.FtpUrl:13 linkcheck.checker.httpurl.HttpUrl:13
#: linkcheck.checker.ignoreurl.IgnoreUrl:13
#: linkcheck.checker.internpaturl.InternPatternUrl:13
#: linkcheck.checker.itmsservicesurl.ItmsServicesUrl:13
#: linkcheck.checker.mailtourl.MailtoUrl:13
#: linkcheck.checker.nntpurl.NntpUrl:13
#: linkcheck.checker.telneturl.TelnetUrl:13
#: linkcheck.checker.unknownurl.UnknownUrl:13
#: linkcheck.checker.urlbase.UrlBase:13 of
msgid "name of url or empty"
msgstr ""

#: linkcheck.checker.dnsurl.DnsUrl:14 linkcheck.checker.fileurl.FileUrl:14
#: linkcheck.checker.ftpurl.FtpUrl:14 linkcheck.checker.httpurl.HttpUrl:14
#: linkcheck.checker.ignoreurl.IgnoreUrl:14
#: linkcheck.checker.internpaturl.InternPatternUrl:14
#: linkcheck.checker.itmsservicesurl.ItmsServicesUrl:14
#: linkcheck.checker.mailtourl.MailtoUrl:14
#: linkcheck.checker.nntpurl.NntpUrl:14
#: linkcheck.checker.telneturl.TelnetUrl:14
#: linkcheck.checker.unknownurl.UnknownUrl:14
#: linkcheck.checker.urlbase.UrlBase:14 of
msgid "encoding of URL or None"
msgstr ""

#: linkcheck.checker.dnsurl.DnsUrl:15 linkcheck.checker.fileurl.FileUrl:15
#: linkcheck.checker.ftpurl.FtpUrl:15 linkcheck.checker.httpurl.HttpUrl:15
#: linkcheck.checker.ignoreurl.IgnoreUrl:15
#: linkcheck.checker.internpaturl.InternPatternUrl:15
#: linkcheck.checker.itmsservicesurl.ItmsServicesUrl:15
#: linkcheck.checker.mailtourl.MailtoUrl:15
#: linkcheck.checker.nntpurl.NntpUrl:15
#: linkcheck.checker.telneturl.TelnetUrl:15
#: linkcheck.checker.unknownurl.UnknownUrl:15
#: linkcheck.checker.urlbase.UrlBase:15 of
msgid "None or (is_extern, is_strict)"
msgstr ""

#: linkcheck.checker.dnsurl.DnsUrl.can_get_content:1 of
msgid "dns: URLs do not have any content"
msgstr ""

#: linkcheck.checker.dnsurl.DnsUrl.can_get_content:3
#: linkcheck.checker.mailtourl.MailtoUrl.can_get_content:3
#: linkcheck.checker.nntpurl.NntpUrl.can_get_content:3
#: linkcheck.checker.telneturl.TelnetUrl.can_get_content:3
#: linkcheck.checker.unknownurl.UnknownUrl.can_get_content:3 of
msgid "False"
msgstr ""

#: linkcheck.checker.dnsurl.DnsUrl.check_connection:1 of
msgid "Resolve hostname."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.fileurl.rst:2
msgid "linkcheck.checker.fileurl"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.fileurl.rst:25:<autosummary>:1
msgid ":obj:`get_files <linkcheck.checker.fileurl.get_files>`\\ \\(dirname\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.fileurl.rst:25:<autosummary>:1
msgid "Get iterator of entries in directory."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.fileurl.rst:25:<autosummary>:1
msgid ""
":obj:`get_nt_filename <linkcheck.checker.fileurl.get_nt_filename>`\\ "
"\\(path\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.fileurl.rst:25:<autosummary>:1
#: linkcheck.checker.fileurl.get_nt_filename:1 of
msgid "Return case sensitive filename for NT path."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.fileurl.rst:25:<autosummary>:1
msgid ""
":obj:`get_os_filename <linkcheck.checker.fileurl.get_os_filename>`\\ "
"\\(path\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.fileurl.rst:25:<autosummary>:1
#: linkcheck.checker.fileurl.get_os_filename:1 of
msgid "Return filesystem path for given URL path."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.fileurl.rst:25:<autosummary>:1
msgid ""
":obj:`is_absolute_path <linkcheck.checker.fileurl.is_absolute_path>`\\ "
"\\(path\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.fileurl.rst:25:<autosummary>:1
msgid "Check if given path is absolute."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.fileurl.rst:25:<autosummary>:1
msgid ""
":obj:`prepare_urlpath_for_nt "
"<linkcheck.checker.fileurl.prepare_urlpath_for_nt>`\\ \\(path\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.fileurl.rst:25:<autosummary>:1
msgid "URLs like 'file://server/path/' result in a path named '/server/path'."
msgstr ""

#: linkcheck.checker.fileurl.FileUrl:1:<autosummary>:1 of
msgid ""
":obj:`FileUrl <linkcheck.checker.fileurl.FileUrl>`\\ \\(base\\_url\\, "
"recursion\\_level\\, aggregate\\)"
msgstr ""

#: linkcheck.checker.fileurl.FileUrl:1
#: linkcheck.checker.fileurl.FileUrl:1:<autosummary>:1 of
msgid "Url link with file scheme."
msgstr ""

#: linkcheck.checker.fileurl.FileUrl.add_size_info:1 of
msgid "Get size of file content and modification time from filename path."
msgstr ""

#: linkcheck.checker.fileurl.FileUrl.add_url:1 of
msgid ""
"If a local webroot directory is configured, replace absolute URLs with "
"it. After that queue the URL data for checking."
msgstr ""

#: linkcheck.checker.fileurl.FileUrl.build_base_url:1 of
msgid ""
"The URL is normed according to the platform: - the base URL is made an "
"absolute file:// URL - under Windows platform the drive specifier is "
"normed"
msgstr ""

#: linkcheck.checker.fileurl.FileUrl.build_url:1 of
msgid "Calls super.build_url() and adds a trailing slash to directories."
msgstr ""

#: linkcheck.checker.fileurl.FileUrl.check_case_sensitivity:1 of
msgid ""
"Check if url and windows path name match cases else there might be "
"problems when copying such files on web servers that are case sensitive."
msgstr ""

#: linkcheck.checker.fileurl.FileUrl.check_connection:1 of
msgid ""
"Try to open the local file. Under NT systems the case sensitivity is "
"checked."
msgstr ""

#: linkcheck.checker.fileurl.FileUrl.get_intern_pattern:1
#: linkcheck.checker.internpaturl.InternPatternUrl.get_intern_pattern:1
#: linkcheck.checker.urlbase.UrlBase.get_intern_pattern:1 of
msgid "Get pattern for intern URL matching."
msgstr ""

#: linkcheck.checker.fileurl.FileUrl.get_intern_pattern:3
#: linkcheck.checker.internpaturl.InternPatternUrl.get_intern_pattern:3 of
msgid ":return non-empty regex pattern or None :rtype String or None"
msgstr ""

#: linkcheck.checker.fileurl.FileUrl.get_os_filename:1 of
msgid "Construct os specific file path out of the file:// URL."
msgstr ""

#: linkcheck.checker.fileurl.FileUrl.get_os_filename:3 of
msgid "file name"
msgstr ""

#: linkcheck.checker.fileurl.FileUrl.get_temp_filename:1 of
msgid "Get filename for content to parse."
msgstr ""

#: linkcheck.checker.fileurl.FileUrl.init:1 of
msgid "Initialize the scheme."
msgstr ""

#: linkcheck.checker.fileurl.FileUrl.is_directory:1 of
msgid "Check if file is a directory."
msgstr ""

#: linkcheck.checker.fileurl.FileUrl.is_directory:3 of
msgid "True iff file is a directory"
msgstr ""

#: linkcheck.checker.fileurl.FileUrl.is_parseable:1
#: linkcheck.checker.httpurl.HttpUrl.is_parseable:1 of
msgid "Check if content is parseable for recursion."
msgstr ""

#: linkcheck.checker.fileurl.FileUrl.is_parseable:3
#: linkcheck.checker.httpurl.HttpUrl.is_parseable:3 of
msgid "True if content is parseable"
msgstr ""

#: linkcheck.checker.fileurl.FileUrl.read_content:1 of
msgid ""
"Return file content, or in case of directories a dummy HTML file with "
"links to the files."
msgstr ""

#: linkcheck.checker.fileurl.FileUrl.set_content_type:1 of
msgid ""
"Return URL content type, or an empty string if content type could not be "
"found."
msgstr ""

#: linkcheck.checker.fileurl.get_files:1 of
msgid ""
"Get iterator of entries in directory. Only allows regular files and "
"directories, no symlinks."
msgstr ""

#: linkcheck.checker.fileurl.is_absolute_path:1 of
msgid ""
"Check if given path is absolute. On Windows absolute paths start with a "
"drive letter. On all other systems absolute paths start with a slash."
msgstr ""

#: linkcheck.checker.fileurl.prepare_urlpath_for_nt:1 of
msgid ""
"URLs like 'file://server/path/' result in a path named '/server/path'. "
"However urllib.url2pathname expects '////server/path'."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.ftpurl.rst:2
msgid "linkcheck.checker.ftpurl"
msgstr ""

#: linkcheck.checker.ftpurl.FtpUrl:1:<autosummary>:1 of
msgid ""
":obj:`FtpUrl <linkcheck.checker.ftpurl.FtpUrl>`\\ \\(base\\_url\\, "
"recursion\\_level\\, aggregate\\)"
msgstr ""

#: linkcheck.checker.ftpurl.FtpUrl:1
#: linkcheck.checker.ftpurl.FtpUrl:1:<autosummary>:1 of
msgid "Url link with ftp scheme."
msgstr ""

#: linkcheck.checker.ftpurl.FtpUrl:1 linkcheck.checker.httpurl.HttpUrl:1 of
msgid ""
"Bases: :class:`linkcheck.checker.internpaturl.InternPatternUrl`, "
":class:`linkcheck.checker.proxysupport.ProxySupport`"
msgstr ""

#: linkcheck.checker.ftpurl.FtpUrl.check_connection:1 of
msgid ""
"In case of proxy, delegate to HttpUrl. Else check in this order: login, "
"changing directory, list the file."
msgstr ""

#: linkcheck.checker.ftpurl.FtpUrl.close_connection:1 of
msgid "Release the open connection from the connection pool."
msgstr ""

#: linkcheck.checker.ftpurl.FtpUrl.cwd:1 of
msgid "Change to URL parent directory. Return filename of last path component."
msgstr ""

#: linkcheck.checker.ftpurl.FtpUrl.get_files:1 of
msgid "Get list of filenames in directory. Subdirectories have an ending slash."
msgstr ""

#: linkcheck.checker.ftpurl.FtpUrl.is_directory:1 of
msgid "See if URL target is a directory."
msgstr ""

#: linkcheck.checker.ftpurl.FtpUrl.is_parseable:1 of
msgid "See if URL target is parseable for recursion."
msgstr ""

#: linkcheck.checker.ftpurl.FtpUrl.listfile:1 of
msgid "See if filename is in the current FTP directory."
msgstr ""

#: linkcheck.checker.ftpurl.FtpUrl.login:1 of
msgid "Log into ftp server and check the welcome message."
msgstr ""

#: linkcheck.checker.ftpurl.FtpUrl.negotiate_encoding:1 of
msgid "Check if server can handle UTF-8 encoded filenames. See also RFC 2640."
msgstr ""

#: linkcheck.checker.ftpurl.FtpUrl.read_content:1 of
msgid ""
"Return URL target content, or in case of directories a dummy HTML file "
"with links to the files."
msgstr ""

#: linkcheck.checker.ftpurl.FtpUrl.reset:1 of
msgid "Initialize FTP url data."
msgstr ""

#: linkcheck.checker.ftpurl.FtpUrl.set_content_type:1 of
msgid ""
"Set URL content type, or an empty string if content type could not be "
"found."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.httpurl.rst:2
msgid "linkcheck.checker.httpurl"
msgstr ""

#: linkcheck.checker.httpurl.HttpUrl:1:<autosummary>:1 of
msgid ""
":obj:`HttpUrl <linkcheck.checker.httpurl.HttpUrl>`\\ \\(base\\_url\\, "
"recursion\\_level\\, aggregate\\)"
msgstr ""

#: linkcheck.checker.httpurl.HttpUrl:1
#: linkcheck.checker.httpurl.HttpUrl:1:<autosummary>:1 of
msgid "Url link with http scheme."
msgstr ""

#: linkcheck.checker.httpurl.HttpUrl.add_size_info:1 of
msgid "Get size of URL content from HTTP header."
msgstr ""

#: linkcheck.checker.httpurl.HttpUrl.allows_robots:1 of
msgid ""
"Fetch and parse the robots.txt of given url. Checks if LinkChecker can "
"get the requested resource content."
msgstr ""

#: linkcheck.checker.httpurl.HttpUrl.allows_robots:4 of
msgid "the url to be requested"
msgstr ""

#: linkcheck.checker.httpurl.HttpUrl.allows_robots:6 of
msgid "True if access is granted, otherwise False"
msgstr ""

#: linkcheck.checker.httpurl.HttpUrl.build_request:1 of
msgid "Build a prepared request object."
msgstr ""

#: linkcheck.checker.httpurl.HttpUrl.check_connection:1 of
msgid ""
"Check a URL with HTTP protocol. Here is an excerpt from RFC 1945 with "
"common response codes: The first digit of the Status-Code defines the "
"class of response. The last two digits do not have any categorization "
"role. There are 5 values for the first digit:"
msgstr ""

#: linkcheck.checker.httpurl.HttpUrl.check_connection:7 of
msgid "1xx: Informational - Not used, but reserved for future use"
msgstr ""

#: linkcheck.checker.httpurl.HttpUrl.check_connection:8 of
msgid ""
"2xx: Success - The action was successfully received, understood, and "
"accepted"
msgstr ""

#: linkcheck.checker.httpurl.HttpUrl.check_connection:10 of
msgid ""
"3xx: Redirection - Further action must be taken in order to complete the "
"request"
msgstr ""

#: linkcheck.checker.httpurl.HttpUrl.check_connection:12 of
msgid "4xx: Client Error - The request contains bad syntax or cannot be fulfilled"
msgstr ""

#: linkcheck.checker.httpurl.HttpUrl.check_connection:14 of
msgid ""
"5xx: Server Error - The server failed to fulfill an apparently valid "
"request"
msgstr ""

#: linkcheck.checker.httpurl.HttpUrl.check_response:1 of
msgid "Check final result and log it."
msgstr ""

#: linkcheck.checker.httpurl.HttpUrl.construct_auth:1 of
msgid ""
"Construct HTTP Basic authentication credentials if there is user/password"
" information available. Does not overwrite if credentials have already "
"been constructed."
msgstr ""

#: linkcheck.checker.httpurl.HttpUrl.content_allows_robots:1 of
msgid ""
"Return False if the content of this URL forbids robots to search for "
"recursive links."
msgstr ""

#: linkcheck.checker.httpurl.HttpUrl.follow_redirections:1 of
msgid "Follow all redirections of http response."
msgstr ""

#: linkcheck.checker.httpurl.HttpUrl.get_redirects:1 of
msgid "Return iterator of redirects for given request."
msgstr ""

#: linkcheck.checker.httpurl.HttpUrl.get_request_kwargs:1 of
msgid ""
"Construct keyword parameters for Session.request() and "
"Session.resolve_redirects()."
msgstr ""

#: linkcheck.checker.httpurl.HttpUrl.get_robots_txt_url:1 of
msgid "Get the according robots.txt URL for this URL."
msgstr ""

#: linkcheck.checker.httpurl.HttpUrl.get_robots_txt_url:3 of
msgid "robots.txt URL"
msgstr ""

#: linkcheck.checker.httpurl.HttpUrl.is_redirect:1 of
msgid "Check if current response is a redirect."
msgstr ""

#: linkcheck.checker.httpurl.HttpUrl.parse_header_links:1 of
msgid "Parse URLs in HTTP headers Link:."
msgstr ""

#: linkcheck.checker.httpurl.HttpUrl.read_content:1 of
msgid "Return data and data size for this URL. Can be overridden in subclasses."
msgstr ""

#: linkcheck.checker.httpurl.HttpUrl.reset:1 of
msgid "Initialize HTTP specific variables."
msgstr ""

#: linkcheck.checker.httpurl.HttpUrl.send_request:1 of
msgid "Send request and store response in self.url_connection."
msgstr ""

#: linkcheck.checker.httpurl.HttpUrl.set_content_type:1 of
msgid "Return content MIME type or empty string."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.ignoreurl.rst:2
msgid "linkcheck.checker.ignoreurl"
msgstr ""

#: linkcheck.checker.ignoreurl.IgnoreUrl:1:<autosummary>:1 of
msgid ""
":obj:`IgnoreUrl <linkcheck.checker.ignoreurl.IgnoreUrl>`\\ "
"\\(base\\_url\\, recursion\\_level\\, aggregate\\)"
msgstr ""

#: linkcheck.checker.ignoreurl.IgnoreUrl:1
#: linkcheck.checker.ignoreurl.IgnoreUrl:1:<autosummary>:1 of
msgid "Always ignored URL."
msgstr ""

#: linkcheck.checker.ignoreurl.IgnoreUrl:1 of
msgid "Bases: :class:`linkcheck.checker.unknownurl.UnknownUrl`"
msgstr ""

#: linkcheck.checker.ignoreurl.IgnoreUrl.is_ignored:1
#: linkcheck.checker.unknownurl.UnknownUrl.is_ignored:1 of
msgid "Return True if this URL scheme is ignored."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.internpaturl.rst:2
msgid "linkcheck.checker.internpaturl"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.internpaturl.rst:21:<autosummary>:1
msgid ""
":obj:`get_intern_pattern "
"<linkcheck.checker.internpaturl.get_intern_pattern>`\\ \\(url\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.internpaturl.rst:21:<autosummary>:1
msgid "Return intern pattern for given URL."
msgstr ""

#: linkcheck.checker.internpaturl.InternPatternUrl:1:<autosummary>:1 of
msgid ""
":obj:`InternPatternUrl "
"<linkcheck.checker.internpaturl.InternPatternUrl>`\\ \\(base\\_url\\, "
"recursion\\_level\\, ...\\)"
msgstr ""

#: linkcheck.checker.internpaturl.InternPatternUrl:1
#: linkcheck.checker.internpaturl.InternPatternUrl:1:<autosummary>:1 of
msgid "Class supporting an intern URL pattern."
msgstr ""

#: linkcheck.checker.internpaturl.get_intern_pattern:1 of
msgid ""
"Return intern pattern for given URL. Redirections to the same domain with"
" or without \"www.\" prepended are allowed."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.itmsservicesurl.rst:2
msgid "linkcheck.checker.itmsservicesurl"
msgstr ""

#: linkcheck.checker.itmsservicesurl.ItmsServicesUrl:1:<autosummary>:1 of
msgid ""
":obj:`ItmsServicesUrl "
"<linkcheck.checker.itmsservicesurl.ItmsServicesUrl>`\\ \\(base\\_url\\, "
"recursion\\_level\\, ...\\)"
msgstr ""

#: linkcheck.checker.itmsservicesurl.ItmsServicesUrl:1
#: linkcheck.checker.itmsservicesurl.ItmsServicesUrl:1:<autosummary>:1 of
msgid "Apple iOS application download URLs."
msgstr ""

#: linkcheck.checker.itmsservicesurl.ItmsServicesUrl.check_content:1 of
msgid "Allow recursion to check the url CGI param."
msgstr ""

#: linkcheck.checker.itmsservicesurl.ItmsServicesUrl.check_syntax:1
#: linkcheck.checker.unknownurl.UnknownUrl.build_url:1 of
msgid "Only logs that this URL is unknown."
msgstr ""

#: linkcheck.checker.itmsservicesurl.ItmsServicesUrl.is_parseable:1 of
msgid "This URL is parseable."
msgstr ""

#: linkcheck.checker.itmsservicesurl.ItmsServicesUrl.local_check:1 of
msgid "Disable content checks."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.mailtourl.rst:2
msgid "linkcheck.checker.mailtourl"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.mailtourl.rst:24:<autosummary>:1
msgid ""
":obj:`getaddresses <linkcheck.checker.mailtourl.getaddresses>`\\ "
"\\(addr\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.mailtourl.rst:24:<autosummary>:1
#: linkcheck.checker.mailtourl.getaddresses:1 of
msgid "Return list of email addresses from given field value."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.mailtourl.rst:24:<autosummary>:1
msgid ":obj:`is_literal <linkcheck.checker.mailtourl.is_literal>`\\ \\(domain\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.mailtourl.rst:24:<autosummary>:1
#: linkcheck.checker.mailtourl.is_literal:1 of
msgid "Return True iff domain string is a literal."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.mailtourl.rst:24:<autosummary>:1
msgid ""
":obj:`is_missing_quote <linkcheck.checker.mailtourl.is_missing_quote>`\\ "
"\\(addr\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.mailtourl.rst:24:<autosummary>:1
#: linkcheck.checker.mailtourl.is_missing_quote:1 of
msgid "Return True iff mail address is not correctly quoted."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.mailtourl.rst:24:<autosummary>:1
msgid ":obj:`is_quoted <linkcheck.checker.mailtourl.is_quoted>`\\ \\(addr\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.mailtourl.rst:24:<autosummary>:1
#: linkcheck.checker.mailtourl.is_quoted:1 of
msgid "Return True iff mail address string is quoted."
msgstr ""

#: linkcheck.checker.mailtourl.MailtoUrl:1:<autosummary>:1 of
msgid ""
":obj:`MailtoUrl <linkcheck.checker.mailtourl.MailtoUrl>`\\ "
"\\(base\\_url\\, recursion\\_level\\, aggregate\\)"
msgstr ""

#: linkcheck.checker.mailtourl.MailtoUrl:1
#: linkcheck.checker.mailtourl.MailtoUrl:1:<autosummary>:1 of
msgid "Url link with mailto scheme."
msgstr ""

#: linkcheck.checker.mailtourl.MailtoUrl.build_url:1 of
msgid ""
"Call super.build_url(), extract list of mail addresses from URL, and "
"check their syntax."
msgstr ""

#: linkcheck.checker.mailtourl.MailtoUrl.can_get_content:1 of
msgid "mailto: URLs do not have any content"
msgstr ""

#: linkcheck.checker.mailtourl.MailtoUrl.check_connection:1 of
msgid ""
"Verify a list of email addresses. If one address fails, the whole list "
"will fail."
msgstr ""

#: linkcheck.checker.mailtourl.MailtoUrl.check_connection:4 of
msgid ""
"For each mail address the MX DNS records are found. If no MX records are "
"found, print a warning and try to look for A DNS records. If no A records"
" are found either print an error."
msgstr ""

#: linkcheck.checker.mailtourl.MailtoUrl.check_email_syntax:1 of
msgid "Check email syntax. The relevant RFCs:"
msgstr ""

#: linkcheck.checker.mailtourl.MailtoUrl.check_email_syntax:3 of
msgid "How to check names (memo): https://tools.ietf.org/html/rfc3696"
msgstr ""

#: linkcheck.checker.mailtourl.MailtoUrl.check_email_syntax:5 of
msgid "Email address syntax https://tools.ietf.org/html/rfc2822"
msgstr ""

#: linkcheck.checker.mailtourl.MailtoUrl.check_email_syntax:7 of
msgid "SMTP protocol https://tools.ietf.org/html/rfc5321#section-4.1.3"
msgstr ""

#: linkcheck.checker.mailtourl.MailtoUrl.check_email_syntax:9 of
msgid "IPv6 https://tools.ietf.org/html/rfc4291#section-2.2"
msgstr ""

#: linkcheck.checker.mailtourl.MailtoUrl.check_email_syntax:11 of
msgid "Host syntax https://tools.ietf.org/html/rfc1123#section-2"
msgstr ""

#: linkcheck.checker.mailtourl.MailtoUrl.check_smtp_domain:1 of
msgid "Check a single mail address."
msgstr ""

#: linkcheck.checker.mailtourl.MailtoUrl.parse_addresses:1 of
msgid ""
"Parse all mail addresses out of the URL target. Also parses optional CGI "
"headers like \"?to=foo@example.org\". Stores parsed addresses in the "
"self.addresses set."
msgstr ""

#: linkcheck.checker.mailtourl.MailtoUrl.set_cache_url:1 of
msgid "The cache url is a comma separated list of emails."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.nntpurl.rst:2
msgid "linkcheck.checker.nntpurl"
msgstr ""

#: linkcheck.checker.nntpurl.NntpUrl:1:<autosummary>:1 of
msgid ""
":obj:`NntpUrl <linkcheck.checker.nntpurl.NntpUrl>`\\ \\(base\\_url\\, "
"recursion\\_level\\, aggregate\\)"
msgstr ""

#: linkcheck.checker.nntpurl.NntpUrl:1
#: linkcheck.checker.nntpurl.NntpUrl:1:<autosummary>:1 of
msgid "Url link with NNTP scheme."
msgstr ""

#: linkcheck.checker.nntpurl.NntpUrl.can_get_content:1 of
msgid "NNTP urls have no content."
msgstr ""

#: linkcheck.checker.nntpurl.NntpUrl.check_connection:1 of
msgid ""
"Connect to NNTP server and try to request the URL article resource (if "
"specified)."
msgstr ""

#: linkcheck.checker.nntpurl.NntpUrl.wait:1 of
msgid "Wait some time before trying to connect again."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.proxysupport.rst:2
msgid "linkcheck.checker.proxysupport"
msgstr ""

#: linkcheck.checker.proxysupport.ProxySupport:1:<autosummary>:1 of
msgid ":obj:`ProxySupport <linkcheck.checker.proxysupport.ProxySupport>`\\ \\(\\)"
msgstr ""

#: linkcheck.checker.proxysupport.ProxySupport:1
#: linkcheck.checker.proxysupport.ProxySupport:1:<autosummary>:1 of
msgid "Get support for proxying and for URLs with user:pass@host setting."
msgstr ""

#: linkcheck.checker.proxysupport.ProxySupport.get_netloc:1 of
msgid ""
"Determine scheme, host and port for this connection taking proxy data "
"into account. :return: tuple (scheme, host, port) :rtype: tuple(string, "
"string, int)"
msgstr ""

#: linkcheck.checker.proxysupport.ProxySupport.ignore_proxy_host:1 of
msgid "Check if self.host is in the $no_proxy ignore list."
msgstr ""

#: linkcheck.checker.proxysupport.ProxySupport.set_proxy:1 of
msgid ""
"Parse given proxy information and store parsed values. Note that only "
"http:// proxies are supported, both for ftp:// and http:// URLs."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.telneturl.rst:2
msgid "linkcheck.checker.telneturl"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.telneturl.rst:21:<autosummary>:1
msgid ""
":obj:`encode <linkcheck.checker.telneturl.encode>`\\ \\(s\\[\\, "
"encoding\\, errors\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.telneturl.rst:21:<autosummary>:1
#: linkcheck.checker.telneturl.encode:1 of
msgid "Encode telnet data like username and password."
msgstr ""

#: linkcheck.checker.telneturl.TelnetUrl:1:<autosummary>:1 of
msgid ""
":obj:`TelnetUrl <linkcheck.checker.telneturl.TelnetUrl>`\\ "
"\\(base\\_url\\, recursion\\_level\\, aggregate\\)"
msgstr ""

#: linkcheck.checker.telneturl.TelnetUrl:1
#: linkcheck.checker.telneturl.TelnetUrl:1:<autosummary>:1 of
msgid "Url link with telnet scheme."
msgstr ""

#: linkcheck.checker.telneturl.TelnetUrl.build_url:1 of
msgid ""
"Call super.build_url(), set default telnet port and initialize the login "
"credentials."
msgstr ""

#: linkcheck.checker.telneturl.TelnetUrl.can_get_content:1 of
msgid "Telnet URLs have no content."
msgstr ""

#: linkcheck.checker.telneturl.TelnetUrl.check_connection:1 of
msgid ""
"Open a telnet connection and try to login. Expected login label is "
"\"login: \", expected password label is \"Password: \"."
msgstr ""

#: linkcheck.checker.telneturl.TelnetUrl.local_check:1 of
msgid "Warn about empty host names. Else call super.local_check()."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.unknownurl.rst:2
msgid "linkcheck.checker.unknownurl"
msgstr ""

#: linkcheck.checker.unknownurl.UnknownUrl:1:<autosummary>:1 of
msgid ""
":obj:`UnknownUrl <linkcheck.checker.unknownurl.UnknownUrl>`\\ "
"\\(base\\_url\\, recursion\\_level\\, aggregate\\)"
msgstr ""

#: linkcheck.checker.unknownurl.UnknownUrl:1
#: linkcheck.checker.unknownurl.UnknownUrl:1:<autosummary>:1 of
msgid "Handle unknown or just plain broken URLs."
msgstr ""

#: linkcheck.checker.unknownurl.UnknownUrl.can_get_content:1 of
msgid "Unknown URLs have no content."
msgstr ""

#: linkcheck.checker.unknownurl.is_unknown_scheme:1
#: linkcheck.network.iputil.is_obfuscated_ip:1 linkcheck.url.is_safe_char:1
#: linkcheck.url.is_safe_domain:1 linkcheck.url.is_safe_fragment:1
#: linkcheck.url.is_safe_host:1 linkcheck.url.is_safe_parameter:1
#: linkcheck.url.is_safe_path:1 linkcheck.url.is_safe_query:1
#: linkcheck.url.is_safe_url:1 linkcheck.url.url_is_absolute:1 of
msgid "Matches zero or more characters at the beginning of the string."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.urlbase.rst:2
msgid "linkcheck.checker.urlbase"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.urlbase.rst:22:<autosummary>:1
msgid ""
":obj:`url_norm <linkcheck.checker.urlbase.url_norm>`\\ \\(url\\, "
"encoding\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.urlbase.rst:22:<autosummary>:1
#: linkcheck.checker.urlbase.url_norm:1 of
msgid "Wrapper for url.url_norm() to convert UnicodeError in LinkCheckerError."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.urlbase.rst:22:<autosummary>:1
msgid ":obj:`urljoin <linkcheck.checker.urlbase.urljoin>`\\ \\(parent\\, url\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.urlbase.rst:22:<autosummary>:1
msgid "If url is relative, join parent and url."
msgstr ""

#: linkcheck.checker.urlbase.CompactUrlData:1:<autosummary>:1 of
msgid ""
":obj:`CompactUrlData <linkcheck.checker.urlbase.CompactUrlData>`\\ "
"\\(wired\\_url\\_data\\)"
msgstr ""

#: linkcheck.checker.urlbase.CompactUrlData:1
#: linkcheck.checker.urlbase.CompactUrlData:1:<autosummary>:1 of
msgid "Store selected UrlData attributes in slots to minimize memory usage."
msgstr ""

#: linkcheck.checker.urlbase.CompactUrlData:1:<autosummary>:1 of
msgid ""
":obj:`UrlBase <linkcheck.checker.urlbase.UrlBase>`\\ \\(base\\_url\\, "
"recursion\\_level\\, aggregate\\)"
msgstr ""

#: linkcheck.checker.urlbase.CompactUrlData:1:<autosummary>:1
#: linkcheck.checker.urlbase.UrlBase:1 of
msgid "An URL with additional information like validity etc."
msgstr ""

#: linkcheck.checker.urlbase.CompactUrlData:3 of
msgid "Set all attributes according to the dictionnary wired_url_data"
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.add_info:1 of
msgid "Add an info string."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.add_intern_pattern:1 of
msgid "Add intern URL regex to config."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.add_size_info:1 of
msgid "Set size of URL content (if any).. Should be overridden in subclasses."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.add_url:1 of
msgid "Add new URL to queue."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.add_warning:1 of
msgid "Add a warning string."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.allows_recursion:1 of
msgid "Return True iff we can recurse into the url's content."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.allows_simple_recursion:1 of
msgid "Check recursion level and extern status."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.build_url:1 of
msgid ""
"Construct self.url and self.urlparts out of the given base url "
"information self.base_url, self.parent_url and self.base_ref."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.build_url_parts:1 of
msgid ""
"Set userinfo, host, port and anchor from self.urlparts. Also checks for "
"obfuscated IP addresses."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.can_get_content:1 of
msgid "Indicate wether url get_content() can be called."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.check:1 of
msgid "Main check function for checking this URL."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.check_connection:1 of
msgid "The basic connection check uses urlopen to initialize a connection object."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.check_content:1 of
msgid "Check content of URL. :return: True if content can be parsed, else False"
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.check_obfuscated_ip:1 of
msgid "Warn if host of this URL is obfuscated IP address."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.check_syntax:1 of
msgid ""
"Called before self.check(), this function inspects the url syntax. "
"Success enables further checking, failure immediately logs this url. "
"Syntax checks must not use any network resources."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.check_url_warnings:1 of
msgid "Check URL name and length."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.close_connection:1 of
msgid "Close an opened url connection."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.content_allows_robots:1 of
msgid "Returns True: only check robots.txt on HTTP links."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.get_intern_pattern:3 of
msgid "the URL to set intern pattern for, else self.url"
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.get_intern_pattern:5 of
msgid "non-empty regex pattern or None"
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.get_title:1 of
msgid ""
"Return title of page the URL refers to. This is per default the filename "
"or the URL."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.get_user_password:1 of
msgid ""
"Get tuple (user, password) from configured authentication. Both user and "
"password can be None."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.handle_exception:1 of
msgid "An exception occurred. Log it and set the cache flag."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.init:1 of
msgid "Initialize internal data."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.is_css:1 of
msgid "Return True iff content of this url is CSS stylesheet."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.is_directory:1 of
msgid "Return True if current URL represents a directory."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.is_file:1 of
msgid "Return True for file:// URLs."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.is_html:1 of
msgid "Return True iff content of this url is HTML formatted."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.is_http:1 of
msgid "Return True for http:// or https:// URLs."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.is_local:1 of
msgid "Return True for local (ie. file://) URLs."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.is_parseable:1 of
msgid "Return True iff content of this url is parseable."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.local_check:1 of
msgid "Local check function can be overridden in subclasses."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.read_content:1 of
msgid "Return data for this URL. Can be overridden in subclasses."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.read_content_chunk:1 of
msgid ""
"Read one chunk of content from this URL. Precondition: url_connection is "
"an opened URL."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.reset:1 of
msgid "Reset all variables to default values."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.serialized:1 of
msgid "Return serialized url check data as unicode string."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.set_cache_url:1 of
msgid "Set the URL to be used for caching."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.set_content_type:1 of
msgid "Set content MIME type. Should be overridden in subclasses."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.set_extern:1 of
msgid ""
"Match URL against extern and intern link patterns. If no pattern matches "
"the URL is extern. Sets self.extern to a tuple (bool, bool) with content "
"(is_extern, is_strict)."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.set_result:1 of
msgid "Set result string and validity."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.to_wire:1 of
msgid "Return compact UrlData object with information from to_wire_dict()."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.to_wire_dict:1 of
msgid "Return a simplified transport object for logging and caching."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.to_wire_dict:3 of
msgid "The transport object must contain these attributes:"
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.to_wire_dict:5 of
msgid "url_data.valid: bool Indicates if URL is valid"
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.to_wire_dict:7 of
msgid "url_data.result: unicode Result string"
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.to_wire_dict:9 of
msgid ""
"url_data.warnings: list of tuples (tag, warning message) List of tagged "
"warnings for this URL."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.to_wire_dict:11 of
msgid ""
"url_data.name: unicode string or None name of URL (eg. filename or link "
"name)"
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.to_wire_dict:13 of
msgid "url_data.parent_url: unicode or None Parent URL"
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.to_wire_dict:15 of
msgid "url_data.base_ref: unicode HTML base reference URL of parent"
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.to_wire_dict:17 of
msgid "url_data.url: unicode Fully qualified URL."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.to_wire_dict:19 of
msgid "url_data.domain: unicode URL domain part."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.to_wire_dict:21 of
msgid ""
"url_data.checktime: int Number of seconds needed to check this link, "
"default: zero."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.to_wire_dict:23 of
msgid ""
"url_data.dltime: int Number of seconds needed to download URL content, "
"default: -1"
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.to_wire_dict:25 of
msgid "url_data.size: int Size of downloaded URL content, default: -1"
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.to_wire_dict:27 of
msgid "url_data.info: list of unicode Additional information about this URL."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.to_wire_dict:29 of
msgid "url_data.line: int Line number of this URL at parent document, or None"
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.to_wire_dict:31 of
msgid "url_data.column: int Column number of this URL at parent document, or None"
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.to_wire_dict:33 of
msgid "url_data.page: int Page number of this URL at parent document, or -1"
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.to_wire_dict:35 of
msgid "url_data.cache_url: unicode Cache url for this URL."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.to_wire_dict:37 of
msgid "url_data.content_type: unicode MIME content type for URL content."
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.to_wire_dict:39 of
msgid "url_data.level: int Recursion level until reaching this URL from start URL"
msgstr ""

#: linkcheck.checker.urlbase.UrlBase.to_wire_dict:41 of
msgid ""
"url_data.last_modified: datetime Last modification date of retrieved page"
" (or None)."
msgstr ""

#: linkcheck.checker.urlbase.urljoin:1 of
msgid "If url is relative, join parent and url. Else leave url as-is."
msgstr ""

#: linkcheck.checker.urlbase.urljoin:3 of
msgid "joined url"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cmdline.rst:2
msgid "linkcheck.cmdline"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cmdline.rst:24:<autosummary>:1
msgid ""
":obj:`aggregate_url <linkcheck.cmdline.aggregate_url>`\\ \\(aggregate\\, "
"url\\[\\, err\\_exit\\_code\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cmdline.rst:24:<autosummary>:1
#: linkcheck.cmdline.aggregate_url:1 of
msgid "Append given commandline URL to input queue."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cmdline.rst:24:<autosummary>:1
msgid ""
":obj:`print_plugins <linkcheck.cmdline.print_plugins>`\\ \\(folders\\[\\,"
" exit\\_code\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cmdline.rst:24:<autosummary>:1
#: linkcheck.cmdline.print_plugins:1 of
msgid "Print available plugins and exit."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cmdline.rst:24:<autosummary>:1
msgid ""
":obj:`print_usage <linkcheck.cmdline.print_usage>`\\ \\(msg\\[\\, "
"exit\\_code\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cmdline.rst:24:<autosummary>:1
#: linkcheck.cmdline.print_usage:1 of
msgid "Print a program msg text to stderr and exit."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cmdline.rst:24:<autosummary>:1
msgid ""
":obj:`print_version <linkcheck.cmdline.print_version>`\\ "
"\\(\\[exit\\_code\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cmdline.rst:24:<autosummary>:1
#: linkcheck.cmdline.print_version:1 of
msgid "Print the program version and exit."
msgstr ""

#: linkcheck.cmdline.LCArgumentParser:1:<autosummary>:1 of
msgid ""
":obj:`LCArgumentParser <linkcheck.cmdline.LCArgumentParser>`\\ "
"\\(\\[prog\\, usage\\, description\\, ...\\]\\)"
msgstr ""

#: linkcheck.cmdline.LCArgumentParser:1
#: linkcheck.cmdline.LCArgumentParser:1:<autosummary>:1 of
msgid "Custom argument parser to format help text."
msgstr ""

#: linkcheck.cmdline.LCArgumentParser:1 of
msgid "Bases: :class:`argparse.ArgumentParser`"
msgstr ""

#: linkcheck.cmdline.LCArgumentParser.print_help:1 of
msgid "Print a help message to stdout."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:2
msgid "linkcheck.configuration"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid ""
":obj:`add_kde_proxy <linkcheck.configuration.add_kde_proxy>`\\ \\(key\\, "
"value\\, data\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
#: linkcheck.configuration.add_kde_proxy:1 of
msgid "Add a proxy value to data dictionary after sanity checks."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid ""
":obj:`add_kde_setting <linkcheck.configuration.add_kde_setting>`\\ "
"\\(key\\, value\\, data\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
#: linkcheck.configuration.add_kde_setting:1 of
msgid "Add a KDE proxy setting value to data dictionary."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid ""
":obj:`get_certifi_file <linkcheck.configuration.get_certifi_file>`\\ "
"\\(\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
#: linkcheck.configuration.get_certifi_file:1 of
msgid "Get the SSL certifications installed by the certifi package."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid ""
":obj:`get_gnome_proxy <linkcheck.configuration.get_gnome_proxy>`\\ "
"\\(\\[protocol\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
#: linkcheck.configuration.get_gnome_proxy:1 of
msgid "Return host:port for a GNOME proxy if found, else None."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid ""
":obj:`get_kde_config_dir <linkcheck.configuration.get_kde_config_dir>`\\ "
"\\(\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
#: linkcheck.configuration.get_kde_config_dir:1 of
msgid "Return KDE configuration directory or None if not found."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid ""
":obj:`get_kde_ftp_proxy <linkcheck.configuration.get_kde_ftp_proxy>`\\ "
"\\(\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
#: linkcheck.configuration.get_kde_ftp_proxy:1
#: linkcheck.configuration.get_kde_http_proxy:1 of
msgid "Return host:port for KDE HTTP proxy if found, else None."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid ""
":obj:`get_kde_http_proxy <linkcheck.configuration.get_kde_http_proxy>`\\ "
"\\(\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid ""
":obj:`get_modules_info <linkcheck.configuration.get_modules_info>`\\ "
"\\(\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
#: linkcheck.configuration.get_modules_info:1 of
msgid "Return unicode string with detected module info."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid ""
":obj:`get_plugin_folders <linkcheck.configuration.get_plugin_folders>`\\ "
"\\(\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid "Get linkchecker plugin folders."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid ":obj:`get_share_dir <linkcheck.configuration.get_share_dir>`\\ \\(\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
#: linkcheck.configuration.get_share_dir:1 of
msgid "Return absolute path of LinkChecker example configuration."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid ""
":obj:`get_share_file <linkcheck.configuration.get_share_file>`\\ "
"\\(filename\\[\\, devel\\_dir\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
#: linkcheck.configuration.get_share_file:1 of
msgid "Return a filename in the share directory."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid ""
":obj:`get_system_cert_file "
"<linkcheck.configuration.get_system_cert_file>`\\ \\(\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid "Try to find a system-wide SSL certificate file."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid ":obj:`get_user_config <linkcheck.configuration.get_user_config>`\\ \\(\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid "Get the user configuration filename."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid ":obj:`get_user_data <linkcheck.configuration.get_user_data>`\\ \\(\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid "Get the user data folder."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid ":obj:`make_userdir <linkcheck.configuration.make_userdir>`\\ \\(child\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
#: linkcheck.configuration.make_userdir:1 of
msgid "Create a child directory."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid ":obj:`normpath <linkcheck.configuration.normpath>`\\ \\(path\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
#: linkcheck.configuration.normpath:1 of
msgid ""
"Norm given system path with all available norm or expand functions in "
"os.path."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid ":obj:`read_kioslaverc <linkcheck.configuration.read_kioslaverc>`\\ \\(\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
#: linkcheck.configuration.read_kioslaverc:1 of
msgid "Read kioslaverc into data dictionary."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid ""
":obj:`resolve_indirect <linkcheck.configuration.resolve_indirect>`\\ "
"\\(data\\, key\\[\\, splithosts\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
#: linkcheck.configuration.resolve_indirect:1 of
msgid "Replace name of environment variable with its value."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid ""
":obj:`resolve_kde_settings "
"<linkcheck.configuration.resolve_kde_settings>`\\ \\(data\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
#: linkcheck.configuration.resolve_kde_settings:1 of
msgid "Write final proxy configuration values in data dictionary."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid ":obj:`split_hosts <linkcheck.configuration.split_hosts>`\\ \\(value\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
#: linkcheck.configuration.split_hosts:1 of
msgid "Split comma-separated host list."
msgstr ""

#: linkcheck.configuration.Configuration:1:<autosummary>:1 of
msgid ":obj:`Configuration <linkcheck.configuration.Configuration>`\\ \\(\\)"
msgstr ""

#: linkcheck.configuration.Configuration:1:<autosummary>:1 of
msgid "Storage for configuration options."
msgstr ""

#: linkcheck.configuration.Configuration:1 linkcheck.containers.LFUCache:1
#: linkcheck.plugins.viruscheck.ClamavConfig:1 of
msgid "Bases: :class:`dict`"
msgstr ""

#: linkcheck.configuration.Configuration:1 of
msgid ""
"Storage for configuration options. Options can both be given from the "
"command line as well as from configuration files."
msgstr ""

#: linkcheck.configuration.Configuration:4 of
msgid "Initialize the default options."
msgstr ""

#: linkcheck.configuration.Configuration.add_auth:1 of
msgid "Add given authentication data."
msgstr ""

#: linkcheck.configuration.Configuration.get_connectionlimits:1 of
msgid "Get dict with limit per connection type."
msgstr ""

#: linkcheck.configuration.Configuration.get_user_password:1 of
msgid ""
"Get tuple (user, password) from configured authentication that matches "
"the given URL. Both user and password can be None if not specified, or no"
" authentication matches the given URL."
msgstr ""

#: linkcheck.configuration.Configuration.logger_add:1 of
msgid "Add a new logger type to the known loggers."
msgstr ""

#: linkcheck.configuration.Configuration.logger_new:1 of
msgid "Instantiate new logger and return it."
msgstr ""

#: linkcheck.configuration.Configuration.read:1
#: linkcheck.configuration.confparse.LCConfigParser.read:1 of
msgid "Read settings from given config files."
msgstr ""

#: linkcheck.configuration.Configuration.read:3
#: linkcheck.configuration.confparse.LCConfigParser.read:3 of
msgid "LinkCheckerError on syntax errors in the config file(s)"
msgstr ""

#: linkcheck.configuration.Configuration.sanitize:1 of
msgid "Make sure the configuration is consistent."
msgstr ""

#: linkcheck.configuration.Configuration.sanitize_logger:1 of
msgid "Make logger configuration consistent."
msgstr ""

#: linkcheck.configuration.Configuration.sanitize_loginurl:1 of
msgid "Make login configuration consistent."
msgstr ""

#: linkcheck.configuration.Configuration.sanitize_plugins:1 of
msgid "Ensure each plugin is configurable."
msgstr ""

#: linkcheck.configuration.Configuration.sanitize_proxies:1 of
msgid "Try to read additional proxy settings which urllib does not support."
msgstr ""

#: linkcheck.configuration.Configuration.sanitize_ssl:1 of
msgid ""
"Use local installed certificate file if available. Tries to get system, "
"then certifi, then the own installed certificate file."
msgstr ""

#: linkcheck.configuration.Configuration.set_status_logger:1 of
msgid "Set the status logger."
msgstr ""

#: linkcheck.configuration.get_certifi_file:3 of
msgid "the filename to the cert file"
msgstr ""

#: linkcheck.configuration.get_certifi_file:5 of
msgid ""
"ImportError when certifi is not installed or ValueError when the file is "
"not found"
msgstr ""

#: linkcheck.configuration.get_plugin_folders:1 of
msgid ""
"Get linkchecker plugin folders. Default is "
"\"$XDG_DATA_HOME/linkchecker/plugins/\". \"~/.linkchecker/plugins/\" is "
"also supported for backwards compatibility, and is used if both "
"directories exist."
msgstr ""

#: linkcheck.configuration.get_share_file:3 of
msgid "directory to search when developing"
msgstr ""

#: linkcheck.configuration.get_share_file:5 of
msgid "filename to search for"
msgstr ""

#: linkcheck.configuration.get_share_file:7 of
msgid "the found filename or None"
msgstr ""

#: linkcheck.configuration.get_share_file:9 of
msgid "ValueError if not found"
msgstr ""

#: linkcheck.configuration.get_system_cert_file:1 of
msgid ""
"Try to find a system-wide SSL certificate file. :return: the filename to "
"the cert file :raises: ValueError when no system cert file could be found"
msgstr ""

#: linkcheck.configuration.get_user_config:1 of
msgid ""
"Get the user configuration filename. If the user configuration file does "
"not exist, copy it from the initial configuration file, but only if this "
"is not a portable installation. Returns path to user config file (which "
"might not exist due to copy failures or on portable systems). :return "
"configuration filename :rtype string"
msgstr ""

#: linkcheck.configuration.get_user_data:1 of
msgid ""
"Get the user data folder. Returns \"~/.linkchecker/\" if this folder "
"exists,     \"$XDG_DATA_HOME/linkchecker\" if it does not. :rtype string"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:62:<autosummary>:1
msgid ""
":obj:`linkcheck.configuration.confparse "
"<linkcheck.configuration.confparse>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:62:<autosummary>:1
#: linkcheck.configuration.confparse:1 of
msgid "Parse configuration files"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.confparse.rst:2
msgid "linkcheck.configuration.confparse"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.confparse.rst:21:<autosummary>:1
msgid ""
":obj:`read_multiline "
"<linkcheck.configuration.confparse.read_multiline>`\\ \\(value\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.confparse.rst:21:<autosummary>:1
#: linkcheck.configuration.confparse.read_multiline:1 of
msgid "Helper function reading multiline values."
msgstr ""

#: linkcheck.configuration.confparse.LCConfigParser:1:<autosummary>:1 of
msgid ""
":obj:`LCConfigParser "
"<linkcheck.configuration.confparse.LCConfigParser>`\\ \\(config\\)"
msgstr ""

#: linkcheck.configuration.confparse.LCConfigParser:1
#: linkcheck.configuration.confparse.LCConfigParser:1:<autosummary>:1 of
msgid "Parse a LinkChecker configuration file."
msgstr ""

#: linkcheck.configuration.confparse.LCConfigParser:1 of
msgid "Bases: :class:`configparser.RawConfigParser`"
msgstr ""

#: linkcheck.configuration.confparse.LCConfigParser:3
#: linkcheck.plugins.httpheaderinfo.HttpHeaderInfo:3 of
msgid "Initialize configuration."
msgstr ""

#: linkcheck.configuration.confparse.LCConfigParser.check_password_readable:1
#: of
msgid "Check if there is a readable configuration file and print a warning."
msgstr ""

#: linkcheck.configuration.confparse.LCConfigParser.read_authentication_config:1
#: of
msgid "Read configuration options in section \"authentication\"."
msgstr ""

#: linkcheck.configuration.confparse.LCConfigParser.read_boolean_option:1 of
msgid "Read a boolean option."
msgstr ""

#: linkcheck.configuration.confparse.LCConfigParser.read_checking_config:1 of
msgid "Read configuration options in section \"checking\"."
msgstr ""

#: linkcheck.configuration.confparse.LCConfigParser.read_filtering_config:1 of
msgid "Read configuration options in section \"filtering\"."
msgstr ""

#: linkcheck.configuration.confparse.LCConfigParser.read_int_option:1 of
msgid "Read an integer option."
msgstr ""

#: linkcheck.configuration.confparse.LCConfigParser.read_output_config:1 of
msgid "Read configuration options in section \"output\"."
msgstr ""

#: linkcheck.configuration.confparse.LCConfigParser.read_plugin_config:1 of
msgid "Read plugin-specific configuration values."
msgstr ""

#: linkcheck.configuration.confparse.LCConfigParser.read_string_option:1 of
msgid "Read a string option."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.containers.rst:2
msgid "linkcheck.containers"
msgstr ""

#: linkcheck.containers.LFUCache:1:<autosummary>:1 of
msgid ":obj:`LFUCache <linkcheck.containers.LFUCache>`\\ \\(\\[size\\]\\)"
msgstr ""

#: linkcheck.containers.LFUCache:1
#: linkcheck.containers.LFUCache:1:<autosummary>:1 of
msgid "Limited cache which purges least frequently used items."
msgstr ""

#: linkcheck.containers.LFUCache:3 of
msgid "Initialize internal LFU cache."
msgstr ""

#: linkcheck.containers.LFUCache.get:1 of
msgid "Update key usage if found and return value, else return default."
msgstr ""

#: linkcheck.containers.LFUCache.items:1 of
msgid "Return list of items, not updating usage count."
msgstr ""

#: linkcheck.containers.LFUCache.iteritems:1 of
msgid "Return iterator of items, not updating usage count."
msgstr ""

#: linkcheck.containers.LFUCache.itervalues:1 of
msgid "Return iterator of values, not updating usage count."
msgstr ""

#: linkcheck.containers.LFUCache.pop:1 of
msgid "Remove and return a value."
msgstr ""

#: linkcheck.containers.LFUCache.popitem:1 of
msgid "Remove and return an item."
msgstr ""

#: linkcheck.containers.LFUCache.setdefault:1 of
msgid "Update key usage if found and return value, else set and return default."
msgstr ""

#: linkcheck.containers.LFUCache.shrink:1 of
#, python-format
msgid "Shrink ca. 5% of entries."
msgstr ""

#: linkcheck.containers.LFUCache.uses:1 of
msgid "Get number of uses for given key (without increasing the number of uses)"
msgstr ""

#: linkcheck.containers.LFUCache.values:1 of
msgid "Return list of values, not updating usage count."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cookies.rst:2
msgid "linkcheck.cookies"
msgstr ""

#: linkcheck.cookies.from_file:1:<autosummary>:1 of
msgid ":obj:`from_file <linkcheck.cookies.from_file>`\\ \\(filename\\)"
msgstr ""

#: linkcheck.cookies.from_file:1 linkcheck.cookies.from_file:1:<autosummary>:1
#: of
msgid "Parse cookie data from a text file in HTTP header format."
msgstr ""

#: linkcheck.cookies.from_file:1:<autosummary>:1 of
msgid ":obj:`from_headers <linkcheck.cookies.from_headers>`\\ \\(strheader\\)"
msgstr ""

#: linkcheck.cookies.from_file:1:<autosummary>:1
#: linkcheck.cookies.from_headers:1 of
msgid "Parse cookie data from a string in HTTP header (RFC 2616) format."
msgstr ""

#: linkcheck.cookies.from_file:3 of
msgid "list of tuples (headers, scheme, host, path)"
msgstr ""

#: linkcheck.cookies.from_headers:3 of
msgid "list of cookies"
msgstr ""

#: linkcheck.cookies.from_headers:4 of
msgid "ValueError for incomplete or invalid data"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.decorators.rst:2
msgid "linkcheck.decorators"
msgstr ""

#: linkcheck.decorators:3 of
msgid "Example::"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.decorators.rst:28:<autosummary>:1
msgid ":obj:`deprecated <linkcheck.decorators.deprecated>`\\ \\(func\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.decorators.rst:28:<autosummary>:1
msgid "A decorator which can be used to mark functions as deprecated."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.decorators.rst:28:<autosummary>:1
msgid ":obj:`notimplemented <linkcheck.decorators.notimplemented>`\\ \\(func\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.decorators.rst:28:<autosummary>:1
#: linkcheck.decorators.notimplemented:1 of
msgid "Raises a NotImplementedError if the function is called."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.decorators.rst:28:<autosummary>:1
msgid ""
":obj:`signal_handler <linkcheck.decorators.signal_handler>`\\ "
"\\(signal\\_number\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.decorators.rst:28:<autosummary>:1
#: linkcheck.decorators.signal_handler:1 of
msgid "From http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/410666"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.decorators.rst:28:<autosummary>:1
msgid ""
":obj:`synchronize <linkcheck.decorators.synchronize>`\\ \\(lock\\, "
"func\\[\\, log\\_duration\\_secs\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.decorators.rst:28:<autosummary>:1
#: linkcheck.decorators.synchronize:1 of
msgid "Return synchronized function acquiring the given lock."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.decorators.rst:28:<autosummary>:1
msgid ":obj:`synchronized <linkcheck.decorators.synchronized>`\\ \\(lock\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.decorators.rst:28:<autosummary>:1
#: linkcheck.decorators.synchronized:1 of
msgid "A decorator calling a function with aqcuired lock."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.decorators.rst:28:<autosummary>:1
msgid ":obj:`timed <linkcheck.decorators.timed>`\\ \\(\\[log\\, limit\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.decorators.rst:28:<autosummary>:1
#: linkcheck.decorators.timed:1 of
msgid "Decorator to run a function with timing info."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.decorators.rst:28:<autosummary>:1
msgid ":obj:`timeit <linkcheck.decorators.timeit>`\\ \\(func\\, log\\, limit\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.decorators.rst:28:<autosummary>:1
msgid "Print execution time of the function."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.decorators.rst:28:<autosummary>:1
msgid ""
":obj:`update_func_meta <linkcheck.decorators.update_func_meta>`\\ "
"\\(fake\\_func\\, real\\_func\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.decorators.rst:28:<autosummary>:1
msgid "Set meta information (eg."
msgstr ""

#: linkcheck.decorators.curried:1:<autosummary>:1 of
msgid ":obj:`curried <linkcheck.decorators.curried>`\\ \\(func\\, \\*a\\)"
msgstr ""

#: linkcheck.decorators.curried:1
#: linkcheck.decorators.curried:1:<autosummary>:1 of
msgid ""
"Decorator that returns a function that keeps returning functions until "
"all arguments are supplied; then the original function is evaluated."
msgstr ""

#: linkcheck.decorators.curried:5 of
msgid "Store function and arguments."
msgstr ""

#: linkcheck.decorators.deprecated:1 of
msgid ""
"A decorator which can be used to mark functions as deprecated. It emits a"
" warning when the function is called."
msgstr ""

#: linkcheck.decorators.signal_handler:3 of
msgid ""
"A decorator to set the specified function as handler for a signal. This "
"function is the 'outer' decorator, called with only the (non-function) "
"arguments. If signal_number is not a valid signal (for example "
"signal.SIGN), no handler is set."
msgstr ""

#: linkcheck.decorators.timeit:1 of
msgid "Print execution time of the function. For quick'n'dirty profiling."
msgstr ""

#: linkcheck.decorators.update_func_meta:1 of
msgid ""
"Set meta information (eg. __doc__) of fake function to that of the real "
"function. :return fake_func"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.rst:2
msgid "linkcheck.director"
msgstr ""

#: linkcheck.director.abort:1:<autosummary>:1 of
msgid ":obj:`abort <linkcheck.director.abort>`\\ \\(aggregate\\)"
msgstr ""

#: linkcheck.director.abort:1 linkcheck.director.abort:1:<autosummary>:1 of
msgid "Helper function to ensure a clean shutdown."
msgstr ""

#: linkcheck.director.abort:1:<autosummary>:1 of
msgid ":obj:`abort_now <linkcheck.director.abort_now>`\\ \\(\\)"
msgstr ""

#: linkcheck.director.abort:1:<autosummary>:1 linkcheck.director.abort_now:1 of
msgid "Force exit of current process without cleanup."
msgstr ""

#: linkcheck.director.abort:1:<autosummary>:1 of
msgid ":obj:`check_url <linkcheck.director.check_url>`\\ \\(aggregate\\)"
msgstr ""

#: linkcheck.director.abort:1:<autosummary>:1 linkcheck.director.check_url:1 of
msgid "Helper function waiting for URL queue."
msgstr ""

#: linkcheck.director.abort:1:<autosummary>:1 of
msgid ":obj:`check_urls <linkcheck.director.check_urls>`\\ \\(aggregate\\)"
msgstr ""

#: linkcheck.director.abort:1:<autosummary>:1 linkcheck.director.check_urls:1
#: of
msgid ""
"Main check function; checks all configured URLs until interrupted with "
"Ctrl-C."
msgstr ""

#: linkcheck.director.abort:1:<autosummary>:1 of
msgid ":obj:`get_aggregate <linkcheck.director.get_aggregate>`\\ \\(config\\)"
msgstr ""

#: linkcheck.director.abort:1:<autosummary>:1
#: linkcheck.director.get_aggregate:1 of
msgid "Get an aggregator instance with given configuration."
msgstr ""

#: linkcheck.director.abort:1:<autosummary>:1 of
msgid ":obj:`interrupt <linkcheck.director.interrupt>`\\ \\(aggregate\\)"
msgstr ""

#: linkcheck.director.abort:1:<autosummary>:1 linkcheck.director.interrupt:1 of
msgid "Interrupt execution and shutdown, ignoring any subsequent interrupts."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.rst:48:<autosummary>:1
msgid ":obj:`linkcheck.director.aggregator <linkcheck.director.aggregator>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.rst:48:<autosummary>:1
#: linkcheck.director.aggregator:1 of
msgid "Aggregate needed object instances for checker threads."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.rst:48:<autosummary>:1
msgid ":obj:`linkcheck.director.checker <linkcheck.director.checker>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.rst:48:<autosummary>:1
#: linkcheck.director.checker:1 of
msgid "URL checking functions."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.rst:48:<autosummary>:1
msgid ":obj:`linkcheck.director.console <linkcheck.director.console>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.rst:48:<autosummary>:1
#: linkcheck.director.console:1 of
msgid "Helpers for console output."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.rst:48:<autosummary>:1
msgid ":obj:`linkcheck.director.interrupter <linkcheck.director.interrupter>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.rst:48:<autosummary>:1
#: linkcheck.director.interrupter:1 linkcheck.director.status:1 of
msgid "Status message handling"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.rst:48:<autosummary>:1
msgid ":obj:`linkcheck.director.logger <linkcheck.director.logger>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.rst:48:<autosummary>:1
#: linkcheck.director.logger:1 of
msgid "Logger for aggregator instances"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.rst:48:<autosummary>:1
msgid ":obj:`linkcheck.director.status <linkcheck.director.status>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.rst:48:<autosummary>:1
msgid ":obj:`linkcheck.director.task <linkcheck.director.task>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.aggregator.rst:2
msgid "linkcheck.director.aggregator"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.aggregator.rst:21:<autosummary>:1
msgid ""
":obj:`new_request_session "
"<linkcheck.director.aggregator.new_request_session>`\\ \\(config\\, "
"cookies\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.aggregator.rst:21:<autosummary>:1
#: linkcheck.director.aggregator.new_request_session:1 of
msgid "Create a new request session."
msgstr ""

#: linkcheck.director.aggregator.Aggregate:1:<autosummary>:1 of
msgid ""
":obj:`Aggregate <linkcheck.director.aggregator.Aggregate>`\\ \\(config\\,"
" urlqueue\\, robots\\_txt\\, ...\\)"
msgstr ""

#: linkcheck.director.aggregator.Aggregate:1
#: linkcheck.director.aggregator.Aggregate:1:<autosummary>:1 of
msgid "Store thread-safe data collections for checker threads."
msgstr ""

#: linkcheck.director.aggregator.Aggregate:3 of
msgid "Store given link checking objects."
msgstr ""

#: linkcheck.director.aggregator.Aggregate.abort:1 of
msgid "Print still-active URLs and empty the URL queue."
msgstr ""

#: linkcheck.director.aggregator.Aggregate.add_downloaded_bytes:1 of
msgid "Add to number of downloaded bytes."
msgstr ""

#: linkcheck.director.aggregator.Aggregate.add_request_session:1 of
msgid "Add a request session for current thread."
msgstr ""

#: linkcheck.director.aggregator.Aggregate.cancel:1 of
msgid "Empty the URL queue."
msgstr ""

#: linkcheck.director.aggregator.Aggregate.end_log_output:1 of
msgid "Print ending output to log."
msgstr ""

#: linkcheck.director.aggregator.Aggregate.finish:1 of
msgid "Wait for checker threads to finish."
msgstr ""

#: linkcheck.director.aggregator.Aggregate.get_check_threads:1 of
msgid "Return iterator of checker threads."
msgstr ""

#: linkcheck.director.aggregator.Aggregate.get_request_session:1 of
msgid "Get the request session for current thread."
msgstr ""

#: linkcheck.director.aggregator.Aggregate.is_finished:1 of
msgid "Determine if checking is finished."
msgstr ""

#: linkcheck.director.aggregator.Aggregate.print_active_threads:1 of
msgid "Log all currently active threads."
msgstr ""

#: linkcheck.director.aggregator.Aggregate.remove_stopped_threads:1 of
msgid "Remove the stopped threads from the internal thread list."
msgstr ""

#: linkcheck.director.aggregator.Aggregate.start_threads:1 of
msgid "Spawn threads for URL checking and status printing."
msgstr ""

#: linkcheck.director.aggregator.Aggregate.visit_loginurl:1 of
msgid "Check for a login URL and visit it."
msgstr ""

#: linkcheck.director.aggregator.Aggregate.wait_for_host:1 of
msgid "Throttle requests to one host."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.checker.rst:2
msgid "linkcheck.director.checker"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.checker.rst:22:<autosummary>:1
msgid ""
":obj:`check_url <linkcheck.director.checker.check_url>`\\ "
"\\(url\\_data\\, logger\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.checker.rst:22:<autosummary>:1
#: linkcheck.director.checker.check_url:1 of
msgid "Check a single URL with logging."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.checker.rst:22:<autosummary>:1
msgid ""
":obj:`check_urls <linkcheck.director.checker.check_urls>`\\ "
"\\(urlqueue\\, logger\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.checker.rst:22:<autosummary>:1
#: linkcheck.director.checker.check_urls:1 of
msgid "Check URLs without threading."
msgstr ""

#: linkcheck.director.checker.Checker:1:<autosummary>:1 of
msgid ""
":obj:`Checker <linkcheck.director.checker.Checker>`\\ \\(urlqueue\\, "
"logger\\, add\\_request\\_session\\)"
msgstr ""

#: linkcheck.director.checker.Checker:1
#: linkcheck.director.checker.Checker:1:<autosummary>:1 of
msgid "URL check thread."
msgstr ""

#: linkcheck.director.checker.Checker:1 linkcheck.director.status.Status:1 of
msgid "Bases: :class:`linkcheck.director.task.LoggedCheckedTask`"
msgstr ""

#: linkcheck.director.checker.Checker:3 of
msgid "Store URL queue and logger."
msgstr ""

#: linkcheck.director.checker.Checker.check_url:1 of
msgid "Try to get URL data from queue and check it."
msgstr ""

#: linkcheck.director.checker.Checker.check_url_data:1 of
msgid "Check one URL data instance."
msgstr ""

#: linkcheck.director.checker.Checker.run_checked:1 of
msgid "Check URLs in the queue."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.console.rst:2
msgid "linkcheck.director.console"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.console.rst:26:<autosummary>:1
msgid ""
":obj:`internal_error <linkcheck.director.console.internal_error>`\\ "
"\\(\\[out\\, etype\\, evalue\\, tb\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.console.rst:26:<autosummary>:1
#: linkcheck.director.console.internal_error:1 of
msgid "Print internal error message (output defaults to stderr)."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.console.rst:26:<autosummary>:1
msgid ""
":obj:`print_app_info <linkcheck.director.console.print_app_info>`\\ "
"\\(\\[out\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.console.rst:26:<autosummary>:1
#: linkcheck.director.console.print_app_info:1 of
msgid "Print system and application info (output defaults to stderr)."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.console.rst:26:<autosummary>:1
msgid ""
":obj:`print_env_info <linkcheck.director.console.print_env_info>`\\ "
"\\(key\\[\\, out\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.console.rst:26:<autosummary>:1
#: linkcheck.director.console.print_env_info:1 of
msgid "If given environment key is defined, print it out."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.console.rst:26:<autosummary>:1
msgid ""
":obj:`print_locale_info <linkcheck.director.console.print_locale_info>`\\"
" \\(\\[out\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.console.rst:26:<autosummary>:1
#: linkcheck.director.console.print_locale_info:1 of
msgid "Print locale info."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.console.rst:26:<autosummary>:1
msgid ""
":obj:`print_proxy_info <linkcheck.director.console.print_proxy_info>`\\ "
"\\(\\[out\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.console.rst:26:<autosummary>:1
#: linkcheck.director.console.print_proxy_info:1 of
msgid "Print proxy info."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.console.rst:26:<autosummary>:1
msgid ""
":obj:`print_version <linkcheck.director.console.print_version>`\\ "
"\\(\\[out\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.console.rst:26:<autosummary>:1
#: linkcheck.director.console.print_version:1 of
msgid "Print the program version (output defaults to stdout)."
msgstr ""

#: linkcheck.director.console.StatusLogger:1:<autosummary>:1 of
msgid ""
":obj:`StatusLogger <linkcheck.director.console.StatusLogger>`\\ "
"\\(\\[fd\\]\\)"
msgstr ""

#: linkcheck.director.console.StatusLogger:1:<autosummary>:1 of
msgid "Standard status logger."
msgstr ""

#: linkcheck.director.console.StatusLogger:1 of
msgid "Standard status logger. Default output is stderr."
msgstr ""

#: linkcheck.director.console.StatusLogger:3 of
msgid "Save file descriptor for logging."
msgstr ""

#: linkcheck.director.console.StatusLogger.flush:1 of
msgid "Flush file descriptor."
msgstr ""

#: linkcheck.director.console.StatusLogger.log_status:1 of
msgid "Write status message to file descriptor."
msgstr ""

#: linkcheck.director.console.StatusLogger.write:1 of
msgid "Write message to file descriptor."
msgstr ""

#: linkcheck.director.console.StatusLogger.writeln:1 of
msgid "Write status message and line break to file descriptor."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.interrupter.rst:2
msgid "linkcheck.director.interrupter"
msgstr ""

#: linkcheck.director.interrupter.Interrupt:1:<autosummary>:1 of
msgid ""
":obj:`Interrupt <linkcheck.director.interrupter.Interrupt>`\\ "
"\\(duration\\)"
msgstr ""

#: linkcheck.director.interrupter.Interrupt:1:<autosummary>:1 of
msgid "Thread that raises KeyboardInterrupt after a specified duration."
msgstr ""

#: linkcheck.director.interrupter.Interrupt:1
#: linkcheck.director.task.LoggedCheckedTask:1 of
msgid "Bases: :class:`linkcheck.director.task.CheckedTask`"
msgstr ""

#: linkcheck.director.interrupter.Interrupt:1 of
msgid ""
"Thread that raises KeyboardInterrupt after a specified duration. This "
"gives us a portable SIGALRM implementation. The duration is checked every"
" 5 seconds."
msgstr ""

#: linkcheck.director.interrupter.Interrupt:5 of
msgid "Initialize the task."
msgstr ""

#: linkcheck.director.interrupter.Interrupt:7 of
msgid "raise KeyboardInterrupt after given number of seconds"
msgstr ""

#: linkcheck.director.interrupter.Interrupt.run_checked:1 of
msgid "Wait and raise KeyboardInterrupt after."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.logger.rst:2
msgid "linkcheck.director.logger"
msgstr ""

#: linkcheck.director.logger.Logger:1:<autosummary>:1 of
msgid ":obj:`Logger <linkcheck.director.logger.Logger>`\\ \\(config\\)"
msgstr ""

#: linkcheck.director.logger.Logger:1
#: linkcheck.director.logger.Logger:1:<autosummary>:1 of
msgid "Thread safe multi-logger class used by aggregator instances."
msgstr ""

#: linkcheck.director.logger.Logger:3 of
msgid "Initialize basic logging variables."
msgstr ""

#: linkcheck.director.logger.Logger.check_active_loggers:1 of
msgid "Check if all loggers are deactivated due to I/O errors."
msgstr ""

#: linkcheck.director.logger.Logger.do_print:1 of
msgid "Determine if URL entry should be logged or not."
msgstr ""

#: linkcheck.director.logger.Logger.end_log_output:1 of
msgid "End output of all configured loggers."
msgstr ""

#: linkcheck.director.logger.Logger.log_internal_error:1 of
msgid "Document that an internal error occurred."
msgstr ""

#: linkcheck.director.logger.Logger.log_url:1 of
msgid "Send new url to all configured loggers."
msgstr ""

#: linkcheck.director.logger.Logger.start_log_output:1 of
msgid "Start output of all configured loggers."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.status.rst:2
msgid "linkcheck.director.status"
msgstr ""

#: linkcheck.director.status.Status:1:<autosummary>:1 of
msgid ""
":obj:`Status <linkcheck.director.status.Status>`\\ \\(aggregator\\, "
"wait\\_seconds\\)"
msgstr ""

#: linkcheck.director.status.Status:1
#: linkcheck.director.status.Status:1:<autosummary>:1 of
msgid "Thread that gathers and logs the status periodically."
msgstr ""

#: linkcheck.director.status.Status:3 of
msgid "Initialize the status logger task."
msgstr ""

#: linkcheck.director.status.Status:5 of
msgid "the URL queue"
msgstr ""

#: linkcheck.director.status.Status:7 of
msgid "the logger object to inform about status"
msgstr ""

#: linkcheck.director.status.Status:9 of
msgid "interval in seconds to report status"
msgstr ""

#: linkcheck.director.status.Status.log_status:1 of
msgid "Log a status message."
msgstr ""

#: linkcheck.director.status.Status.run_checked:1 of
msgid "Print periodic status messages."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.task.rst:2
msgid "linkcheck.director.task"
msgstr ""

#: linkcheck.director.task.CheckedTask:1:<autosummary>:1 of
msgid ":obj:`CheckedTask <linkcheck.director.task.CheckedTask>`\\ \\(\\)"
msgstr ""

#: linkcheck.director.task.CheckedTask:1
#: linkcheck.director.task.CheckedTask:1:<autosummary>:1 of
msgid "Stoppable URL check task, handling error conditions while running."
msgstr ""

#: linkcheck.director.task.CheckedTask:1:<autosummary>:1 of
msgid ""
":obj:`LoggedCheckedTask <linkcheck.director.task.LoggedCheckedTask>`\\ "
"\\(logger\\)"
msgstr ""

#: linkcheck.director.task.CheckedTask:1:<autosummary>:1
#: linkcheck.director.task.LoggedCheckedTask:1 of
msgid "URL check task with a logger instance and internal error handling."
msgstr ""

#: linkcheck.director.task.CheckedTask:1 of
msgid "Bases: :class:`linkcheck.threader.StoppableThread`"
msgstr ""

#: linkcheck.director.task.CheckedTask:3 linkcheck.threader.StoppableThread:4
#: of
msgid "Store stop event."
msgstr ""

#: linkcheck.director.task.CheckedTask.internal_error:1
#: linkcheck.director.task.CheckedTask.run_checked:1 of
msgid "Overload in subclass."
msgstr ""

#: linkcheck.director.task.CheckedTask.run:1 of
msgid "Handle keyboard interrupt and other errors."
msgstr ""

#: linkcheck.director.task.LoggedCheckedTask:3 of
msgid "Initialize super instance and store given logger."
msgstr ""

#: linkcheck.director.task.LoggedCheckedTask.internal_error:1 of
msgid "Log an internal error on console and the logger."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.dummy.rst:2
msgid "linkcheck.dummy"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.dummy.rst:21:<autosummary>:1
msgid ":obj:`dummy <linkcheck.dummy.dummy>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.dummy.rst:21:<autosummary>:1
#: linkcheck.dummy.dummy:1 of
msgid "Ignore any positional or keyword arguments, return None."
msgstr ""

#: linkcheck.dummy.Dummy:1:<autosummary>:1 of
msgid ":obj:`Dummy <linkcheck.dummy.Dummy>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: linkcheck.dummy.Dummy:1:<autosummary>:1 of
msgid "A dummy object ignores all access to it."
msgstr ""

#: linkcheck.dummy.Dummy:1 of
msgid "A dummy object ignores all access to it. Useful for testing."
msgstr ""

#: linkcheck.dummy.Dummy:3 of
msgid "Return None"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.fileutil.rst:2
msgid "linkcheck.fileutil"
msgstr ""

#: linkcheck.fileutil.get_mtime:1:<autosummary>:1 of
msgid ":obj:`get_mtime <linkcheck.fileutil.get_mtime>`\\ \\(filename\\)"
msgstr ""

#: linkcheck.fileutil.get_mtime:1
#: linkcheck.fileutil.get_mtime:1:<autosummary>:1 of
msgid "Return modification time of filename or zero on errors."
msgstr ""

#: linkcheck.fileutil.get_mtime:1:<autosummary>:1 of
msgid ":obj:`get_size <linkcheck.fileutil.get_size>`\\ \\(filename\\)"
msgstr ""

#: linkcheck.fileutil.get_mtime:1:<autosummary>:1 linkcheck.fileutil.get_size:1
#: of
msgid "Return file size in Bytes, or -1 on error."
msgstr ""

#: linkcheck.fileutil.get_mtime:1:<autosummary>:1 of
msgid ":obj:`get_temp_file <linkcheck.fileutil.get_temp_file>`\\ \\(\\[mode\\]\\)"
msgstr ""

#: linkcheck.fileutil.get_mtime:1:<autosummary>:1
#: linkcheck.fileutil.get_temp_file:1 of
msgid "Return tuple (open file object, filename) pointing to a temporary file."
msgstr ""

#: linkcheck.fileutil.get_mtime:1:<autosummary>:1 of
msgid ""
":obj:`has_module <linkcheck.fileutil.has_module>`\\ \\(name\\[\\, "
"without\\_error\\]\\)"
msgstr ""

#: linkcheck.fileutil.get_mtime:1:<autosummary>:1 of
msgid "Test if given module can be imported."
msgstr ""

#: linkcheck.fileutil.get_mtime:1:<autosummary>:1 of
msgid ""
":obj:`is_accessable_by_others "
"<linkcheck.fileutil.is_accessable_by_others>`\\ \\(filename\\)"
msgstr ""

#: linkcheck.fileutil.get_mtime:1:<autosummary>:1
#: linkcheck.fileutil.is_accessable_by_others:1 of
msgid "Check if file is group or world accessable."
msgstr ""

#: linkcheck.fileutil.get_mtime:1:<autosummary>:1 of
msgid ":obj:`is_readable <linkcheck.fileutil.is_readable>`\\ \\(filename\\)"
msgstr ""

#: linkcheck.fileutil.get_mtime:1:<autosummary>:1
#: linkcheck.fileutil.is_readable:1 of
msgid "Check if file is a regular file and is readable."
msgstr ""

#: linkcheck.fileutil.get_mtime:1:<autosummary>:1 of
msgid ":obj:`is_tty <linkcheck.fileutil.is_tty>`\\ \\(fp\\)"
msgstr ""

#: linkcheck.fileutil.get_mtime:1:<autosummary>:1 linkcheck.fileutil.is_tty:1
#: of
msgid "Check if is a file object pointing to a TTY."
msgstr ""

#: linkcheck.fileutil.get_mtime:1:<autosummary>:1 of
msgid ""
":obj:`is_writable_by_others <linkcheck.fileutil.is_writable_by_others>`\\"
" \\(filename\\)"
msgstr ""

#: linkcheck.fileutil.get_mtime:1:<autosummary>:1
#: linkcheck.fileutil.is_writable_by_others:1 of
msgid "Check if file or directory is world writable."
msgstr ""

#: linkcheck.fileutil.get_mtime:1:<autosummary>:1 of
msgid ":obj:`path_safe <linkcheck.fileutil.path_safe>`\\ \\(path\\)"
msgstr ""

#: linkcheck.fileutil.get_mtime:1:<autosummary>:1
#: linkcheck.fileutil.path_safe:1 of
msgid "Ensure path string is compatible with the platform file system encoding."
msgstr ""

#: linkcheck.fileutil.has_module:1 of
msgid ""
"Test if given module can be imported. :param without_error: True if "
"module must not throw any errors when importing :return: flag if import "
"is successful :rtype: bool"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.ftpparse.rst:2
msgid "linkcheck.ftpparse"
msgstr ""

#: linkcheck.ftpparse:3 of
msgid "See also http://cr.yp.to/ftpparse.html"
msgstr ""

#: linkcheck.ftpparse.ftpparse:1:<autosummary>:1 of
msgid ":obj:`ftpparse <linkcheck.ftpparse.ftpparse>`\\ \\(line\\)"
msgstr ""

#: linkcheck.ftpparse.ftpparse:1 linkcheck.ftpparse.ftpparse:1:<autosummary>:1
#: of
msgid ""
"Parse a FTP list line into a dictionary with attributes: name - name of "
"file (string) trycwd - False if cwd is definitely pointless, True "
"otherwise tryretr - False if retr is definitely pointless, True otherwise"
msgstr ""

#: linkcheck.ftpparse.ftpparse:1:<autosummary>:1 of
msgid ":obj:`ismonth <linkcheck.ftpparse.ismonth>`\\ \\(txt\\)"
msgstr ""

#: linkcheck.ftpparse.ftpparse:1:<autosummary>:1 linkcheck.ftpparse.ismonth:1
#: of
msgid "Check if given text is a month name."
msgstr ""

#: linkcheck.ftpparse.ftpparse:6 of
msgid "If the line has no file information, None is returned"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.htmlutil.rst:2
msgid "linkcheck.htmlutil"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.htmlutil.rst:33:<autosummary>:1
msgid ":obj:`linkcheck.htmlutil.htmlsoup <linkcheck.htmlutil.htmlsoup>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.htmlutil.rst:33:<autosummary>:1
#: linkcheck.htmlutil.htmlsoup:1 of
msgid "HTML parser implemented using Beautiful Soup and html.parser."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.htmlutil.rst:33:<autosummary>:1
msgid ":obj:`linkcheck.htmlutil.linkparse <linkcheck.htmlutil.linkparse>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.htmlutil.rst:33:<autosummary>:1
#: linkcheck.htmlutil.linkparse:1 of
msgid "Find link tags in HTML text."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.htmlutil.rst:33:<autosummary>:1
msgid ""
":obj:`linkcheck.htmlutil.loginformsearch "
"<linkcheck.htmlutil.loginformsearch>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.htmlutil.rst:33:<autosummary>:1
#: linkcheck.htmlutil.loginformsearch:1 of
msgid "HTML form utils"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.htmlutil.htmlsoup.rst:2
msgid "linkcheck.htmlutil.htmlsoup"
msgstr ""

#: linkcheck.htmlutil.htmlsoup.make_soup:1:<autosummary>:1 of
msgid ""
":obj:`make_soup <linkcheck.htmlutil.htmlsoup.make_soup>`\\ "
"\\(markup\\[\\, from\\_encoding\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.htmlutil.linkparse.rst:2
msgid "linkcheck.htmlutil.linkparse"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.htmlutil.linkparse.rst:24:<autosummary>:1
msgid ""
":obj:`find_links <linkcheck.htmlutil.linkparse.find_links>`\\ \\(soup\\, "
"callback\\, tags\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.htmlutil.linkparse.rst:24:<autosummary>:1
msgid "Parse into content and search for URLs to check."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.htmlutil.linkparse.rst:24:<autosummary>:1
msgid ""
":obj:`is_form_get <linkcheck.htmlutil.linkparse.is_form_get>`\\ "
"\\(attr\\, attrs\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.htmlutil.linkparse.rst:24:<autosummary>:1
#: linkcheck.htmlutil.linkparse.is_form_get:1 of
msgid "Check if this is a GET form action URL."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.htmlutil.linkparse.rst:24:<autosummary>:1
msgid ""
":obj:`is_meta_url <linkcheck.htmlutil.linkparse.is_meta_url>`\\ "
"\\(attr\\, attrs\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.htmlutil.linkparse.rst:24:<autosummary>:1
#: linkcheck.htmlutil.linkparse.is_meta_url:1 of
msgid "Check if the meta attributes contain a URL."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.htmlutil.linkparse.rst:24:<autosummary>:1
msgid ""
":obj:`strip_c_comments <linkcheck.htmlutil.linkparse.strip_c_comments>`\\"
" \\(text\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.htmlutil.linkparse.rst:24:<autosummary>:1
msgid "Remove C/CSS-style comments from text."
msgstr ""

#: linkcheck.htmlutil.linkparse.LinkFinder:1:<autosummary>:1 of
msgid ""
":obj:`LinkFinder <linkcheck.htmlutil.linkparse.LinkFinder>`\\ "
"\\(callback\\, tags\\)"
msgstr ""

#: linkcheck.htmlutil.linkparse.LinkFinder:1
#: linkcheck.htmlutil.linkparse.LinkFinder:1:<autosummary>:1 of
msgid ""
"Find HTML links, and apply them to the callback function with the format "
"(url, lineno, column, name, codebase)."
msgstr ""

#: linkcheck.htmlutil.linkparse.LinkFinder:4 of
msgid "Store content in buffer and initialize URL list."
msgstr ""

#: linkcheck.htmlutil.linkparse.LinkFinder.found_url:1 of
msgid "Add newly found URL to queue."
msgstr ""

#: linkcheck.htmlutil.linkparse.LinkFinder.get_link_name:1 of
msgid "Parse attrs for link name. Return name of link."
msgstr ""

#: linkcheck.htmlutil.linkparse.LinkFinder.html_element:1 of
msgid "Search for links and store found URLs in a list."
msgstr ""

#: linkcheck.htmlutil.linkparse.LinkFinder.parse_tag:1 of
msgid "Add given url data to url list."
msgstr ""

#: linkcheck.htmlutil.linkparse.find_links:1 of
msgid ""
"Parse into content and search for URLs to check. When a URL is found it "
"is passed to the supplied callback."
msgstr ""

#: linkcheck.htmlutil.linkparse.strip_c_comments:1 of
msgid ""
"Remove C/CSS-style comments from text. Note that this method also "
"deliberately removes comments inside of strings."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.htmlutil.loginformsearch.rst:2
msgid "linkcheck.htmlutil.loginformsearch"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.htmlutil.loginformsearch.rst:21:<autosummary>:1
msgid ""
":obj:`search_form <linkcheck.htmlutil.loginformsearch.search_form>`\\ "
"\\(content\\, cgiuser\\, cgipassword\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.htmlutil.loginformsearch.rst:21:<autosummary>:1
msgid ""
"Search for a HTML form in the given HTML content that has input elements "
"with name attributes that match cgiuser and/or cgipassword."
msgstr ""

#: linkcheck.htmlutil.loginformsearch.Form:1:<autosummary>:1 of
msgid ":obj:`Form <linkcheck.htmlutil.loginformsearch.Form>`\\ \\(url\\)"
msgstr ""

#: linkcheck.htmlutil.loginformsearch.Form:1
#: linkcheck.htmlutil.loginformsearch.Form:1:<autosummary>:1 of
msgid "Store HTML form URL and form data."
msgstr ""

#: linkcheck.htmlutil.loginformsearch.Form:3 of
msgid "Set URL and empty form data."
msgstr ""

#: linkcheck.htmlutil.loginformsearch.Form.add_value:1 of
msgid "Add a form value."
msgstr ""

#: linkcheck.htmlutil.loginformsearch.search_form:1 of
msgid ""
"Search for a HTML form in the given HTML content that has input elements "
"with name attributes that match cgiuser and/or cgipassword. If no such "
"form is found return None."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.httputil.rst:2
msgid "linkcheck.httputil"
msgstr ""

#: linkcheck.httputil.asn1_generaltime_to_seconds:1:<autosummary>:1 of
msgid ""
":obj:`asn1_generaltime_to_seconds "
"<linkcheck.httputil.asn1_generaltime_to_seconds>`\\ \\(timestr\\)"
msgstr ""

#: linkcheck.httputil.asn1_generaltime_to_seconds:1
#: linkcheck.httputil.asn1_generaltime_to_seconds:1:<autosummary>:1 of
msgid ""
"The given string has one of the following formats YYYYMMDDhhmmssZ "
"YYYYMMDDhhmmss+hhmm YYYYMMDDhhmmss-hhmm"
msgstr ""

#: linkcheck.httputil.asn1_generaltime_to_seconds:1:<autosummary>:1 of
msgid ":obj:`encode_base64 <linkcheck.httputil.encode_base64>`\\ \\(s\\)"
msgstr ""

#: linkcheck.httputil.asn1_generaltime_to_seconds:1:<autosummary>:1
#: linkcheck.httputil.encode_base64:1 of
msgid "Encode given string in base64, excluding trailing newlines."
msgstr ""

#: linkcheck.httputil.asn1_generaltime_to_seconds:1:<autosummary>:1 of
msgid ""
":obj:`get_content_type <linkcheck.httputil.get_content_type>`\\ "
"\\(headers\\)"
msgstr ""

#: linkcheck.httputil.asn1_generaltime_to_seconds:1:<autosummary>:1
#: linkcheck.httputil.get_content_type:1 of
msgid ""
"Get the MIME type from the Content-Type header value, or 'application"
"/octet-stream' if not found."
msgstr ""

#: linkcheck.httputil.asn1_generaltime_to_seconds:1:<autosummary>:1 of
msgid ":obj:`x509_to_dict <linkcheck.httputil.x509_to_dict>`\\ \\(x509\\)"
msgstr ""

#: linkcheck.httputil.asn1_generaltime_to_seconds:1:<autosummary>:1
#: linkcheck.httputil.x509_to_dict:1 of
msgid ""
"Parse a x509 pyopenssl object to a dictionary with keys subject, "
"subjectAltName and optional notAfter."
msgstr ""

#: linkcheck.httputil.asn1_generaltime_to_seconds:6 of
msgid "a datetime object or None on error"
msgstr ""

#: linkcheck.httputil.get_content_type:4 of
msgid "MIME type"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:2
msgid "linkcheck.i18n"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:31:<autosummary>:1
msgid ""
":obj:`get_encoded_writer <linkcheck.i18n.get_encoded_writer>`\\ "
"\\(\\[out\\, encoding\\, errors\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:31:<autosummary>:1
#: linkcheck.i18n.get_encoded_writer:1 of
msgid "Get wrapped output writer with given encoding and error handling."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:31:<autosummary>:1
msgid ":obj:`get_headers_lang <linkcheck.i18n.get_headers_lang>`\\ \\(headers\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:31:<autosummary>:1
#: linkcheck.i18n.get_headers_lang:1 of
msgid "Return preferred supported language in given HTTP headers."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:31:<autosummary>:1
msgid ":obj:`get_lang <linkcheck.i18n.get_lang>`\\ \\(lang\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:31:<autosummary>:1
#: linkcheck.i18n.get_lang:1 of
msgid "Return lang if it is supported, or the default language."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:31:<autosummary>:1
msgid ":obj:`get_locale <linkcheck.i18n.get_locale>`\\ \\(\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:31:<autosummary>:1
msgid "Search the default platform locale and norm it."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:31:<autosummary>:1
msgid ""
":obj:`get_translator <linkcheck.i18n.get_translator>`\\ \\(domain\\, "
"directory\\[\\, ...\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:31:<autosummary>:1
#: linkcheck.i18n.get_translator:1 of
msgid "Search the appropriate GNUTranslations class."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:31:<autosummary>:1
msgid ":obj:`init <linkcheck.i18n.init>`\\ \\(domain\\, directory\\[\\, loc\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:31:<autosummary>:1
msgid "Initialize this gettext i18n module."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:31:<autosummary>:1
msgid ""
":obj:`install_builtin <linkcheck.i18n.install_builtin>`\\ "
"\\(translator\\, do\\_unicode\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:31:<autosummary>:1
#: linkcheck.i18n.install_builtin:1 of
msgid "Install _() and _n() gettext methods into default namespace."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:31:<autosummary>:1
msgid ":obj:`install_language <linkcheck.i18n.install_language>`\\ \\(language\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:31:<autosummary>:1
#: linkcheck.i18n.install_language:1 of
msgid "Install translation service routines into default namespace."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:31:<autosummary>:1
msgid ":obj:`lang_name <linkcheck.i18n.lang_name>`\\ \\(lang\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:31:<autosummary>:1
#: linkcheck.i18n.lang_name:1 of
msgid "Return full name of given language."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:31:<autosummary>:1
msgid ":obj:`lang_trans <linkcheck.i18n.lang_trans>`\\ \\(lang\\, curlang\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:31:<autosummary>:1
#: linkcheck.i18n.lang_trans:1 of
msgid "Return translated full name of given language."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:31:<autosummary>:1
msgid ":obj:`norm_locale <linkcheck.i18n.norm_locale>`\\ \\(loc\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:31:<autosummary>:1
#: linkcheck.i18n.norm_locale:1 of
msgid "Normalize a locale."
msgstr ""

#: linkcheck.i18n.NullTranslator:1:<autosummary>:1 of
msgid ":obj:`NullTranslator <linkcheck.i18n.NullTranslator>`\\ \\(\\[fp\\]\\)"
msgstr ""

#: linkcheck.i18n.NullTranslator:1
#: linkcheck.i18n.NullTranslator:1:<autosummary>:1 of
msgid ""
"A dummy translation class always installing its gettext methods into the "
"default namespace."
msgstr ""

#: linkcheck.i18n.NullTranslator:1:<autosummary>:1 of
msgid ":obj:`Translator <linkcheck.i18n.Translator>`\\ \\(\\[fp\\]\\)"
msgstr ""

#: linkcheck.i18n.NullTranslator:1:<autosummary>:1 linkcheck.i18n.Translator:1
#: of
msgid ""
"A translation class always installing its gettext methods into the "
"default namespace."
msgstr ""

#: linkcheck.i18n.NullTranslator:1 of
msgid "Bases: :class:`gettext.NullTranslations`"
msgstr ""

#: linkcheck.i18n.NullTranslator.install:1 linkcheck.i18n.Translator.install:1
#: of
msgid "Install gettext methods into the default namespace."
msgstr ""

#: linkcheck.i18n.Translator:1 of
msgid "Bases: :class:`gettext.GNUTranslations`"
msgstr ""

#: linkcheck.i18n.get_locale:1 of
msgid ""
"Search the default platform locale and norm it. :returns (locale, "
"encoding) :rtype (string, string)"
msgstr ""

#: linkcheck.i18n.init:1 of
msgid ""
"Initialize this gettext i18n module. Searches for supported languages and"
" installs the gettext translator class."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:2
msgid "linkcheck.lc\\_cgi"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
msgid ""
":obj:`application <linkcheck.lc_cgi.application>`\\ \\(environ\\, "
"start\\_response\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
#: linkcheck.lc_cgi.application:1 of
msgid "WSGI interface: start an URL check."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
msgid ":obj:`checkform <linkcheck.lc_cgi.checkform>`\\ \\(form\\, env\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
msgid "Check form data."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
msgid ":obj:`checklink <linkcheck.lc_cgi.checklink>`\\ \\(form\\, env\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
#: linkcheck.lc_cgi.checklink:1 of
msgid "Validates the CGI form and checks the given links."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
msgid ":obj:`dump <linkcheck.lc_cgi.dump>`\\ \\(env\\, form\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
#: linkcheck.lc_cgi.dump:1 of
msgid "Log environment and form."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
msgid ":obj:`encode <linkcheck.lc_cgi.encode>`\\ \\(s\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
#: linkcheck.lc_cgi.encode:1 of
msgid "Encode given string in HTML encoding."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
msgid ":obj:`format_error <linkcheck.lc_cgi.format_error>`\\ \\(why\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
#: linkcheck.lc_cgi.format_error:1 of
msgid "Format standard error page."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
msgid ":obj:`formvalue <linkcheck.lc_cgi.formvalue>`\\ \\(form\\, key\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
#: linkcheck.lc_cgi.formvalue:1 of
msgid "Get value with given key from WSGI form."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
msgid ""
":obj:`get_configuration <linkcheck.lc_cgi.get_configuration>`\\ "
"\\(form\\, out\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
#: linkcheck.lc_cgi.get_configuration:1 of
msgid "Initialize a CGI configuration."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
msgid ":obj:`get_host_name <linkcheck.lc_cgi.get_host_name>`\\ \\(form\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
#: linkcheck.lc_cgi.get_host_name:1 of
msgid "Return host name of given URL."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
msgid ""
":obj:`get_response_headers <linkcheck.lc_cgi.get_response_headers>`\\ "
"\\(\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
#: linkcheck.lc_cgi.get_response_headers:1 of
msgid "Get list of response headers in key-value form."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
msgid ":obj:`log <linkcheck.lc_cgi.log>`\\ \\(env\\, msg\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
#: linkcheck.lc_cgi.log:1 of
msgid "Log message to WSGI error output."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
msgid ":obj:`start_check <linkcheck.lc_cgi.start_check>`\\ \\(aggregate\\, out\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
#: linkcheck.lc_cgi.start_check:1 of
msgid "Start checking in background and write encoded output to out."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:42:<autosummary>:1
msgid ":obj:`ThreadsafeIO <linkcheck.lc_cgi.ThreadsafeIO>`\\ \\(\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:42:<autosummary>:1
#: linkcheck.lc_cgi.ThreadsafeIO:1 of
msgid "Thread-safe unicode I/O class."
msgstr ""

#: linkcheck.lc_cgi.LCFormError:1:<autosummary>:1 of
msgid ":obj:`LCFormError <linkcheck.lc_cgi.LCFormError>`\\"
msgstr ""

#: linkcheck.lc_cgi.LCFormError:1
#: linkcheck.lc_cgi.LCFormError:1:<autosummary>:1 of
msgid "Form related errors."
msgstr ""

#: linkcheck.lc_cgi.ThreadsafeIO:3 of
msgid "Initialize buffer."
msgstr ""

#: linkcheck.lc_cgi.ThreadsafeIO.close:1 of
msgid "Reset buffer and close this I/O object."
msgstr ""

#: linkcheck.lc_cgi.ThreadsafeIO.get_data:1 of
msgid "Get bufferd unicode data."
msgstr ""

#: linkcheck.lc_cgi.ThreadsafeIO.write:1 of
msgid "Write given unicode data to buffer."
msgstr ""

#: linkcheck.lc_cgi.checkform:1 of
msgid ""
"Check form data. throw exception on error Be sure to NOT print out any "
"user-given data as HTML code, so use only plain strings as exception "
"text."
msgstr ""

#: linkcheck.lc_cgi.format_error:3 of
msgid "error message"
msgstr ""

#: linkcheck.lc_cgi.format_error:5 of
msgid "HTML page content"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.loader.rst:2
msgid "linkcheck.loader"
msgstr ""

#: linkcheck.loader:3 of
msgid "Example usage::"
msgstr ""

#: linkcheck.loader.check_writable_by_others:1:<autosummary>:1 of
msgid ""
":obj:`check_writable_by_others "
"<linkcheck.loader.check_writable_by_others>`\\ \\(filename\\)"
msgstr ""

#: linkcheck.loader.check_writable_by_others:1:<autosummary>:1 of
msgid "Check if file is writable by others on POSIX systems."
msgstr ""

#: linkcheck.loader.check_writable_by_others:1:<autosummary>:1 of
msgid ""
":obj:`get_folder_modules <linkcheck.loader.get_folder_modules>`\\ "
"\\(folder\\, parentpackage\\)"
msgstr ""

#: linkcheck.loader.check_writable_by_others:1:<autosummary>:1
#: linkcheck.loader.get_folder_modules:1 of
msgid "."
msgstr ""

#: linkcheck.loader.check_writable_by_others:1:<autosummary>:1 of
msgid ""
":obj:`get_importable_files <linkcheck.loader.get_importable_files>`\\ "
"\\(folder\\)"
msgstr ""

#: linkcheck.loader.check_writable_by_others:1:<autosummary>:1
#: linkcheck.loader.get_importable_files:1 of
msgid ""
"Find all module files in the given folder that end with '.py' and don't "
"start with an underscore."
msgstr ""

#: linkcheck.loader.check_writable_by_others:1:<autosummary>:1 of
msgid ""
":obj:`get_module_plugins <linkcheck.loader.get_module_plugins>`\\ "
"\\(module\\, classes\\)"
msgstr ""

#: linkcheck.loader.check_writable_by_others:1:<autosummary>:1 of
msgid "Return all subclasses of a class in the module."
msgstr ""

#: linkcheck.loader.check_writable_by_others:1:<autosummary>:1 of
msgid ""
":obj:`get_package_modules <linkcheck.loader.get_package_modules>`\\ "
"\\(packagename\\)"
msgstr ""

#: linkcheck.loader.check_writable_by_others:1:<autosummary>:1 of
msgid ""
"Find all valid modules in the given package which must be a folder in the"
" same directory as this loader.py module."
msgstr ""

#: linkcheck.loader.check_writable_by_others:1:<autosummary>:1 of
msgid ""
":obj:`get_plugins <linkcheck.loader.get_plugins>`\\ \\(modules\\, "
"classes\\)"
msgstr ""

#: linkcheck.loader.check_writable_by_others:1:<autosummary>:1
#: linkcheck.loader.get_plugins:1 of
msgid "Find all given (sub-)classes in all modules."
msgstr ""

#: linkcheck.loader.check_writable_by_others:1:<autosummary>:1 of
msgid ":obj:`is_frozen <linkcheck.loader.is_frozen>`\\ \\(\\)"
msgstr ""

#: linkcheck.loader.check_writable_by_others:1:<autosummary>:1
#: linkcheck.loader.is_frozen:1 of
msgid "Return True if running inside a py2exe- or py2app-generated executable."
msgstr ""

#: linkcheck.loader.check_writable_by_others:1 of
msgid ""
"Check if file is writable by others on POSIX systems. On non-POSIX "
"systems the check is ignored."
msgstr ""

#: linkcheck.loader.get_importable_files:4 of
msgid "module names"
msgstr ""

#: linkcheck.loader.get_module_plugins:1 of
msgid ""
"Return all subclasses of a class in the module. If the module defines "
"__all__, only those entries will be searched, otherwise all objects not "
"starting with '_' will be searched."
msgstr ""

#: linkcheck.loader.get_package_modules:1 of
msgid ""
"Find all valid modules in the given package which must be a folder in the"
" same directory as this loader.py module. A valid module has a .py "
"extension, and is importable."
msgstr ""

#: linkcheck.loader.get_package_modules:5 of
msgid "all loaded valid modules"
msgstr ""

#: linkcheck.loader.get_plugins:3 of
msgid "the modules to search"
msgstr ""

#: linkcheck.loader.get_plugins:5 of
msgid "found classes"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lock.rst:2
msgid "linkcheck.lock"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lock.rst:22:<autosummary>:1
msgid ":obj:`get_lock <linkcheck.lock.get_lock>`\\ \\(name\\[\\, debug\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lock.rst:22:<autosummary>:1
#: linkcheck.lock.get_lock:1 of
msgid "Get a new lock."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lock.rst:22:<autosummary>:1
msgid ""
":obj:`get_semaphore <linkcheck.lock.get_semaphore>`\\ \\(name\\[\\, "
"value\\, debug\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lock.rst:22:<autosummary>:1
#: linkcheck.lock.get_semaphore:1 of
msgid "Get a new semaphore."
msgstr ""

#: linkcheck.lock.DebugLock:1:<autosummary>:1 of
msgid ":obj:`DebugLock <linkcheck.lock.DebugLock>`\\ \\(lock\\, name\\)"
msgstr ""

#: linkcheck.lock.DebugLock:1 linkcheck.lock.DebugLock:1:<autosummary>:1 of
msgid "Debugging lock class."
msgstr ""

#: linkcheck.lock.DebugLock:3 of
msgid "Store lock and name parameters."
msgstr ""

#: linkcheck.lock.DebugLock.acquire:1 of
msgid "Acquire lock."
msgstr ""

#: linkcheck.lock.DebugLock.release:1 of
msgid "Release lock."
msgstr ""

#: linkcheck.lock.get_lock:3 linkcheck.lock.get_semaphore:5 of
msgid "if True, acquire() and release() will have debug messages"
msgstr ""

#: linkcheck.lock.get_lock:5 of
msgid "a lock object"
msgstr ""

#: linkcheck.lock.get_semaphore:3 of
msgid "if not None, a BoundedSemaphore will be used"
msgstr ""

#: linkcheck.lock.get_semaphore:7 of
msgid "a semaphore object"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.log.rst:2
msgid "linkcheck.log"
msgstr ""

#: linkcheck.log.critical:1:<autosummary>:1 of
msgid ""
":obj:`critical <linkcheck.log.critical>`\\ \\(logname\\, msg\\, "
"\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: linkcheck.log.critical:1 linkcheck.log.critical:1:<autosummary>:1 of
msgid "Log a critical error."
msgstr ""

#: linkcheck.log.critical:1:<autosummary>:1 of
msgid ""
":obj:`debug <linkcheck.log.debug>`\\ \\(logname\\, msg\\, \\*args\\, "
"\\*\\*kwargs\\)"
msgstr ""

#: linkcheck.log.critical:1:<autosummary>:1 linkcheck.log.debug:1 of
msgid "Log a debug message."
msgstr ""

#: linkcheck.log.critical:1:<autosummary>:1 of
msgid ""
":obj:`error <linkcheck.log.error>`\\ \\(logname\\, msg\\, \\*args\\, "
"\\*\\*kwargs\\)"
msgstr ""

#: linkcheck.log.critical:1:<autosummary>:1 linkcheck.log.error:1 of
msgid "Log an error."
msgstr ""

#: linkcheck.log.critical:1:<autosummary>:1 of
msgid ""
":obj:`exception <linkcheck.log.exception>`\\ \\(logname\\, msg\\, "
"\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: linkcheck.log.critical:1:<autosummary>:1 linkcheck.log.exception:1 of
msgid "Log an exception."
msgstr ""

#: linkcheck.log.critical:1:<autosummary>:1 of
msgid ""
":obj:`info <linkcheck.log.info>`\\ \\(logname\\, msg\\, \\*args\\, "
"\\*\\*kwargs\\)"
msgstr ""

#: linkcheck.log.critical:1:<autosummary>:1 linkcheck.log.info:1 of
msgid "Log an informational message."
msgstr ""

#: linkcheck.log.critical:1:<autosummary>:1 of
msgid ":obj:`is_debug <linkcheck.log.is_debug>`\\ \\(logname\\)"
msgstr ""

#: linkcheck.log.critical:1:<autosummary>:1 linkcheck.log.is_debug:1 of
msgid "See if logger is on debug level."
msgstr ""

#: linkcheck.log.critical:1:<autosummary>:1 of
msgid ":obj:`shutdown <linkcheck.log.shutdown>`\\ \\(\\)"
msgstr ""

#: linkcheck.log.critical:1:<autosummary>:1 linkcheck.log.shutdown:1 of
msgid "Flush and close all log handlers."
msgstr ""

#: linkcheck.log.critical:1:<autosummary>:1 of
msgid ""
":obj:`warn <linkcheck.log.warn>`\\ \\(logname\\, msg\\, \\*args\\, "
"\\*\\*kwargs\\)"
msgstr ""

#: linkcheck.log.critical:1:<autosummary>:1 linkcheck.log.warn:1 of
msgid "Log a warning."
msgstr ""

#: linkcheck.log.critical:3 linkcheck.log.debug:3 linkcheck.log.error:3
#: linkcheck.log.exception:3 linkcheck.log.info:3 linkcheck.log.warn:3 of
msgid "return: None"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logconf.rst:2
msgid "linkcheck.logconf"
msgstr ""

#: linkcheck.logconf.add_loghandler:1:<autosummary>:1 of
msgid ":obj:`add_loghandler <linkcheck.logconf.add_loghandler>`\\ \\(handler\\)"
msgstr ""

#: linkcheck.logconf.add_loghandler:1
#: linkcheck.logconf.add_loghandler:1:<autosummary>:1 of
msgid "Add log handler to root logger and LOG_ROOT and set formatting."
msgstr ""

#: linkcheck.logconf.add_loghandler:1:<autosummary>:1 of
msgid ""
":obj:`init_log_config <linkcheck.logconf.init_log_config>`\\ "
"\\(\\[handler\\]\\)"
msgstr ""

#: linkcheck.logconf.add_loghandler:1:<autosummary>:1
#: linkcheck.logconf.init_log_config:1 of
msgid "Set up the application logging (not to be confused with check loggers)."
msgstr ""

#: linkcheck.logconf.add_loghandler:1:<autosummary>:1 of
msgid ""
":obj:`remove_loghandler <linkcheck.logconf.remove_loghandler>`\\ "
"\\(handler\\)"
msgstr ""

#: linkcheck.logconf.add_loghandler:1:<autosummary>:1
#: linkcheck.logconf.remove_loghandler:1 of
msgid "Remove log handler from root logger and LOG_ROOT."
msgstr ""

#: linkcheck.logconf.add_loghandler:1:<autosummary>:1 of
msgid ":obj:`reset_loglevel <linkcheck.logconf.reset_loglevel>`\\ \\(\\)"
msgstr ""

#: linkcheck.logconf.add_loghandler:1:<autosummary>:1
#: linkcheck.logconf.reset_loglevel:1 of
msgid "Reset log level to display only warnings and errors."
msgstr ""

#: linkcheck.logconf.add_loghandler:1:<autosummary>:1 of
msgid ":obj:`set_debug <linkcheck.logconf.set_debug>`\\ \\(loggers\\)"
msgstr ""

#: linkcheck.logconf.add_loghandler:1:<autosummary>:1
#: linkcheck.logconf.set_debug:1 of
msgid "Set debugging log level."
msgstr ""

#: linkcheck.logconf.add_loghandler:1:<autosummary>:1 of
msgid ""
":obj:`set_loglevel <linkcheck.logconf.set_loglevel>`\\ \\(loggers\\, "
"level\\)"
msgstr ""

#: linkcheck.logconf.add_loghandler:1:<autosummary>:1
#: linkcheck.logconf.set_loglevel:1 of
msgid "Set logging levels for given loggers."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:2
msgid "linkcheck.logger"
msgstr ""

#: linkcheck.logger.LogStatistics:1:<autosummary>:1 of
msgid ":obj:`LogStatistics <linkcheck.logger.LogStatistics>`\\ \\(\\)"
msgstr ""

#: linkcheck.logger.LogStatistics:1
#: linkcheck.logger.LogStatistics:1:<autosummary>:1 of
msgid ""
"Gather log statistics: - number of errors, warnings and valid links - "
"type of contents (image, video, audio, text, ...) - URL lengths"
msgstr ""

#: linkcheck.logger.LogStatistics:6 of
msgid "Initialize log statistics."
msgstr ""

#: linkcheck.logger.LogStatistics.log_internal_error:1 of
msgid "Increase internal error count."
msgstr ""

#: linkcheck.logger.LogStatistics.log_url:1 of
msgid "Log URL statistics."
msgstr ""

#: linkcheck.logger.LogStatistics.reset:1 of
msgid "Reset all log statistics to default values."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
msgid ":obj:`linkcheck.logger.blacklist <linkcheck.logger.blacklist>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
#: linkcheck.logger.blacklist:1 of
msgid "A blacklist logger."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
msgid ":obj:`linkcheck.logger.csvlog <linkcheck.logger.csvlog>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
#: linkcheck.logger.csvlog:1 of
msgid "A CSV logger."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
msgid ":obj:`linkcheck.logger.customxml <linkcheck.logger.customxml>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
#: linkcheck.logger.customxml:1 of
msgid "An XML logger."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
msgid ":obj:`linkcheck.logger.dot <linkcheck.logger.dot>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
msgid "A DOT graph format logger."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
msgid ":obj:`linkcheck.logger.gml <linkcheck.logger.gml>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
#: linkcheck.logger.gml:1 of
msgid "A gml logger."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
msgid ":obj:`linkcheck.logger.graph <linkcheck.logger.graph>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
#: linkcheck.logger.graph:1 of
msgid "Base class for graph loggers."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
msgid ":obj:`linkcheck.logger.gxml <linkcheck.logger.gxml>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
#: linkcheck.logger.gxml:1 of
msgid "A GraphXML logger."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
msgid ":obj:`linkcheck.logger.html <linkcheck.logger.html>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
#: linkcheck.logger.html:1 of
msgid "A HTML logger."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
msgid ":obj:`linkcheck.logger.none <linkcheck.logger.none>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
#: linkcheck.logger.none:1 of
msgid "A dummy logger."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
msgid ":obj:`linkcheck.logger.sitemapxml <linkcheck.logger.sitemapxml>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
#: linkcheck.logger.sitemapxml:1 of
msgid "A sitemap XML logger."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
msgid ":obj:`linkcheck.logger.sql <linkcheck.logger.sql>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
#: linkcheck.logger.sql:1 of
msgid "A SQL logger."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
msgid ":obj:`linkcheck.logger.text <linkcheck.logger.text>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
#: linkcheck.logger.text:1 of
msgid "The default text logger."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
msgid ":obj:`linkcheck.logger.xmllog <linkcheck.logger.xmllog>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
#: linkcheck.logger.xmllog:1 of
msgid "Base class for XML loggers."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.blacklist.rst:2
msgid "linkcheck.logger.blacklist"
msgstr ""

#: linkcheck.logger.blacklist.BlacklistLogger:1:<autosummary>:1 of
msgid ""
":obj:`BlacklistLogger <linkcheck.logger.blacklist.BlacklistLogger>`\\ "
"\\(\\*\\*kwargs\\)"
msgstr ""

#: linkcheck.logger.blacklist.BlacklistLogger:1:<autosummary>:1 of
msgid "Updates a blacklist of wrong links."
msgstr ""

#: linkcheck.logger.blacklist.BlacklistLogger:1
#: linkcheck.logger.csvlog.CSVLogger:1 linkcheck.logger.html.HtmlLogger:1
#: linkcheck.logger.none.NoneLogger:1 linkcheck.logger.sql.SQLLogger:1
#: linkcheck.logger.text.TextLogger:1 of
msgid "Bases: :class:`linkcheck.logger._Logger`"
msgstr ""

#: linkcheck.logger.blacklist.BlacklistLogger:1 of
msgid ""
"Updates a blacklist of wrong links. If a link on the blacklist is working"
" (again), it is removed from the list. So after n days we have only links"
" on the list which failed for n days."
msgstr ""

#: linkcheck.logger.blacklist.BlacklistLogger:5 of
msgid "Intialize with old blacklist data (if found, else not)."
msgstr ""

#: linkcheck.logger.blacklist.BlacklistLogger.comment:1 of
msgid "Write nothing."
msgstr ""

#: linkcheck.logger.blacklist.BlacklistLogger.end_output:1 of
msgid "Write blacklist file."
msgstr ""

#: linkcheck.logger.blacklist.BlacklistLogger.log_url:1 of
msgid "Put invalid url in blacklist, delete valid url from blacklist."
msgstr ""

#: linkcheck.logger.blacklist.BlacklistLogger.read_blacklist:1 of
msgid "Read a previously stored blacklist from file fd."
msgstr ""

#: linkcheck.logger.blacklist.BlacklistLogger.write_blacklist:1 of
msgid "Write the blacklist."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.csvlog.rst:2
msgid "linkcheck.logger.csvlog"
msgstr ""

#: linkcheck.logger.csvlog.CSVLogger:1:<autosummary>:1 of
msgid ":obj:`CSVLogger <linkcheck.logger.csvlog.CSVLogger>`\\ \\(\\*\\*kwargs\\)"
msgstr ""

#: linkcheck.logger.csvlog.CSVLogger:1:<autosummary>:1 of
msgid "CSV output, consisting of one line per entry."
msgstr ""

#: linkcheck.logger.csvlog.CSVLogger:1 of
msgid ""
"CSV output, consisting of one line per entry. Entries are separated by a "
"separator (a semicolon per default)."
msgstr ""

#: linkcheck.logger.csvlog.CSVLogger:4 of
msgid "Store default separator and (os dependent) line terminator."
msgstr ""

#: linkcheck.logger.csvlog.CSVLogger.comment:1 of
msgid "Write CSV comment."
msgstr ""

#: linkcheck.logger.csvlog.CSVLogger.end_output:1 of
msgid "Write end of checking info as csv comment."
msgstr ""

#: linkcheck.logger.csvlog.CSVLogger.log_url:1 of
msgid "Write csv formatted url check info."
msgstr ""

#: linkcheck.logger.csvlog.CSVLogger.start_output:1 of
msgid "Write checking start info as csv comment."
msgstr ""

#: linkcheck.logger.csvlog.CSVLogger.writerow:1 of
msgid "Write one row in CSV format."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.customxml.rst:2
msgid "linkcheck.logger.customxml"
msgstr ""

#: linkcheck.logger.customxml.CustomXMLLogger:1:<autosummary>:1 of
msgid ""
":obj:`CustomXMLLogger <linkcheck.logger.customxml.CustomXMLLogger>`\\ "
"\\(\\*\\*kwargs\\)"
msgstr ""

#: linkcheck.logger.customxml.CustomXMLLogger:1
#: linkcheck.logger.customxml.CustomXMLLogger:1:<autosummary>:1 of
msgid "XML custom output for easy post-processing."
msgstr ""

#: linkcheck.logger.customxml.CustomXMLLogger:1
#: linkcheck.logger.sitemapxml.SitemapXmlLogger:1 of
msgid "Bases: :class:`linkcheck.logger.xmllog._XMLLogger`"
msgstr ""

#: linkcheck.logger.customxml.CustomXMLLogger:3
#: linkcheck.logger.dot.DOTLogger:3 linkcheck.logger.gml.GMLLogger:4
#: linkcheck.logger.gxml.GraphXMLLogger:4
#: linkcheck.logger.sitemapxml.SitemapXmlLogger:4 of
msgid "Initialize graph node list and internal id counter."
msgstr ""

#: linkcheck.logger.customxml.CustomXMLLogger.end_output:1
#: linkcheck.logger.sitemapxml.SitemapXmlLogger.end_output:1 of
msgid "Write XML end tag."
msgstr ""

#: linkcheck.logger.customxml.CustomXMLLogger.log_url:1 of
msgid "Log URL data in custom XML format."
msgstr ""

#: linkcheck.logger.customxml.CustomXMLLogger.start_output:1
#: linkcheck.logger.gxml.GraphXMLLogger.start_output:1
#: linkcheck.logger.sitemapxml.SitemapXmlLogger.start_output:1 of
msgid "Write start of checking info as xml comment."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.dot.rst:2
msgid "linkcheck.logger.dot"
msgstr ""

#: linkcheck.logger.dot:1 of
msgid ""
"A DOT graph format logger. The specification has been taken from "
"https://www.graphviz.org/doc/info/lang.html"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.dot.rst:21:<autosummary>:1
msgid ":obj:`dotquote <linkcheck.logger.dot.dotquote>`\\ \\(s\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.dot.rst:21:<autosummary>:1
#: linkcheck.logger.dot.dotquote:1 of
msgid "Quote string for usage in DOT output format."
msgstr ""

#: linkcheck.logger.dot.DOTLogger:1:<autosummary>:1 of
msgid ":obj:`DOTLogger <linkcheck.logger.dot.DOTLogger>`\\ \\(\\*\\*kwargs\\)"
msgstr ""

#: linkcheck.logger.dot.DOTLogger:1:<autosummary>:1 of
msgid "Generates .dot sitemap graphs."
msgstr ""

#: linkcheck.logger.dot.DOTLogger:1 linkcheck.logger.gml.GMLLogger:1 of
msgid "Bases: :class:`linkcheck.logger.graph._GraphLogger`"
msgstr ""

#: linkcheck.logger.dot.DOTLogger:1 of
msgid "Generates .dot sitemap graphs. Use graphviz to see the sitemap graph."
msgstr ""

#: linkcheck.logger.dot.DOTLogger.comment:1 of
msgid "Write DOT comment."
msgstr ""

#: linkcheck.logger.dot.DOTLogger.end_graph:1
#: linkcheck.logger.gml.GMLLogger.end_graph:1 of
msgid "Write end of graph marker."
msgstr ""

#: linkcheck.logger.dot.DOTLogger.log_url:1
#: linkcheck.logger.gml.GMLLogger.log_url:1 of
msgid "Write one node."
msgstr ""

#: linkcheck.logger.dot.DOTLogger.start_output:1 of
msgid "Write start of checking info as DOT comment."
msgstr ""

#: linkcheck.logger.dot.DOTLogger.write_edge:1 of
msgid "Write edge from parent to node."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.gml.rst:2
msgid "linkcheck.logger.gml"
msgstr ""

#: linkcheck.logger.gml.GMLLogger:1:<autosummary>:1 of
msgid ":obj:`GMLLogger <linkcheck.logger.gml.GMLLogger>`\\ \\(\\*\\*kwargs\\)"
msgstr ""

#: linkcheck.logger.gml.GMLLogger:1:<autosummary>:1 of
msgid "GML means Graph Modeling Language."
msgstr ""

#: linkcheck.logger.gml.GMLLogger:1 of
msgid ""
"GML means Graph Modeling Language. Use a GML tool to see the sitemap "
"graph."
msgstr ""

#: linkcheck.logger.gml.GMLLogger.comment:1 of
msgid "Write GML comment."
msgstr ""

#: linkcheck.logger.gml.GMLLogger.start_output:1 of
msgid "Write start of checking info as gml comment."
msgstr ""

#: linkcheck.logger.gml.GMLLogger.write_edge:1
#: linkcheck.logger.gxml.GraphXMLLogger.write_edge:1 of
msgid "Write one edge."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.graph.rst:2
msgid "linkcheck.logger.graph"
msgstr ""

#: linkcheck.logger.graph.quote:1:<autosummary>:1 of
msgid ":obj:`quote <linkcheck.logger.graph.quote>`\\ \\(s\\)"
msgstr ""

#: linkcheck.logger.graph.quote:1:<autosummary>:1 of
msgid "Replace disallowed characters in node or edge labels."
msgstr ""

#: linkcheck.logger.graph.quote:1 of
msgid ""
"Replace disallowed characters in node or edge labels. Also remove "
"whitespace from beginning or end of label."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.gxml.rst:2
msgid "linkcheck.logger.gxml"
msgstr ""

#: linkcheck.logger.gxml.GraphXMLLogger:1:<autosummary>:1 of
msgid ""
":obj:`GraphXMLLogger <linkcheck.logger.gxml.GraphXMLLogger>`\\ "
"\\(\\*\\*kwargs\\)"
msgstr ""

#: linkcheck.logger.gxml.GraphXMLLogger:1:<autosummary>:1 of
msgid "XML output mirroring the GML structure."
msgstr ""

#: linkcheck.logger.gxml.GraphXMLLogger:1 of
msgid ""
"Bases: :class:`linkcheck.logger.xmllog._XMLLogger`, "
":class:`linkcheck.logger.graph._GraphLogger`"
msgstr ""

#: linkcheck.logger.gxml.GraphXMLLogger:1 of
msgid "XML output mirroring the GML structure. Easy to parse with any XML tool."
msgstr ""

#: linkcheck.logger.gxml.GraphXMLLogger.end_output:1 of
msgid "Finish graph output, and print end of checking info as xml comment."
msgstr ""

#: linkcheck.logger.gxml.GraphXMLLogger.log_url:1 of
msgid "Write one node and all possible edges."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.html.rst:2
msgid "linkcheck.logger.html"
msgstr ""

#: linkcheck.logger.html.HtmlLogger:1:<autosummary>:1 of
msgid ":obj:`HtmlLogger <linkcheck.logger.html.HtmlLogger>`\\ \\(\\*\\*kwargs\\)"
msgstr ""

#: linkcheck.logger.html.HtmlLogger:1
#: linkcheck.logger.html.HtmlLogger:1:<autosummary>:1 of
msgid "Logger with HTML output."
msgstr ""

#: linkcheck.logger.html.HtmlLogger:3 of
msgid "Initialize default HTML color values."
msgstr ""

#: linkcheck.logger.html.HtmlLogger.comment:1 of
msgid "Write HTML comment."
msgstr ""

#: linkcheck.logger.html.HtmlLogger.end_output:1 of
msgid "Write end of checking info as HTML."
msgstr ""

#: linkcheck.logger.html.HtmlLogger.log_url:1 of
msgid "Write url checking info as HTML."
msgstr ""

#: linkcheck.logger.html.HtmlLogger.part:1 of
msgid "Return non-space-breakable part name."
msgstr ""

#: linkcheck.logger.html.HtmlLogger.start_output:1 of
msgid "Write start of checking info."
msgstr ""

#: linkcheck.logger.html.HtmlLogger.write_base:1
#: linkcheck.logger.text.TextLogger.write_base:1 of
msgid "Write url_data.base_ref."
msgstr ""

#: linkcheck.logger.html.HtmlLogger.write_checktime:1
#: linkcheck.logger.text.TextLogger.write_checktime:1 of
msgid "Write url_data.checktime."
msgstr ""

#: linkcheck.logger.html.HtmlLogger.write_dltime:1
#: linkcheck.logger.text.TextLogger.write_dltime:1 of
msgid "Write url_data.dltime."
msgstr ""

#: linkcheck.logger.html.HtmlLogger.write_id:1 of
msgid "Write ID for current URL."
msgstr ""

#: linkcheck.logger.html.HtmlLogger.write_info:1
#: linkcheck.logger.text.TextLogger.write_info:1 of
msgid "Write url_data.info."
msgstr ""

#: linkcheck.logger.html.HtmlLogger.write_modified:1
#: linkcheck.logger.text.TextLogger.write_modified:1 of
msgid "Write url_data.modified."
msgstr ""

#: linkcheck.logger.html.HtmlLogger.write_name:1
#: linkcheck.logger.text.TextLogger.write_name:1 of
msgid "Write url_data.name."
msgstr ""

#: linkcheck.logger.html.HtmlLogger.write_outro:1 of
msgid "Write end of check message."
msgstr ""

#: linkcheck.logger.html.HtmlLogger.write_parent:1
#: linkcheck.logger.text.TextLogger.write_parent:1 of
msgid "Write url_data.parent_url."
msgstr ""

#: linkcheck.logger.html.HtmlLogger.write_real:1
#: linkcheck.logger.text.TextLogger.write_real:1 of
msgid "Write url_data.url."
msgstr ""

#: linkcheck.logger.html.HtmlLogger.write_result:1
#: linkcheck.logger.text.TextLogger.write_result:1 of
msgid "Write url_data.result."
msgstr ""

#: linkcheck.logger.html.HtmlLogger.write_size:1
#: linkcheck.logger.text.TextLogger.write_size:1 of
msgid "Write url_data.size."
msgstr ""

#: linkcheck.logger.html.HtmlLogger.write_stats:1 of
msgid "Write check statistic infos."
msgstr ""

#: linkcheck.logger.html.HtmlLogger.write_table_end:1 of
msgid "End html table."
msgstr ""

#: linkcheck.logger.html.HtmlLogger.write_table_start:1 of
msgid "Start html table."
msgstr ""

#: linkcheck.logger.html.HtmlLogger.write_url:1
#: linkcheck.logger.text.TextLogger.write_url:1 of
msgid "Write url_data.base_url."
msgstr ""

#: linkcheck.logger.html.HtmlLogger.write_warning:1 of
msgid "Write url_data.warnings."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.none.rst:2
msgid "linkcheck.logger.none"
msgstr ""

#: linkcheck.logger.none.NoneLogger:1:<autosummary>:1 of
msgid ":obj:`NoneLogger <linkcheck.logger.none.NoneLogger>`\\ \\(\\*\\*args\\)"
msgstr ""

#: linkcheck.logger.none.NoneLogger:1
#: linkcheck.logger.none.NoneLogger:1:<autosummary>:1 of
msgid "Dummy logger printing nothing."
msgstr ""

#: linkcheck.logger.none.NoneLogger:3 of
msgid "Initialize a logger, looking for part restrictions in kwargs."
msgstr ""

#: linkcheck.logger.none.NoneLogger.comment:1
#: linkcheck.logger.none.NoneLogger.end_output:1
#: linkcheck.logger.none.NoneLogger.log_url:1
#: linkcheck.logger.none.NoneLogger.start_output:1 of
msgid "Do nothing."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.sitemapxml.rst:2
msgid "linkcheck.logger.sitemapxml"
msgstr ""

#: linkcheck.logger.sitemapxml.SitemapXmlLogger:1:<autosummary>:1 of
msgid ""
":obj:`SitemapXmlLogger <linkcheck.logger.sitemapxml.SitemapXmlLogger>`\\ "
"\\(\\*\\*kwargs\\)"
msgstr ""

#: linkcheck.logger.sitemapxml.SitemapXmlLogger:1
#: linkcheck.logger.sitemapxml.SitemapXmlLogger:1:<autosummary>:1 of
msgid "Sitemap XML output according to https://www.sitemaps.org/protocol.html"
msgstr ""

#: linkcheck.logger.sitemapxml.SitemapXmlLogger.log_filter_url:1 of
msgid ""
"Update accounting data and determine if URL should be included in the "
"sitemap."
msgstr ""

#: linkcheck.logger.sitemapxml.SitemapXmlLogger.log_url:1 of
msgid "Log URL data in sitemap format."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.sql.rst:2
msgid "linkcheck.logger.sql"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.sql.rst:22:<autosummary>:1
msgid ":obj:`intify <linkcheck.logger.sql.intify>`\\ \\(s\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.sql.rst:22:<autosummary>:1
#: linkcheck.logger.sql.intify:1 of
msgid "Coerce a truth value to 0/1."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.sql.rst:22:<autosummary>:1
msgid ":obj:`sqlify <linkcheck.logger.sql.sqlify>`\\ \\(s\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.sql.rst:22:<autosummary>:1
#: linkcheck.logger.sql.sqlify:1 of
msgid "Escape special SQL chars and strings."
msgstr ""

#: linkcheck.logger.sql.SQLLogger:1:<autosummary>:1 of
msgid ":obj:`SQLLogger <linkcheck.logger.sql.SQLLogger>`\\ \\(\\*\\*kwargs\\)"
msgstr ""

#: linkcheck.logger.sql.SQLLogger:1
#: linkcheck.logger.sql.SQLLogger:1:<autosummary>:1 of
msgid "SQL output, should work with any SQL database (not tested)."
msgstr ""

#: linkcheck.logger.sql.SQLLogger:3 of
msgid "Initialize database access data."
msgstr ""

#: linkcheck.logger.sql.SQLLogger.comment:1 of
msgid "Write SQL comment."
msgstr ""

#: linkcheck.logger.sql.SQLLogger.end_output:1 of
msgid "Write end of checking info as sql comment."
msgstr ""

#: linkcheck.logger.sql.SQLLogger.log_url:1 of
msgid "Store url check info into the database."
msgstr ""

#: linkcheck.logger.sql.SQLLogger.start_output:1 of
msgid "Write start of checking info as sql comment."
msgstr ""

#: linkcheck.logger.sql.intify:3 of
msgid "an object (usually a string)"
msgstr ""

#: linkcheck.logger.sql.intify:5 of
msgid "1 if object truth value is True, else 0"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.text.rst:2
msgid "linkcheck.logger.text"
msgstr ""

#: linkcheck.logger.text.TextLogger:1:<autosummary>:1 of
msgid ":obj:`TextLogger <linkcheck.logger.text.TextLogger>`\\ \\(\\*\\*kwargs\\)"
msgstr ""

#: linkcheck.logger.text.TextLogger:1
#: linkcheck.logger.text.TextLogger:1:<autosummary>:1 of
msgid "A text logger, colorizing the output if possible."
msgstr ""

#: linkcheck.logger.text.TextLogger:3 of
msgid ""
"Informal text output format spec: Output consists of a set of URL logs "
"separated by one or more blank lines. A URL log consists of two or more "
"lines. Each line consists of keyword and data, separated by whitespace. "
"Unknown keywords will be ignored."
msgstr ""

#: linkcheck.logger.text.TextLogger:10 of
msgid "Initialize error counter and optional file output."
msgstr ""

#: linkcheck.logger.text.TextLogger.end_output:1 of
msgid "Write end of output info, and flush all output buffers."
msgstr ""

#: linkcheck.logger.text.TextLogger.init_fileoutput:1 of
msgid "Colorize file output if possible."
msgstr ""

#: linkcheck.logger.text.TextLogger.log_url:1 of
msgid "Write url checking info."
msgstr ""

#: linkcheck.logger.text.TextLogger.start_fileoutput:1 of
msgid "Needed to make file descriptor color aware."
msgstr ""

#: linkcheck.logger.text.TextLogger.start_output:1 of
msgid "Write generic start checking info."
msgstr ""

#: linkcheck.logger.text.TextLogger.write_id:1 of
msgid "Write unique ID of url_data."
msgstr ""

#: linkcheck.logger.text.TextLogger.write_intro:1 of
msgid "Log introduction text."
msgstr ""

#: linkcheck.logger.text.TextLogger.write_outro:1 of
msgid "Write end of checking message."
msgstr ""

#: linkcheck.logger.text.TextLogger.write_stats:1 of
msgid "Write check statistic info."
msgstr ""

#: linkcheck.logger.text.TextLogger.write_warning:1 of
msgid "Write url_data.warning."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.xmllog.rst:2
msgid "linkcheck.logger.xmllog"
msgstr ""

#: linkcheck.logger.xmllog.xmlquote:1:<autosummary>:1 of
msgid ":obj:`xmlquote <linkcheck.logger.xmllog.xmlquote>`\\ \\(s\\)"
msgstr ""

#: linkcheck.logger.xmllog.xmlquote:1
#: linkcheck.logger.xmllog.xmlquote:1:<autosummary>:1 of
msgid "Quote characters for XML."
msgstr ""

#: linkcheck.logger.xmllog.xmlquote:1:<autosummary>:1 of
msgid ":obj:`xmlquoteattr <linkcheck.logger.xmllog.xmlquoteattr>`\\ \\(s\\)"
msgstr ""

#: linkcheck.logger.xmllog.xmlquote:1:<autosummary>:1
#: linkcheck.logger.xmllog.xmlquoteattr:1 of
msgid "Quote XML attribute, ready for inclusion with double quotes."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.memoryutil.rst:2
msgid "linkcheck.memoryutil"
msgstr ""

#: linkcheck.memoryutil.write_memory_dump:1:<autosummary>:1 of
msgid ":obj:`write_memory_dump <linkcheck.memoryutil.write_memory_dump>`\\ \\(\\)"
msgstr ""

#: linkcheck.memoryutil.write_memory_dump:1
#: linkcheck.memoryutil.write_memory_dump:1:<autosummary>:1 of
msgid "Dump memory to a temporary filename with the meliae package."
msgstr ""

#: linkcheck.memoryutil.write_memory_dump:3 of
msgid "JSON filename where memory dump has been written to"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.mimeutil.rst:2
msgid "linkcheck.mimeutil"
msgstr ""

#: linkcheck.mimeutil.add_mimetype:1:<autosummary>:1 of
msgid ""
":obj:`add_mimetype <linkcheck.mimeutil.add_mimetype>`\\ \\(mimedb\\, "
"mimetype\\, extension\\)"
msgstr ""

#: linkcheck.mimeutil.add_mimetype:1
#: linkcheck.mimeutil.add_mimetype:1:<autosummary>:1 of
msgid "Add or replace a mimetype to be used with the given extension."
msgstr ""

#: linkcheck.mimeutil.add_mimetype:1:<autosummary>:1 of
msgid ""
":obj:`guess_mimetype <linkcheck.mimeutil.guess_mimetype>`\\ "
"\\(filename\\[\\, read\\]\\)"
msgstr ""

#: linkcheck.mimeutil.add_mimetype:1:<autosummary>:1
#: linkcheck.mimeutil.guess_mimetype:1 of
msgid ""
"Return MIME type of file, or 'application/octet-stream' if it could not "
"be determined."
msgstr ""

#: linkcheck.mimeutil.add_mimetype:1:<autosummary>:1 of
msgid ""
":obj:`guess_mimetype_read <linkcheck.mimeutil.guess_mimetype_read>`\\ "
"\\(read\\)"
msgstr ""

#: linkcheck.mimeutil.add_mimetype:1:<autosummary>:1
#: linkcheck.mimeutil.guess_mimetype_read:1 of
msgid "Try to read some content and do a poor man's file(1)."
msgstr ""

#: linkcheck.mimeutil.add_mimetype:1:<autosummary>:1 of
msgid ":obj:`init_mimedb <linkcheck.mimeutil.init_mimedb>`\\ \\(\\)"
msgstr ""

#: linkcheck.mimeutil.add_mimetype:1:<autosummary>:1
#: linkcheck.mimeutil.init_mimedb:1 of
msgid "Initialize the local MIME database."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.network.rst:2
msgid "linkcheck.network"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.network.rst:31:<autosummary>:1
msgid ":obj:`linkcheck.network.iputil <linkcheck.network.iputil>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.network.rst:31:<autosummary>:1
#: linkcheck.network.iputil:1 of
msgid "Ip number related utility functions."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.network.iputil.rst:2
msgid "linkcheck.network.iputil"
msgstr ""

#: linkcheck.network.iputil.is_obfuscated_ip:1:<autosummary>:1 of
msgid ":obj:`is_valid_ip <linkcheck.network.iputil.is_valid_ip>`\\ \\(ip\\)"
msgstr ""

#: linkcheck.network.iputil.is_obfuscated_ip:1:<autosummary>:1
#: linkcheck.network.iputil.is_valid_ip:1 of
msgid "Return True if given ip is a valid IPv4 or IPv6 address."
msgstr ""

#: linkcheck.network.iputil.is_obfuscated_ip:1:<autosummary>:1 of
msgid ":obj:`resolve_host <linkcheck.network.iputil.resolve_host>`\\ \\(host\\)"
msgstr ""

#: linkcheck.network.iputil.is_obfuscated_ip:1:<autosummary>:1
#: linkcheck.network.iputil.resolve_host:1 of
msgid "Return list of ip numbers for given host."
msgstr ""

#: linkcheck.network.iputil.resolve_host:3 of
msgid "hostname or IP address"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.parser.rst:2
msgid "linkcheck.parser"
msgstr ""

#: linkcheck.parser.parse_chromium:1:<autosummary>:1 of
msgid ":obj:`parse_chromium <linkcheck.parser.parse_chromium>`\\ \\(url\\_data\\)"
msgstr ""

#: linkcheck.parser.parse_chromium:1
#: linkcheck.parser.parse_chromium:1:<autosummary>:1 of
msgid "Parse a Chromium or Google Chrome bookmark file."
msgstr ""

#: linkcheck.parser.parse_chromium:1:<autosummary>:1 of
msgid ":obj:`parse_css <linkcheck.parser.parse_css>`\\ \\(url\\_data\\)"
msgstr ""

#: linkcheck.parser.parse_chromium:1:<autosummary>:1
#: linkcheck.parser.parse_css:1 of
msgid "Parse a CSS file for url() patterns."
msgstr ""

#: linkcheck.parser.parse_chromium:1:<autosummary>:1 of
msgid ":obj:`parse_firefox <linkcheck.parser.parse_firefox>`\\ \\(url\\_data\\)"
msgstr ""

#: linkcheck.parser.parse_chromium:1:<autosummary>:1
#: linkcheck.parser.parse_firefox:1 of
msgid "Parse a Firefox3 bookmark file."
msgstr ""

#: linkcheck.parser.parse_chromium:1:<autosummary>:1 of
msgid ":obj:`parse_html <linkcheck.parser.parse_html>`\\ \\(url\\_data\\)"
msgstr ""

#: linkcheck.parser.parse_chromium:1:<autosummary>:1 of
msgid "Parse into HTML content and search for URLs to check."
msgstr ""

#: linkcheck.parser.parse_chromium:1:<autosummary>:1 of
msgid ""
":obj:`parse_itms_services <linkcheck.parser.parse_itms_services>`\\ "
"\\(url\\_data\\)"
msgstr ""

#: linkcheck.parser.parse_chromium:1:<autosummary>:1
#: linkcheck.parser.parse_itms_services:1 of
msgid "Get \"url\" CGI parameter value as child URL."
msgstr ""

#: linkcheck.parser.parse_chromium:1:<autosummary>:1 of
msgid ":obj:`parse_opera <linkcheck.parser.parse_opera>`\\ \\(url\\_data\\)"
msgstr ""

#: linkcheck.parser.parse_chromium:1:<autosummary>:1
#: linkcheck.parser.parse_opera:1 of
msgid "Parse an opera bookmark file."
msgstr ""

#: linkcheck.parser.parse_chromium:1:<autosummary>:1 of
msgid ":obj:`parse_safari <linkcheck.parser.parse_safari>`\\ \\(url\\_data\\)"
msgstr ""

#: linkcheck.parser.parse_chromium:1:<autosummary>:1
#: linkcheck.parser.parse_safari:1 of
msgid "Parse a Safari bookmark file."
msgstr ""

#: linkcheck.parser.parse_chromium:1:<autosummary>:1 of
msgid ":obj:`parse_swf <linkcheck.parser.parse_swf>`\\ \\(url\\_data\\)"
msgstr ""

#: linkcheck.parser.parse_chromium:1:<autosummary>:1
#: linkcheck.parser.parse_swf:1 of
msgid "Parse a SWF file for URLs."
msgstr ""

#: linkcheck.parser.parse_chromium:1:<autosummary>:1 of
msgid ":obj:`parse_text <linkcheck.parser.parse_text>`\\ \\(url\\_data\\)"
msgstr ""

#: linkcheck.parser.parse_chromium:1:<autosummary>:1
#: linkcheck.parser.parse_text:1 of
msgid ""
"Parse a text file with one url per line; comment and blank lines are "
"ignored."
msgstr ""

#: linkcheck.parser.parse_chromium:1:<autosummary>:1 of
msgid ":obj:`parse_url <linkcheck.parser.parse_url>`\\ \\(url\\_data\\)"
msgstr ""

#: linkcheck.parser.parse_chromium:1:<autosummary>:1
#: linkcheck.parser.parse_url:1 of
msgid "Parse a URL."
msgstr ""

#: linkcheck.parser.parse_chromium:1:<autosummary>:1 of
msgid ":obj:`parse_wml <linkcheck.parser.parse_wml>`\\ \\(url\\_data\\)"
msgstr ""

#: linkcheck.parser.parse_chromium:1:<autosummary>:1 of
msgid "Parse into WML content and search for URLs to check."
msgstr ""

#: linkcheck.parser.parse_html:1 of
msgid ""
"Parse into HTML content and search for URLs to check. Found URLs are "
"added to the URL queue."
msgstr ""

#: linkcheck.parser.parse_wml:1 of
msgid ""
"Parse into WML content and search for URLs to check. Found URLs are added"
" to the URL queue."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.parser.rst:47:<autosummary>:1
msgid ":obj:`linkcheck.parser.sitemap <linkcheck.parser.sitemap>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.parser.sitemap.rst:2
msgid "linkcheck.parser.sitemap"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.parser.sitemap.rst:22:<autosummary>:1
msgid ""
":obj:`parse_sitemap <linkcheck.parser.sitemap.parse_sitemap>`\\ "
"\\(url\\_data\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.parser.sitemap.rst:22:<autosummary>:1
#: linkcheck.parser.sitemap.parse_sitemap:1 of
msgid "Parse XML sitemap data."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.parser.sitemap.rst:22:<autosummary>:1
msgid ""
":obj:`parse_sitemapindex <linkcheck.parser.sitemap.parse_sitemapindex>`\\"
" \\(url\\_data\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.parser.sitemap.rst:22:<autosummary>:1
#: linkcheck.parser.sitemap.parse_sitemapindex:1 of
msgid "Parse XML sitemap index data."
msgstr ""

#: linkcheck.parser.sitemap.XmlTagUrlParser:1:<autosummary>:1 of
msgid ""
":obj:`XmlTagUrlParser <linkcheck.parser.sitemap.XmlTagUrlParser>`\\ "
"\\(tag\\)"
msgstr ""

#: linkcheck.parser.sitemap.XmlTagUrlParser:1
#: linkcheck.parser.sitemap.XmlTagUrlParser:1:<autosummary>:1 of
msgid "Parse XML files and find URLs in text content of a tag name."
msgstr ""

#: linkcheck.parser.sitemap.XmlTagUrlParser:3 of
msgid "Initialize the parser."
msgstr ""

#: linkcheck.parser.sitemap.XmlTagUrlParser.add_url:1 of
msgid "Add non-empty URLs to the queue."
msgstr ""

#: linkcheck.parser.sitemap.XmlTagUrlParser.char_data:1 of
msgid "If inside the wanted tag, append data to URL."
msgstr ""

#: linkcheck.parser.sitemap.XmlTagUrlParser.end_element:1 of
msgid "If end tag is our tag, call add_url()."
msgstr ""

#: linkcheck.parser.sitemap.XmlTagUrlParser.parse:1 of
msgid "Parse XML URL data."
msgstr ""

#: linkcheck.parser.sitemap.XmlTagUrlParser.start_element:1 of
msgid "Set tag status for start element."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:2
msgid "linkcheck.plugins"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:23:<autosummary>:1
msgid ""
":obj:`get_plugin_classes <linkcheck.plugins.get_plugin_classes>`\\ "
"\\(modules\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:23:<autosummary>:1
#: linkcheck.plugins.get_plugin_classes:1 of
msgid "Get plugin classes for given modules."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:23:<autosummary>:1
msgid ""
":obj:`get_plugin_modules <linkcheck.plugins.get_plugin_modules>`\\ "
"\\(folders\\[\\, package\\, ...\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:23:<autosummary>:1
#: linkcheck.plugins.get_plugin_modules:1 of
msgid "Get plugin modules for given folders."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:23:<autosummary>:1
msgid ""
":obj:`run_plugins <linkcheck.plugins.run_plugins>`\\ \\(plugins\\, "
"url\\_data\\[\\, ...\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:23:<autosummary>:1
#: linkcheck.plugins.run_plugins:1 of
msgid "Run the check(url_data) method of given plugins."
msgstr ""

#: linkcheck.plugins.PluginManager:1:<autosummary>:1 of
msgid ":obj:`PluginManager <linkcheck.plugins.PluginManager>`\\ \\(config\\)"
msgstr ""

#: linkcheck.plugins.PluginManager:1
#: linkcheck.plugins.PluginManager:1:<autosummary>:1 of
msgid "Manage all connection and content plugins."
msgstr ""

#: linkcheck.plugins.PluginManager:3 of
msgid "Load enabled plugins."
msgstr ""

#: linkcheck.plugins.PluginManager.load_modules:1 of
msgid "Load plugin modules."
msgstr ""

#: linkcheck.plugins.PluginManager.run_connection_plugins:1 of
msgid "Run all connection plugins."
msgstr ""

#: linkcheck.plugins.PluginManager.run_content_plugins:1 of
msgid "Run all content plugins."
msgstr ""

#: linkcheck.plugins.PluginManager.run_parser_plugins:1 of
msgid "Run parser plugins for given pagetype."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.plugins.anchorcheck <linkcheck.plugins.anchorcheck>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:54:<autosummary>:1
#: linkcheck.plugins.anchorcheck:1 of
msgid "Check HTML anchors"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:54:<autosummary>:1
msgid ""
":obj:`linkcheck.plugins.httpheaderinfo "
"<linkcheck.plugins.httpheaderinfo>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:54:<autosummary>:1
#: linkcheck.plugins.httpheaderinfo:1 of
msgid "Add HTTP server name information"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.plugins.locationinfo <linkcheck.plugins.locationinfo>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:54:<autosummary>:1
#: linkcheck.plugins.locationinfo:1 of
msgid "Store and retrieve country names for IPs."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.plugins.markdowncheck <linkcheck.plugins.markdowncheck>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:54:<autosummary>:1
#: linkcheck.plugins.markdowncheck:1 of
msgid "Parse links in Markdown files."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.plugins.parsepdf <linkcheck.plugins.parsepdf>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:54:<autosummary>:1
#: linkcheck.plugins.parsepdf:1 of
msgid "Parse links in PDF files with pdfminer."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.plugins.parseword <linkcheck.plugins.parseword>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:54:<autosummary>:1
#: linkcheck.plugins.parseword:1 of
msgid "Parse hyperlinks in Word files."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.plugins.regexcheck <linkcheck.plugins.regexcheck>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:54:<autosummary>:1
#: linkcheck.plugins.regexcheck:1 of
msgid "Check page content with regular expression."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.plugins.sslcertcheck <linkcheck.plugins.sslcertcheck>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:54:<autosummary>:1
#: linkcheck.plugins.sslcertcheck:1 of
msgid "Handle https links."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.plugins.syntaxchecks <linkcheck.plugins.syntaxchecks>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.plugins.viruscheck <linkcheck.plugins.viruscheck>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:54:<autosummary>:1
#: linkcheck.plugins.viruscheck:1 of
msgid "Check page content for virus infection with clamav."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.anchorcheck.rst:2
msgid "linkcheck.plugins.anchorcheck"
msgstr ""

#: linkcheck.plugins.anchorcheck.AnchorCheck:1:<autosummary>:1 of
msgid ""
":obj:`AnchorCheck <linkcheck.plugins.anchorcheck.AnchorCheck>`\\ "
"\\(config\\)"
msgstr ""

#: linkcheck.plugins.anchorcheck.AnchorCheck:1
#: linkcheck.plugins.anchorcheck.AnchorCheck:1:<autosummary>:1 of
msgid "Checks validity of HTML anchors."
msgstr ""

#: linkcheck.plugins.anchorcheck.AnchorCheck:1
#: linkcheck.plugins.markdowncheck.MarkdownCheck:1
#: linkcheck.plugins.regexcheck.RegexCheck:1
#: linkcheck.plugins.syntaxchecks.CssSyntaxCheck:1
#: linkcheck.plugins.syntaxchecks.HtmlSyntaxCheck:1
#: linkcheck.plugins.viruscheck.VirusCheck:1 of
msgid "Bases: :class:`linkcheck.plugins._ContentPlugin`"
msgstr ""

#: linkcheck.plugins.anchorcheck.AnchorCheck:3
#: linkcheck.plugins.markdowncheck.MarkdownCheck:3 of
msgid "Add plugin-specific configuration."
msgstr ""

#: linkcheck.plugins.anchorcheck.AnchorCheck.add_anchor:1 of
msgid "Add anchor URL."
msgstr ""

#: linkcheck.plugins.anchorcheck.AnchorCheck.applies_to:1 of
msgid "Check for HTML anchor existence."
msgstr ""

#: linkcheck.plugins.anchorcheck.AnchorCheck.check:1
#: linkcheck.plugins.httpheaderinfo.HttpHeaderInfo.check:1 of
msgid "Check content for invalid anchors."
msgstr ""

#: linkcheck.plugins.anchorcheck.AnchorCheck.check_anchor:1 of
msgid ""
"If URL is valid, parseable and has an anchor, check it. A warning is "
"logged and True is returned if the anchor is not found."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.httpheaderinfo.rst:2
msgid "linkcheck.plugins.httpheaderinfo"
msgstr ""

#: linkcheck.plugins.httpheaderinfo.HttpHeaderInfo:1:<autosummary>:1 of
msgid ""
":obj:`HttpHeaderInfo <linkcheck.plugins.httpheaderinfo.HttpHeaderInfo>`\\"
" \\(config\\)"
msgstr ""

#: linkcheck.plugins.httpheaderinfo.HttpHeaderInfo:1
#: linkcheck.plugins.httpheaderinfo.HttpHeaderInfo:1:<autosummary>:1 of
msgid "Add HTTP header info for each URL"
msgstr ""

#: linkcheck.plugins.httpheaderinfo.HttpHeaderInfo:1
#: linkcheck.plugins.locationinfo.LocationInfo:1
#: linkcheck.plugins.sslcertcheck.SslCertificateCheck:1 of
msgid "Bases: :class:`linkcheck.plugins._ConnectionPlugin`"
msgstr ""

#: linkcheck.plugins.httpheaderinfo.HttpHeaderInfo.applies_to:1 of
msgid "Check for HTTP and prefix config."
msgstr ""

#: linkcheck.plugins.httpheaderinfo.HttpHeaderInfo.read_config:1
#: linkcheck.plugins.markdowncheck.MarkdownCheck.read_config:1
#: linkcheck.plugins.regexcheck.RegexCheck.read_config:1
#: linkcheck.plugins.sslcertcheck.SslCertificateCheck.read_config:1
#: linkcheck.plugins.viruscheck.VirusCheck.read_config:1 of
msgid "Read configuration file options."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.locationinfo.rst:2
msgid "linkcheck.plugins.locationinfo"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.locationinfo.rst:23:<autosummary>:1
msgid ""
":obj:`get_geoip_dat <linkcheck.plugins.locationinfo.get_geoip_dat>`\\ "
"\\(\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.locationinfo.rst:23:<autosummary>:1
#: linkcheck.plugins.locationinfo.get_geoip_dat:1 of
msgid "Find a GeoIP database, preferring city over country lookup."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.locationinfo.rst:23:<autosummary>:1
msgid ""
":obj:`get_geoip_record "
"<linkcheck.plugins.locationinfo.get_geoip_record>`\\ \\(host\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.locationinfo.rst:23:<autosummary>:1
msgid ""
":obj:`get_location <linkcheck.plugins.locationinfo.get_location>`\\ "
"\\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.locationinfo.rst:23:<autosummary>:1
#: linkcheck.plugins.locationinfo.get_location:1 of
msgid "Get translated country and optional city name."
msgstr ""

#: linkcheck.plugins.locationinfo.LocationInfo:1:<autosummary>:1 of
msgid ""
":obj:`LocationInfo <linkcheck.plugins.locationinfo.LocationInfo>`\\ "
"\\(config\\)"
msgstr ""

#: linkcheck.plugins.locationinfo.LocationInfo:1:<autosummary>:1 of
msgid "Adds the country and if possible city name of the URL host as info."
msgstr ""

#: linkcheck.plugins.locationinfo.LocationInfo:1 of
msgid ""
"Adds the country and if possible city name of the URL host as info. Needs"
" GeoIP or pygeoip and a local country or city lookup DB installed."
msgstr ""

#: linkcheck.plugins.locationinfo.LocationInfo:4 of
msgid "Check for geoip module."
msgstr ""

#: linkcheck.plugins.locationinfo.LocationInfo.applies_to:1 of
msgid "Check for validity, host existence and geoip module."
msgstr ""

#: linkcheck.plugins.locationinfo.LocationInfo.check:1
#: linkcheck.plugins.viruscheck.VirusCheck.check:1 of
msgid "Try to ask GeoIP database for country info."
msgstr ""

#: linkcheck.plugins.locationinfo.get_location:3 of
msgid "country with optional city or an boolean False if not found"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.markdowncheck.rst:2
msgid "linkcheck.plugins.markdowncheck"
msgstr ""

#: linkcheck.plugins.markdowncheck:6 of
msgid "Supported links are:"
msgstr ""

#: linkcheck.plugins.markdowncheck:4 of
msgid ""
"<http://autolink.com> [name](http://link.com \"Optional title\") [id]: "
"http://link.com \"Optional title\""
msgstr ""

#: linkcheck.plugins.markdowncheck.MarkdownCheck:1:<autosummary>:1 of
msgid ""
":obj:`MarkdownCheck <linkcheck.plugins.markdowncheck.MarkdownCheck>`\\ "
"\\(config\\)"
msgstr ""

#: linkcheck.plugins.markdowncheck.MarkdownCheck:1
#: linkcheck.plugins.markdowncheck.MarkdownCheck:1:<autosummary>:1 of
msgid "Markdown parsing plugin."
msgstr ""

#: linkcheck.plugins.markdowncheck.MarkdownCheck.applies_to:1 of
msgid "Check for Markdown file."
msgstr ""

#: linkcheck.plugins.markdowncheck.MarkdownCheck.check:1 of
msgid "Extracts urls from the file."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.parsepdf.rst:2
msgid "linkcheck.plugins.parsepdf"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.parsepdf.rst:21:<autosummary>:1
msgid ""
":obj:`search_url <linkcheck.plugins.parsepdf.search_url>`\\ \\(obj\\, "
"url\\_data\\, pageno\\, seen\\_objs\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.parsepdf.rst:21:<autosummary>:1
#: linkcheck.plugins.parsepdf.search_url:1 of
msgid "Recurse through a PDF object, searching for URLs."
msgstr ""

#: linkcheck.plugins.parsepdf.PdfParser:1:<autosummary>:1 of
msgid ":obj:`PdfParser <linkcheck.plugins.parsepdf.PdfParser>`\\ \\(config\\)"
msgstr ""

#: linkcheck.plugins.parsepdf.PdfParser:1
#: linkcheck.plugins.parsepdf.PdfParser:1:<autosummary>:1 of
msgid "PDF parsing plugin."
msgstr ""

#: linkcheck.plugins.parsepdf.PdfParser:1
#: linkcheck.plugins.parseword.WordParser:1 of
msgid "Bases: :class:`linkcheck.plugins._ParserPlugin`"
msgstr ""

#: linkcheck.plugins.parsepdf.PdfParser:3
#: linkcheck.plugins.parseword.WordParser:3 of
msgid "Check for pdfminer."
msgstr ""

#: linkcheck.plugins.parsepdf.PdfParser.applies_to:1 of
msgid "Check for PDF pagetype."
msgstr ""

#: linkcheck.plugins.parsepdf.PdfParser.check:1 of
msgid "Parse PDF data."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.parseword.rst:2
msgid "linkcheck.plugins.parseword"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.parseword.rst:29:<autosummary>:1
msgid ""
":obj:`close_word_app <linkcheck.plugins.parseword.close_word_app>`\\ "
"\\(app\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.parseword.rst:29:<autosummary>:1
#: linkcheck.plugins.parseword.close_word_app:1 of
msgid "Close Word application object."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.parseword.rst:29:<autosummary>:1
msgid ""
":obj:`close_wordfile <linkcheck.plugins.parseword.close_wordfile>`\\ "
"\\(doc\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.parseword.rst:29:<autosummary>:1
#: linkcheck.plugins.parseword.close_wordfile:1 of
msgid "Close word file."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.parseword.rst:29:<autosummary>:1
msgid ":obj:`constants <linkcheck.plugins.parseword.constants>`\\ \\(name\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.parseword.rst:29:<autosummary>:1
msgid "Helper to return constants."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.parseword.rst:29:<autosummary>:1
msgid ""
":obj:`get_line_number <linkcheck.plugins.parseword.get_line_number>`\\ "
"\\(doc\\, wrange\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.parseword.rst:29:<autosummary>:1
#: linkcheck.plugins.parseword.get_line_number:1 of
msgid "Get line number for given range object."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.parseword.rst:29:<autosummary>:1
msgid ""
":obj:`get_temp_filename "
"<linkcheck.plugins.parseword.get_temp_filename>`\\ \\(content\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.parseword.rst:29:<autosummary>:1
#: linkcheck.plugins.parseword.get_temp_filename:1 of
msgid "Get temporary filename for content to parse."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.parseword.rst:29:<autosummary>:1
msgid ":obj:`get_word_app <linkcheck.plugins.parseword.get_word_app>`\\ \\(\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.parseword.rst:29:<autosummary>:1
#: linkcheck.plugins.parseword.get_word_app:1 of
msgid ""
"Return open Word.Application handle, or None if Word is not available on "
"this system."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.parseword.rst:29:<autosummary>:1
msgid ":obj:`has_word <linkcheck.plugins.parseword.has_word>`\\ \\(\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.parseword.rst:29:<autosummary>:1
#: linkcheck.plugins.parseword.has_word:1 of
msgid "Determine if Word is available on the current system."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.parseword.rst:29:<autosummary>:1
msgid ":obj:`init_win32com <linkcheck.plugins.parseword.init_win32com>`\\ \\(\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.parseword.rst:29:<autosummary>:1
#: linkcheck.plugins.parseword.init_win32com:1 of
msgid "Initialize the win32com.client cache."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.parseword.rst:29:<autosummary>:1
msgid ""
":obj:`open_wordfile <linkcheck.plugins.parseword.open_wordfile>`\\ "
"\\(app\\, filename\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.parseword.rst:29:<autosummary>:1
#: linkcheck.plugins.parseword.open_wordfile:1 of
msgid "Open given Word file with application object."
msgstr ""

#: linkcheck.plugins.parseword.WordParser:1:<autosummary>:1 of
msgid ":obj:`WordParser <linkcheck.plugins.parseword.WordParser>`\\ \\(config\\)"
msgstr ""

#: linkcheck.plugins.parseword.WordParser:1
#: linkcheck.plugins.parseword.WordParser:1:<autosummary>:1 of
msgid "Word parsing plugin."
msgstr ""

#: linkcheck.plugins.parseword.WordParser.applies_to:1 of
msgid "Check for Word pagetype."
msgstr ""

#: linkcheck.plugins.parseword.WordParser.check:1 of
msgid "Parse Word data."
msgstr ""

#: linkcheck.plugins.parseword.constants:1 of
msgid ""
"Helper to return constants. Avoids importing win32com.client in other "
"modules."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.regexcheck.rst:2
msgid "linkcheck.plugins.regexcheck"
msgstr ""

#: linkcheck.plugins.regexcheck.RegexCheck:1:<autosummary>:1 of
msgid ":obj:`RegexCheck <linkcheck.plugins.regexcheck.RegexCheck>`\\ \\(config\\)"
msgstr ""

#: linkcheck.plugins.regexcheck.RegexCheck:1:<autosummary>:1 of
msgid ""
"Define a regular expression which prints a warning if it matches any "
"content of the checked link."
msgstr ""

#: linkcheck.plugins.regexcheck.RegexCheck:1 of
msgid ""
"Define a regular expression which prints a warning if it matches any "
"content of the checked link. This applies only to valid pages, so we can "
"get their content."
msgstr ""

#: linkcheck.plugins.regexcheck.RegexCheck:5 of
msgid ""
"Use this to check for pages that contain some form of error message, for "
"example 'This page has moved' or 'Oracle Application error'."
msgstr ""

#: linkcheck.plugins.regexcheck.RegexCheck:9 of
msgid ""
"Note that multiple values can be combined in the regular expression, for "
"example \"(This page has moved|Oracle Application error)\"."
msgstr ""

#: linkcheck.plugins.regexcheck.RegexCheck:12 of
msgid "Set warning regex from config."
msgstr ""

#: linkcheck.plugins.regexcheck.RegexCheck.applies_to:1 of
msgid "Check for warningregex, extern flag and parseability."
msgstr ""

#: linkcheck.plugins.regexcheck.RegexCheck.check:1 of
msgid "Check content."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.sslcertcheck.rst:2
msgid "linkcheck.plugins.sslcertcheck"
msgstr ""

#: linkcheck.plugins.sslcertcheck.SslCertificateCheck:1:<autosummary>:1 of
msgid ""
":obj:`SslCertificateCheck "
"<linkcheck.plugins.sslcertcheck.SslCertificateCheck>`\\ \\(config\\)"
msgstr ""

#: linkcheck.plugins.sslcertcheck.SslCertificateCheck:1:<autosummary>:1 of
msgid "Check SSL certificate expiration date."
msgstr ""

#: linkcheck.plugins.sslcertcheck.SslCertificateCheck:1 of
msgid ""
"Check SSL certificate expiration date. Only internal https: links will be"
" checked. A domain will only be checked once to avoid duplicate warnings."
" The expiration warning time can be configured with the sslcertwarndays "
"option."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.viruscheck.rst:24:<autosummary>:1
#: linkcheck.plugins.sslcertcheck.SslCertificateCheck:7
#: linkcheck.plugins.viruscheck.VirusCheck:4
#: linkcheck.plugins.viruscheck.get_clamav_conf:1 of
msgid "Initialize clamav configuration."
msgstr ""

#: linkcheck.plugins.sslcertcheck.SslCertificateCheck.applies_to:1 of
msgid "Check validity, scheme, extern and url_connection."
msgstr ""

#: linkcheck.plugins.sslcertcheck.SslCertificateCheck.check:1 of
msgid ""
"Run all SSL certificate checks that have not yet been done. OpenSSL "
"already checked the SSL notBefore and notAfter dates."
msgstr ""

#: linkcheck.plugins.sslcertcheck.SslCertificateCheck.check_ssl_valid_date:1 of
msgid ""
"Check if the certificate is still valid, or if configured check if it's "
"at least a number of days valid."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.syntaxchecks.rst:2
msgid "linkcheck.plugins.syntaxchecks"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.syntaxchecks.rst:22:<autosummary>:1
msgid ""
":obj:`check_w3_errors <linkcheck.plugins.syntaxchecks.check_w3_errors>`\\"
" \\(url\\_data\\, xml\\, w3type\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.syntaxchecks.rst:22:<autosummary>:1
msgid "Add warnings for W3C HTML or CSS errors in xml format."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.syntaxchecks.rst:22:<autosummary>:1
msgid ""
":obj:`getXmlText <linkcheck.plugins.syntaxchecks.getXmlText>`\\ "
"\\(parent\\, tag\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.syntaxchecks.rst:22:<autosummary>:1
#: linkcheck.plugins.syntaxchecks.getXmlText:1 of
msgid "Return XML content of given tag in parent element."
msgstr ""

#: linkcheck.plugins.syntaxchecks.CssSyntaxCheck:1:<autosummary>:1 of
msgid ""
":obj:`CssSyntaxCheck <linkcheck.plugins.syntaxchecks.CssSyntaxCheck>`\\ "
"\\(config\\)"
msgstr ""

#: linkcheck.plugins.syntaxchecks.CssSyntaxCheck:1:<autosummary>:1 of
msgid "Check the syntax of HTML pages with the online W3C CSS validator."
msgstr ""

#: linkcheck.plugins.syntaxchecks.CssSyntaxCheck:1:<autosummary>:1 of
msgid ""
":obj:`HtmlSyntaxCheck <linkcheck.plugins.syntaxchecks.HtmlSyntaxCheck>`\\"
" \\(config\\)"
msgstr ""

#: linkcheck.plugins.syntaxchecks.CssSyntaxCheck:1:<autosummary>:1 of
msgid "Check the syntax of HTML pages with the online W3C HTML validator."
msgstr ""

#: linkcheck.plugins.syntaxchecks.CssSyntaxCheck:1:<autosummary>:1 of
msgid ":obj:`W3Timer <linkcheck.plugins.syntaxchecks.W3Timer>`\\ \\(\\)"
msgstr ""

#: linkcheck.plugins.syntaxchecks.CssSyntaxCheck:1:<autosummary>:1
#: linkcheck.plugins.syntaxchecks.W3Timer:1 of
msgid "Ensure W3C apis are not hammered."
msgstr ""

#: linkcheck.plugins.syntaxchecks.CssSyntaxCheck:1 of
msgid ""
"Check the syntax of HTML pages with the online W3C CSS validator. See "
"https://jigsaw.w3.org/css-validator/manual.html#expert."
msgstr ""

#: linkcheck.plugins.syntaxchecks.CssSyntaxCheck:4
#: linkcheck.plugins.syntaxchecks.HtmlSyntaxCheck:4 of
msgid "Initialize plugin."
msgstr ""

#: linkcheck.plugins.syntaxchecks.CssSyntaxCheck.applies_to:1 of
msgid "Check for CSS and extern."
msgstr ""

#: linkcheck.plugins.syntaxchecks.CssSyntaxCheck.check:1 of
msgid "Check CSS syntax of given URL."
msgstr ""

#: linkcheck.plugins.syntaxchecks.HtmlSyntaxCheck:1 of
msgid ""
"Check the syntax of HTML pages with the online W3C HTML validator. See "
"https://validator.w3.org/docs/api.html."
msgstr ""

#: linkcheck.plugins.syntaxchecks.HtmlSyntaxCheck.applies_to:1 of
msgid "Check for HTML and extern."
msgstr ""

#: linkcheck.plugins.syntaxchecks.HtmlSyntaxCheck.check:1 of
msgid "Check HTML syntax of given URL."
msgstr ""

#: linkcheck.plugins.syntaxchecks.W3Timer:3 of
msgid "Remember last API call."
msgstr ""

#: linkcheck.plugins.syntaxchecks.W3Timer.check_w3_time:1 of
msgid "Make sure the W3C validators are at most called once a second."
msgstr ""

#: linkcheck.plugins.syntaxchecks.check_w3_errors:1 of
msgid ""
"Add warnings for W3C HTML or CSS errors in xml format. w3type is either "
"\"W3C HTML\" or \"W3C CSS\"."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.viruscheck.rst:2
msgid "linkcheck.plugins.viruscheck"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.viruscheck.rst:24:<autosummary>:1
msgid ""
":obj:`canonical_clamav_conf "
"<linkcheck.plugins.viruscheck.canonical_clamav_conf>`\\ \\(\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.viruscheck.rst:24:<autosummary>:1
#: linkcheck.plugins.viruscheck.canonical_clamav_conf:1 of
msgid "Default clamav configs for various platforms."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.viruscheck.rst:24:<autosummary>:1
msgid ""
":obj:`get_clamav_conf <linkcheck.plugins.viruscheck.get_clamav_conf>`\\ "
"\\(filename\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.viruscheck.rst:24:<autosummary>:1
msgid ""
":obj:`get_sockinfo <linkcheck.plugins.viruscheck.get_sockinfo>`\\ "
"\\(host\\[\\, port\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.viruscheck.rst:24:<autosummary>:1
#: linkcheck.plugins.viruscheck.get_sockinfo:1 of
msgid "Return socket.getaddrinfo for given host and port."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.viruscheck.rst:24:<autosummary>:1
msgid ":obj:`scan <linkcheck.plugins.viruscheck.scan>`\\ \\(data\\, clamconf\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.viruscheck.rst:24:<autosummary>:1
#: linkcheck.plugins.viruscheck.scan:1 of
msgid "Scan data for viruses."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.viruscheck.rst:36:<autosummary>:1
msgid ""
":obj:`ClamavConfig <linkcheck.plugins.viruscheck.ClamavConfig>`\\ "
"\\(filename\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.viruscheck.rst:36:<autosummary>:1
#: linkcheck.plugins.viruscheck.ClamavConfig:1 of
msgid "Clamav configuration wrapper, with clamd connection method."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.viruscheck.rst:36:<autosummary>:1
msgid ""
":obj:`ClamdScanner <linkcheck.plugins.viruscheck.ClamdScanner>`\\ "
"\\(clamav\\_conf\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.viruscheck.rst:36:<autosummary>:1
#: linkcheck.plugins.viruscheck.ClamdScanner:1 of
msgid "Virus scanner using a clamd daemon process."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.viruscheck.rst:36:<autosummary>:1
msgid ":obj:`VirusCheck <linkcheck.plugins.viruscheck.VirusCheck>`\\ \\(config\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.viruscheck.rst:36:<autosummary>:1
msgid "Checks the page content for virus infections with clamav."
msgstr ""

#: linkcheck.plugins.viruscheck.ClamavError:1:<autosummary>:1 of
msgid ":obj:`ClamavError <linkcheck.plugins.viruscheck.ClamavError>`\\"
msgstr ""

#: linkcheck.plugins.viruscheck.ClamavError:1
#: linkcheck.plugins.viruscheck.ClamavError:1:<autosummary>:1 of
msgid "Raised on clamav errors."
msgstr ""

#: linkcheck.plugins.viruscheck.ClamavConfig:3 of
msgid "Parse clamav configuration file."
msgstr ""

#: linkcheck.plugins.viruscheck.ClamavConfig.create_local_socket:1 of
msgid "Create local socket, connect to it and return socket object."
msgstr ""

#: linkcheck.plugins.viruscheck.ClamavConfig.create_tcp_socket:1 of
msgid "Create tcp socket, connect to it and return socket object."
msgstr ""

#: linkcheck.plugins.viruscheck.ClamavConfig.new_connection:1 of
msgid "Connect to clamd for stream scanning."
msgstr ""

#: linkcheck.plugins.viruscheck.ClamavConfig.new_connection:3 of
msgid "tuple (connected socket, host)"
msgstr ""

#: linkcheck.plugins.viruscheck.ClamavConfig.parseconf:1 of
msgid "Parse clamav configuration from given file."
msgstr ""

#: linkcheck.plugins.viruscheck.ClamdScanner:3 of
msgid "Initialize clamd daemon process sockets."
msgstr ""

#: linkcheck.plugins.viruscheck.ClamdScanner.close:1 of
msgid "Get results and close clamd daemon sockets."
msgstr ""

#: linkcheck.plugins.viruscheck.ClamdScanner.new_scansock:1 of
msgid "Return a connected socket for sending scan data to it."
msgstr ""

#: linkcheck.plugins.viruscheck.ClamdScanner.scan:1 of
msgid "Scan given data for viruses."
msgstr ""

#: linkcheck.plugins.viruscheck.VirusCheck:1 of
msgid ""
"Checks the page content for virus infections with clamav. A local clamav "
"daemon must be installed."
msgstr ""

#: linkcheck.plugins.viruscheck.VirusCheck.applies_to:1 of
msgid "Check for clamav and extern."
msgstr ""

#: linkcheck.plugins.viruscheck.scan:3 of
msgid "(infection msgs, errors)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.robotparser2.rst:2
msgid "linkcheck.robotparser2"
msgstr ""

#: linkcheck.robotparser2:3 of
msgid ""
"The robots.txt Exclusion Protocol is implemented as specified in "
"http://www.robotstxt.org/wc/norobots-rfc.html"
msgstr ""

#: linkcheck.robotparser2.RobotFileParser:1:<autosummary>:1 of
msgid ":obj:`Entry <linkcheck.robotparser2.Entry>`\\ \\(\\)"
msgstr ""

#: linkcheck.robotparser2.RobotFileParser:1:<autosummary>:1 of
msgid "An entry has one or more user-agents and zero or more rulelines."
msgstr ""

#: linkcheck.robotparser2.RobotFileParser:1:<autosummary>:1 of
msgid ""
":obj:`RobotFileParser <linkcheck.robotparser2.RobotFileParser>`\\ "
"\\(\\[url\\, session\\, proxies\\, ...\\]\\)"
msgstr ""

#: linkcheck.robotparser2.RobotFileParser:1
#: linkcheck.robotparser2.RobotFileParser:1:<autosummary>:1 of
msgid ""
"This class provides a set of methods to read, parse and answer questions "
"about a single robots.txt file."
msgstr ""

#: linkcheck.robotparser2.RobotFileParser:1:<autosummary>:1 of
msgid ""
":obj:`RuleLine <linkcheck.robotparser2.RuleLine>`\\ \\(path\\, "
"allowance\\)"
msgstr ""

#: linkcheck.robotparser2.RobotFileParser:1:<autosummary>:1 of
msgid ""
"A rule line is a single \"Allow:\" (allowance==1) or \"Disallow:\" "
"(allowance==0) followed by a path."
msgstr ""

#: linkcheck.robotparser2.RobotFileParser:4 of
msgid "Initialize internal entry lists and store given url and credentials."
msgstr ""

#: linkcheck.robotparser2.RobotFileParser.can_fetch:1 of
msgid "Using the parsed robots.txt decide if useragent can fetch url."
msgstr ""

#: linkcheck.robotparser2.RobotFileParser.can_fetch:3 of
msgid "True if agent can fetch url, else False"
msgstr ""

#: linkcheck.robotparser2.RobotFileParser.get_crawldelay:1 of
msgid "Look for a configured crawl delay."
msgstr ""

#: linkcheck.robotparser2.RobotFileParser.get_crawldelay:3 of
msgid "crawl delay in seconds or zero"
msgstr ""

#: linkcheck.robotparser2.RobotFileParser.modified:1 of
msgid "Set the time the robots.txt file was last fetched to the current time."
msgstr ""

#: linkcheck.robotparser2.RobotFileParser.mtime:1 of
msgid "Returns the time the robots.txt file was last fetched."
msgstr ""

#: linkcheck.robotparser2.RobotFileParser.mtime:3 of
msgid ""
"This is useful for long-running web spiders that need to check for new "
"robots.txt files periodically."
msgstr ""

#: linkcheck.robotparser2.RobotFileParser.mtime:6 of
msgid "last modified in time.time() format"
msgstr ""

#: linkcheck.robotparser2.RobotFileParser.parse:1 of
msgid ""
"Parse the input lines from a robot.txt file. We allow that a user-agent: "
"line is not preceded by one or more blank lines."
msgstr ""

#: linkcheck.robotparser2.RobotFileParser.read:1 of
msgid "Read the robots.txt URL and feeds it to the parser."
msgstr ""

#: linkcheck.robotparser2.RobotFileParser.set_url:1 of
msgid "Set the URL referring to a robots.txt file."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.socketutil.rst:2
msgid "linkcheck.socketutil"
msgstr ""

#: linkcheck.socketutil.create_socket:1:<autosummary>:1 of
msgid ""
":obj:`create_socket <linkcheck.socketutil.create_socket>`\\ \\(family\\, "
"socktype\\[\\, proto\\, timeout\\]\\)"
msgstr ""

#: linkcheck.socketutil.create_socket:1:<autosummary>:1 of
msgid "Create a socket with given family and type."
msgstr ""

#: linkcheck.socketutil.create_socket:1 of
msgid ""
"Create a socket with given family and type. If SSL context is given an "
"SSL socket is created."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.strformat.rst:2
msgid "linkcheck.strformat"
msgstr ""

#: linkcheck.strformat:1 of
msgid ""
"Various string utility functions. Note that these functions are not "
"necessarily optimised for large strings, so use with care."
msgstr ""

#: linkcheck.strformat.ascii_safe:1:<autosummary>:1 of
msgid ":obj:`ascii_safe <linkcheck.strformat.ascii_safe>`\\ \\(s\\)"
msgstr ""

#: linkcheck.strformat.ascii_safe:1:<autosummary>:1 of
msgid "Get ASCII string without raising encoding errors."
msgstr ""

#: linkcheck.strformat.ascii_safe:1:<autosummary>:1 of
msgid ""
":obj:`format_feature_warning "
"<linkcheck.strformat.format_feature_warning>`\\ \\(\\*\\*kwargs\\)"
msgstr ""

#: linkcheck.strformat.ascii_safe:1:<autosummary>:1
#: linkcheck.strformat.format_feature_warning:1 of
msgid ""
"Format warning that a module could not be imported and that it should be "
"installed for a certain URL."
msgstr ""

#: linkcheck.strformat.ascii_safe:1:<autosummary>:1 of
msgid ":obj:`get_paragraphs <linkcheck.strformat.get_paragraphs>`\\ \\(text\\)"
msgstr ""

#: linkcheck.strformat.ascii_safe:1:<autosummary>:1 of
msgid ""
"A new paragraph is considered to start at a line which follows one or "
"more blank lines (lines containing nothing or just spaces)."
msgstr ""

#: linkcheck.strformat.ascii_safe:1:<autosummary>:1 of
msgid ""
":obj:`indent <linkcheck.strformat.indent>`\\ \\(text\\[\\, "
"indent\\_string\\]\\)"
msgstr ""

#: linkcheck.strformat.ascii_safe:1:<autosummary>:1
#: linkcheck.strformat.indent:1 of
msgid "Indent each line of text with the given indent string."
msgstr ""

#: linkcheck.strformat.ascii_safe:1:<autosummary>:1 of
msgid ":obj:`limit <linkcheck.strformat.limit>`\\ \\(s\\[\\, length\\]\\)"
msgstr ""

#: linkcheck.strformat.ascii_safe:1:<autosummary>:1 linkcheck.strformat.limit:1
#: of
msgid ""
"If the length of the string exceeds the given limit, it will be cut off "
"and three dots will be appended."
msgstr ""

#: linkcheck.strformat.ascii_safe:1:<autosummary>:1 of
msgid ":obj:`paginate <linkcheck.strformat.paginate>`\\ \\(text\\)"
msgstr ""

#: linkcheck.strformat.ascii_safe:1:<autosummary>:1
#: linkcheck.strformat.paginate:1 of
msgid "Print text in pages of lines."
msgstr ""

#: linkcheck.strformat.ascii_safe:1:<autosummary>:1 of
msgid ""
":obj:`strduration_long <linkcheck.strformat.strduration_long>`\\ "
"\\(duration\\[\\, do\\_translate\\]\\)"
msgstr ""

#: linkcheck.strformat.ascii_safe:1:<autosummary>:1
#: linkcheck.strformat.strduration_long:1 of
msgid "Turn a time value in seconds into x hours, x minutes, etc."
msgstr ""

#: linkcheck.strformat.ascii_safe:1:<autosummary>:1 of
msgid ""
":obj:`strip_control_chars <linkcheck.strformat.strip_control_chars>`\\ "
"\\(text\\)"
msgstr ""

#: linkcheck.strformat.ascii_safe:1:<autosummary>:1
#: linkcheck.strformat.strip_control_chars:1 of
msgid "Remove console control characters from text."
msgstr ""

#: linkcheck.strformat.ascii_safe:1:<autosummary>:1 of
msgid ":obj:`stripurl <linkcheck.strformat.stripurl>`\\ \\(s\\)"
msgstr ""

#: linkcheck.strformat.ascii_safe:1:<autosummary>:1 of
msgid "Remove any lines from string after the first line."
msgstr ""

#: linkcheck.strformat.ascii_safe:1:<autosummary>:1 of
msgid ":obj:`strline <linkcheck.strformat.strline>`\\ \\(s\\)"
msgstr ""

#: linkcheck.strformat.ascii_safe:1:<autosummary>:1
#: linkcheck.strformat.strline:1 of
msgid "Display string representation on one line."
msgstr ""

#: linkcheck.strformat.ascii_safe:1:<autosummary>:1 of
msgid ":obj:`strsize <linkcheck.strformat.strsize>`\\ \\(b\\[\\, grouping\\]\\)"
msgstr ""

#: linkcheck.strformat.ascii_safe:1:<autosummary>:1 of
msgid "Return human representation of bytes b."
msgstr ""

#: linkcheck.strformat.ascii_safe:1:<autosummary>:1 of
msgid ":obj:`strtime <linkcheck.strformat.strtime>`\\ \\(t\\[\\, func\\]\\)"
msgstr ""

#: linkcheck.strformat.ascii_safe:1:<autosummary>:1
#: linkcheck.strformat.strtime:1 of
msgid "Return ISO 8601 formatted time."
msgstr ""

#: linkcheck.strformat.ascii_safe:1:<autosummary>:1 of
msgid ":obj:`strtimezone <linkcheck.strformat.strtimezone>`\\ \\(\\)"
msgstr ""

#: linkcheck.strformat.ascii_safe:1:<autosummary>:1
#: linkcheck.strformat.strtimezone:1 of
msgid "Return timezone info, %z on some platforms, but not supported on all."
msgstr ""

#: linkcheck.strformat.ascii_safe:1:<autosummary>:1 of
msgid ":obj:`unquote <linkcheck.strformat.unquote>`\\ \\(s\\[\\, matching\\]\\)"
msgstr ""

#: linkcheck.strformat.ascii_safe:1:<autosummary>:1 of
msgid "Remove leading and ending single and double quotes."
msgstr ""

#: linkcheck.strformat.ascii_safe:1:<autosummary>:1 of
msgid ""
":obj:`wrap <linkcheck.strformat.wrap>`\\ \\(text\\, width\\, "
"\\*\\*kwargs\\)"
msgstr ""

#: linkcheck.strformat.ascii_safe:1:<autosummary>:1 of
msgid "Adjust lines of text to be not longer than width."
msgstr ""

#: linkcheck.strformat.ascii_safe:1 of
msgid ""
"Get ASCII string without raising encoding errors. Unknown characters of "
"the given encoding will be ignored."
msgstr ""

#: linkcheck.strformat.ascii_safe:4 of
msgid "the string to be encoded"
msgstr ""

#: linkcheck.strformat.ascii_safe:6 of
msgid "version of s containing only ASCII characters, or None if s was None"
msgstr ""

#: linkcheck.strformat.get_paragraphs:1 of
msgid ""
"A new paragraph is considered to start at a line which follows one or "
"more blank lines (lines containing nothing or just spaces). The first "
"line of the text also starts a paragraph."
msgstr ""

#: linkcheck.strformat.limit:4 of
msgid "the string to limit"
msgstr ""

#: linkcheck.strformat.limit:6 of
msgid "maximum length"
msgstr ""

#: linkcheck.strformat.limit:8 of
msgid "limited string, at most length+3 characters long"
msgstr ""

#: linkcheck.strformat.stripurl:1 of
msgid ""
"Remove any lines from string after the first line. Also remove whitespace"
" at start and end from given string."
msgstr ""

#: linkcheck.strformat.strsize:1 of
msgid ""
"Return human representation of bytes b. A negative number of bytes raises"
" a value error."
msgstr ""

#: linkcheck.strformat.unquote:1 of
msgid ""
"Remove leading and ending single and double quotes. The quotes need to "
"match if matching is True. Only one quote from each end will be stripped."
msgstr ""

#: linkcheck.strformat.unquote:5 of
msgid ""
"if s evaluates to False, return s as is, else return string with stripped"
" quotes"
msgstr ""

#: linkcheck.strformat.wrap:1 of
msgid ""
"Adjust lines of text to be not longer than width. The text will be "
"returned unmodified if width <= 0. See textwrap.wrap() for a list of "
"supported kwargs. Returns text with lines no longer than given width."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.threader.rst:2
msgid "linkcheck.threader"
msgstr ""

#: linkcheck.threader.StoppableThread:1:<autosummary>:1 of
msgid ":obj:`StoppableThread <linkcheck.threader.StoppableThread>`\\ \\(\\)"
msgstr ""

#: linkcheck.threader.StoppableThread:1:<autosummary>:1 of
msgid "Thread class with a stop() method."
msgstr ""

#: linkcheck.threader.StoppableThread:1 of
msgid "Bases: :class:`threading.Thread`"
msgstr ""

#: linkcheck.threader.StoppableThread:1 of
msgid ""
"Thread class with a stop() method. The thread itself has to check "
"regularly for the stopped() condition."
msgstr ""

#: linkcheck.threader.StoppableThread.stop:1 of
msgid "Set stop event."
msgstr ""

#: linkcheck.threader.StoppableThread.stopped:1 of
msgid "Return True if stop event is set."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.trace.rst:2
msgid "linkcheck.trace"
msgstr ""

#: linkcheck.trace.trace_filter:1:<autosummary>:1 of
msgid ":obj:`trace_filter <linkcheck.trace.trace_filter>`\\ \\(patterns\\)"
msgstr ""

#: linkcheck.trace.trace_filter:1
#: linkcheck.trace.trace_filter:1:<autosummary>:1 of
msgid "Add given patterns to trace filter set or clear set if patterns is None."
msgstr ""

#: linkcheck.trace.trace_filter:1:<autosummary>:1 of
msgid ":obj:`trace_ignore <linkcheck.trace.trace_ignore>`\\ \\(names\\)"
msgstr ""

#: linkcheck.trace.trace_filter:1:<autosummary>:1
#: linkcheck.trace.trace_ignore:1 of
msgid "Add given names to trace ignore set, or clear set if names is None."
msgstr ""

#: linkcheck.trace.trace_filter:1:<autosummary>:1 of
msgid ":obj:`trace_off <linkcheck.trace.trace_off>`\\ \\(\\)"
msgstr ""

#: linkcheck.trace.trace_filter:1:<autosummary>:1 linkcheck.trace.trace_off:1
#: of
msgid "Stop tracing of the current thread (and the current thread only)."
msgstr ""

#: linkcheck.trace.trace_filter:1:<autosummary>:1 of
msgid ":obj:`trace_on <linkcheck.trace.trace_on>`\\ \\(\\[full\\]\\)"
msgstr ""

#: linkcheck.trace.trace_filter:1:<autosummary>:1 linkcheck.trace.trace_on:1 of
msgid "Start tracing of the current thread (and the current thread only)."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.url.rst:2
msgid "linkcheck.url"
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1 of
msgid ":obj:`collapse_segments <linkcheck.url.collapse_segments>`\\ \\(path\\)"
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1 of
msgid "Remove all redundant segments from the given URL path."
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1 of
msgid ":obj:`document_quote <linkcheck.url.document_quote>`\\ \\(document\\)"
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1
#: linkcheck.url.document_quote:1 of
msgid "Quote given document."
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1 of
msgid ""
":obj:`get_content <linkcheck.url.get_content>`\\ \\(url\\[\\, user\\, "
"password\\, proxy\\, ...\\]\\)"
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1
#: linkcheck.url.get_content:1 of
msgid "Get URL content and info."
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1 of
msgid ":obj:`idna_encode <linkcheck.url.idna_encode>`\\ \\(host\\)"
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1 of
msgid ""
"Encode hostname as internationalized domain name (IDN) according to RFC "
"3490."
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1 of
msgid ""
":obj:`is_duplicate_content_url "
"<linkcheck.url.is_duplicate_content_url>`\\ \\(url1\\, url2\\)"
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1
#: linkcheck.url.is_duplicate_content_url:1 of
msgid "Check if both URLs are allowed to point to the same content."
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1 of
msgid ":obj:`is_numeric_port <linkcheck.url.is_numeric_port>`\\ \\(portstr\\)"
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1
#: linkcheck.url.is_numeric_port:1 of
msgid ""
"return: integer port (== True) iff portstr is a valid port number, False "
"otherwise"
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1 of
msgid ":obj:`match_host <linkcheck.url.match_host>`\\ \\(host\\, domainlist\\)"
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1 linkcheck.url.match_host:1
#: of
msgid "Return True if host matches an entry in given domain list."
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1 of
msgid ":obj:`match_url <linkcheck.url.match_url>`\\ \\(url\\, domainlist\\)"
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1 linkcheck.url.match_url:1
#: of
msgid "Return True if host part of url matches an entry in given domain list."
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1 of
msgid ""
":obj:`parse_qsl <linkcheck.url.parse_qsl>`\\ \\(qs\\, encoding\\[\\, "
"keep\\_blank\\_values\\, ...\\]\\)"
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1 linkcheck.url.parse_qsl:1
#: of
msgid "Parse a query given as a string argument."
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1 of
msgid ":obj:`safe_host_pattern <linkcheck.url.safe_host_pattern>`\\ \\(host\\)"
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1
#: linkcheck.url.safe_host_pattern:1 of
msgid "Return regular expression pattern with given host for URL testing."
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1 of
msgid ""
":obj:`shorten_duplicate_content_url "
"<linkcheck.url.shorten_duplicate_content_url>`\\ \\(url\\)"
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1
#: linkcheck.url.shorten_duplicate_content_url:1 of
msgid "Remove anchor part and trailing index.html from URL."
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1 of
msgid ":obj:`splitparams <linkcheck.url.splitparams>`\\ \\(path\\)"
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1 of
msgid "Split off parameter part from path."
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1 of
msgid ":obj:`splitport <linkcheck.url.splitport>`\\ \\(host\\[\\, port\\]\\)"
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1 of
msgid "Split optional port number from host."
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1 of
msgid ""
":obj:`url_fix_common_typos <linkcheck.url.url_fix_common_typos>`\\ "
"\\(url\\)"
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1
#: linkcheck.url.url_fix_common_typos:1 of
msgid "Fix common typos in given URL like forgotten colon."
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1 of
msgid ""
":obj:`url_fix_host <linkcheck.url.url_fix_host>`\\ \\(urlparts\\, "
"encoding\\)"
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1 of
msgid "Unquote and fix hostname."
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1 of
msgid ""
":obj:`url_fix_mailto_urlsplit <linkcheck.url.url_fix_mailto_urlsplit>`\\ "
"\\(urlparts\\)"
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1
#: linkcheck.url.url_fix_mailto_urlsplit:1 of
msgid "Split query part of mailto url if found."
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1 of
msgid ""
":obj:`url_fix_wayback_query <linkcheck.url.url_fix_wayback_query>`\\ "
"\\(path\\)"
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1 of
msgid ":obj:`url_needs_quoting <linkcheck.url.url_needs_quoting>`\\ \\(url\\)"
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1 of
msgid "Check if url needs percent quoting."
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1 of
msgid ":obj:`url_norm <linkcheck.url.url_norm>`\\ \\(url\\, encoding\\)"
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1 of
msgid "Normalize the given URL which must be quoted."
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1 of
msgid ""
":obj:`url_parse_query <linkcheck.url.url_parse_query>`\\ \\(query\\, "
"encoding\\)"
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1
#: linkcheck.url.url_parse_query:1 of
msgid "Parse and re-join the given CGI query."
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1 of
msgid ":obj:`url_quote <linkcheck.url.url_quote>`\\ \\(url\\, encoding\\)"
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1 linkcheck.url.url_quote:1
#: of
msgid "Quote given URL."
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1 of
msgid ":obj:`url_split <linkcheck.url.url_split>`\\ \\(url\\)"
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1 of
msgid ""
"Split url in a tuple (scheme, hostname, port, document) where hostname is"
" always lowercased."
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1 of
msgid ":obj:`url_unsplit <linkcheck.url.url_unsplit>`\\ \\(parts\\)"
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1
#: linkcheck.url.url_unsplit:1 of
msgid "Rejoin URL parts to a string."
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1 of
msgid ":obj:`urlunsplit <linkcheck.url.urlunsplit>`\\ \\(urlparts\\)"
msgstr ""

#: linkcheck.url.collapse_segments:1:<autosummary>:1 linkcheck.url.urlunsplit:1
#: of
msgid ""
"Same as urllib.parse.urlunsplit but with extra UNC path handling for "
"Windows OS."
msgstr ""

#: linkcheck.url.collapse_segments:1 of
msgid ""
"Remove all redundant segments from the given URL path. Precondition: path"
" is an unquoted url path"
msgstr ""

#: linkcheck.url.get_content:3 of
msgid "(decoded text content of URL, headers) or (None, errmsg) on error."
msgstr ""

#: linkcheck.url.idna_encode:1 of
msgid ""
"Encode hostname as internationalized domain name (IDN) according to RFC "
"3490. :raise: UnicodeError if hostname is not properly IDN encoded."
msgstr ""

#: linkcheck.url.parse_qsl:3 of
msgid "URL-encoded query string to be parsed"
msgstr ""

#: linkcheck.url.parse_qsl:5 of
msgid ""
"flag indicating whether blank values in URL encoded queries should be "
"treated as blank strings.  A true value indicates that blanks should be "
"retained as blank strings.  The default false value indicates that blank "
"values are to be ignored and treated as if they were  not included."
msgstr ""

#: linkcheck.url.parse_qsl:11 of
msgid ""
"flag indicating what to do with parsing errors. If false (the default), "
"errors are silently ignored. If true, errors raise a ValueError "
"exception."
msgstr ""

#: linkcheck.url.parse_qsl:15 of
msgid ""
"list of triples (key, value, separator) where key and value are the "
"splitted CGI parameter and separator the used separator for this CGI "
"parameter which is either a semicolon or an ampersand"
msgstr ""

#: linkcheck.url.splitparams:1 of
msgid ""
"Split off parameter part from path. Returns tuple (path-without-param, "
"param)"
msgstr ""

#: linkcheck.url.splitport:1 of
msgid ""
"Split optional port number from host. If host has no port number, the "
"given default port is returned."
msgstr ""

#: linkcheck.url.splitport:4 of
msgid "host name"
msgstr ""

#: linkcheck.url.splitport:6 of
msgid "the port number (default 0)"
msgstr ""

#: linkcheck.url.splitport:9 of
msgid "tuple of (host, port)"
msgstr ""

#: linkcheck.url.url_fix_host:1 of
msgid "Unquote and fix hostname. Returns is_idn."
msgstr ""

#: linkcheck.url.url_needs_quoting:1 of
msgid ""
"Check if url needs percent quoting. Note that the method does only check "
"basic character sets, and not any other syntax. The URL might still be "
"syntactically incorrect even when it is properly quoted."
msgstr ""

#: linkcheck.url.url_norm:1 of
msgid ""
"Normalize the given URL which must be quoted. Supports unicode hostnames "
"(IDNA encoding) according to RFC 3490."
msgstr ""

#: linkcheck.url.url_norm:4 of
msgid "(normed url, idna flag)"
msgstr ""

#: linkcheck.url.url_split:1 of
msgid ""
"Split url in a tuple (scheme, hostname, port, document) where hostname is"
" always lowercased. Precondition: url is syntactically correct URI (eg "
"has no whitespace)"
msgstr ""

