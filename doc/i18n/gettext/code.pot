# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2000-2014 Bastian Kleineidam
# This file is distributed under the same license as the LinkChecker package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: LinkChecker \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-08-05 19:32+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../src/code/index.rst:4
msgid "Code"
msgstr ""

#: ../../src/code/index.rst:6
msgid "LinkChecker comprises the linkchecker executable and linkcheck package."
msgstr ""

#: ../../src/code/index.rst:13:<autosummary>:1
msgid ":obj:`linkcheck <linkcheck>`\\"
msgstr ""

#: ../../src/code/index.rst:13:<autosummary>:1
#: ../../../linkcheck/__init__.py:docstring of linkcheck:1
msgid "Main package for link checking."
msgstr ""

#: ../../src/code/index.rst:15
msgid "Running"
msgstr ""

#: ../../src/code/index.rst:16
msgid "linkchecker provides the command-line arguments and reads a list of URLs from standard input, reads configuration files, drops privileges if run as root, initialises the chosen logger and collects an optional password."
msgstr ""

#: ../../src/code/index.rst:20
msgid "Uses :meth:`linkcheck.director.get_aggregate` to obtain an *aggregate* object :class:`linkcheck.director.aggregator.Aggregate` that includes :class:`linkcheck.cache.urlqueue.UrlQueue`, :class:`linkcheck.plugins.PluginManager` and :class:`linkcheck.cache.results.ResultCache` objects."
msgstr ""

#: ../../src/code/index.rst:26
msgid "Adds URLs in the form of *url_data* objects to the aggregate's *urlqueue* with :meth:`linkcheck.cmdline.aggregate_url` which uses :meth:`linkcheck.checker.get_url_from` to return a *url_data* object that is an instance of one of the :mod:`linkcheck.checker` classes derived from :class:`linkcheck.checker.urlbase.UrlBase`, according to the URL scheme."
msgstr ""

#: ../../src/code/index.rst:67
msgid "Optionally initialises profiling."
msgstr ""

#: ../../src/code/index.rst:69
msgid "Starts the checking with :meth:`linkcheck.director.check_urls`, passing the *aggregate*."
msgstr ""

#: ../../src/code/index.rst:71
msgid "Finally it counts any errors and exits with the appropriate code."
msgstr ""

#: ../../src/code/index.rst:74
msgid "Checking & Parsing"
msgstr ""

#: ../../src/code/index.rst:75
msgid "That is:"
msgstr ""

#: ../../src/code/index.rst:77
msgid "Checking a link is valid"
msgstr ""

#: ../../src/code/index.rst:78
msgid "Parsing the document the link points to for new links"
msgstr ""

#: ../../src/code/index.rst:80
msgid ":meth:`linkcheck.director.check_urls` authenticates with a login form if one is configured via :meth:`linkcheck.director.aggregator.Aggregate.visit_loginurl`, starts logging with :meth:`linkcheck.director.aggregator.Aggregate.logger.start_log_output` and calls :meth:`linkcheck.director.aggregator.Aggregate.start_threads` which instantiates a :class:`linkcheck.director.checker.Checker` object with the urlqueue if there is at least one thread configured, else it calls :meth:`linkcheck.director.checker.check_urls` which loops through the entries in the *urlqueue*."
msgstr ""

#: ../../src/code/index.rst:88
msgid "Either way :meth:`linkcheck.director.checker.check_url` tests to see if *url_data* already has a result and whether the cache already has a result for that key. If not it calls *url_data.check()*, which calls *url_data.check_content()* that runs content plugins and returns *do_parse* according to *url_data.do_check_content* and :meth:`linkcheck.checker.urlbase.UrlBase.allows_recursion` which includes :meth:`linkcheck.checker.urlbase.UrlBase.allows_simple_recursion` that is monitoring the recursion level (with :attr:`linkcheck.checker.urlbase.UrlBase.recursion_level`). If *do_parse* is True, passes the *url_data* object to :meth:`linkcheck.parser.parse_url` to call a `linkcheck.parser.parse_` method according to the document type e.g. :meth:`linkcheck.parser.parse_html` for HTML which calls :meth:`linkcheck.htmlutil.linkparse.find_links` passing *url_data.get_soup()* and *url_data.add_url*. `url_data.add_url` puts the new *url_data* object on the *urlqueue*."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:2
msgid "linkcheck"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:13
#: ../../src/code/linkcheck/linkcheck.ansicolor.rst:13
#: ../../src/code/linkcheck/linkcheck.better_exchook2.rst:13
#: ../../src/code/linkcheck/linkcheck.bookmarks.chromium.rst:13
#: ../../src/code/linkcheck/linkcheck.bookmarks.firefox.rst:13
#: ../../src/code/linkcheck/linkcheck.bookmarks.opera.rst:13
#: ../../src/code/linkcheck/linkcheck.bookmarks.safari.rst:13
#: ../../src/code/linkcheck/linkcheck.checker.rst:13
#: ../../src/code/linkcheck/linkcheck.checker.fileurl.rst:13
#: ../../src/code/linkcheck/linkcheck.checker.internpaturl.rst:13
#: ../../src/code/linkcheck/linkcheck.checker.mailtourl.rst:13
#: ../../src/code/linkcheck/linkcheck.checker.telneturl.rst:13
#: ../../src/code/linkcheck/linkcheck.checker.urlbase.rst:13
#: ../../src/code/linkcheck/linkcheck.cmdline.rst:13
#: ../../src/code/linkcheck/linkcheck.configuration.rst:13
#: ../../src/code/linkcheck/linkcheck.configuration.confparse.rst:13
#: ../../src/code/linkcheck/linkcheck.cookies.rst:13
#: ../../src/code/linkcheck/linkcheck.decorators.rst:13
#: ../../src/code/linkcheck/linkcheck.director.rst:13
#: ../../src/code/linkcheck/linkcheck.director.aggregator.rst:13
#: ../../src/code/linkcheck/linkcheck.director.checker.rst:13
#: ../../src/code/linkcheck/linkcheck.director.console.rst:13
#: ../../src/code/linkcheck/linkcheck.dummy.rst:13
#: ../../src/code/linkcheck/linkcheck.fileutil.rst:13
#: ../../src/code/linkcheck/linkcheck.ftpparse.rst:13
#: ../../src/code/linkcheck/linkcheck.htmlutil.htmlsoup.rst:13
#: ../../src/code/linkcheck/linkcheck.htmlutil.linkparse.rst:13
#: ../../src/code/linkcheck/linkcheck.htmlutil.loginformsearch.rst:13
#: ../../src/code/linkcheck/linkcheck.httputil.rst:13
#: ../../src/code/linkcheck/linkcheck.i18n.rst:13
#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:13
#: ../../src/code/linkcheck/linkcheck.loader.rst:13
#: ../../src/code/linkcheck/linkcheck.lock.rst:13
#: ../../src/code/linkcheck/linkcheck.log.rst:13
#: ../../src/code/linkcheck/linkcheck.logconf.rst:13
#: ../../src/code/linkcheck/linkcheck.logger.dot.rst:13
#: ../../src/code/linkcheck/linkcheck.logger.graph.rst:13
#: ../../src/code/linkcheck/linkcheck.logger.sql.rst:13
#: ../../src/code/linkcheck/linkcheck.logger.xmllog.rst:13
#: ../../src/code/linkcheck/linkcheck.memoryutil.rst:13
#: ../../src/code/linkcheck/linkcheck.mimeutil.rst:13
#: ../../src/code/linkcheck/linkcheck.network.iputil.rst:13
#: ../../src/code/linkcheck/linkcheck.parser.rst:13
#: ../../src/code/linkcheck/linkcheck.parser.sitemap.rst:13
#: ../../src/code/linkcheck/linkcheck.plugins.rst:13
#: ../../src/code/linkcheck/linkcheck.plugins.locationinfo.rst:13
#: ../../src/code/linkcheck/linkcheck.plugins.parsepdf.rst:13
#: ../../src/code/linkcheck/linkcheck.plugins.parseword.rst:13
#: ../../src/code/linkcheck/linkcheck.plugins.syntaxchecks.rst:13
#: ../../src/code/linkcheck/linkcheck.plugins.viruscheck.rst:13
#: ../../src/code/linkcheck/linkcheck.socketutil.rst:13
#: ../../src/code/linkcheck/linkcheck.strformat.rst:13
#: ../../src/code/linkcheck/linkcheck.trace.rst:13
#: ../../src/code/linkcheck/linkcheck.url.rst:13
msgid "Functions"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:30:<autosummary>:1
msgid ":obj:`drop_privileges <linkcheck.drop_privileges>`\\ \\(\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:30:<autosummary>:1
#: ../../../linkcheck/__init__.py:docstring of linkcheck.drop_privileges:1
msgid "Make sure to drop root privileges on POSIX systems."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:30:<autosummary>:1
msgid ":obj:`get_install_data <linkcheck.get_install_data>`\\ \\(\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:30:<autosummary>:1
#: ../../../linkcheck/__init__.py:docstring of linkcheck.get_install_data:1
msgid "Return absolute path of LinkChecker data installation directory."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:30:<autosummary>:1
msgid ":obj:`get_link_pat <linkcheck.get_link_pat>`\\ \\(arg\\[\\, strict\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:30:<autosummary>:1
msgid "Get a link pattern matcher for intern/extern links."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:30:<autosummary>:1
msgid ":obj:`init_i18n <linkcheck.init_i18n>`\\ \\(\\[loc\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:30:<autosummary>:1
msgid "Initialize i18n with the configured locale dir."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:30:<autosummary>:1
msgid ":obj:`module_path <linkcheck.module_path>`\\ \\(\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:30:<autosummary>:1
#: ../../../linkcheck/__init__.py:docstring of linkcheck.module_path:1
msgid "Return absolute directory of system executable."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:30:<autosummary>:1
msgid ":obj:`print_threadstacks <linkcheck.print_threadstacks>`\\ \\(sig\\, frame\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:30:<autosummary>:1
#: ../../../linkcheck/__init__.py:docstring of linkcheck.print_threadstacks:1
msgid "Print stack traces of all running threads."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:32
#: ../../src/code/linkcheck/linkcheck.cache.urlqueue.rst:27
#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:44
#: ../../src/code/linkcheck/linkcheck.plugins.viruscheck.rst:38
msgid "Exceptions"
msgstr ""

#: ../../../linkcheck/__init__.py:docstring of linkcheck.LinkCheckerError:1:<autosummary>:1
msgid ":obj:`LinkCheckerError <linkcheck.LinkCheckerError>`\\"
msgstr ""

#: ../../../linkcheck/__init__.py:docstring of linkcheck.LinkCheckerError:1:<autosummary>:1
#: ../../../linkcheck/__init__.py:docstring of linkcheck.LinkCheckerError:1
msgid "Exception to be raised on linkchecker-specific check errors."
msgstr ""

#: ../../../linkcheck/__init__.py:docstring of linkcheck.LinkCheckerError:1:<autosummary>:1
msgid ":obj:`LinkCheckerInterrupt <linkcheck.LinkCheckerInterrupt>`\\"
msgstr ""

#: ../../../linkcheck/__init__.py:docstring of linkcheck.LinkCheckerError:1:<autosummary>:1
#: ../../../linkcheck/__init__.py:docstring of linkcheck.LinkCheckerInterrupt:1
msgid "Used for testing."
msgstr ""

#: ../../../linkcheck/__init__.py:docstring of linkcheck.LinkCheckerError:1
#: ../../../linkcheck/__init__.py:docstring of linkcheck.LinkCheckerInterrupt:1
#: ../../../linkcheck/cache/urlqueue.py:docstring of linkcheck.cache.urlqueue.Empty:1
#: ../../../linkcheck/cache/urlqueue.py:docstring of linkcheck.cache.urlqueue.Timeout:1
#: ../../../linkcheck/lc_cgi.py:docstring of linkcheck.lc_cgi.LCFormError:1
#: ../../../linkcheck/plugins/viruscheck.py:docstring of linkcheck.plugins.viruscheck.ClamavError:1
msgid "Bases: :class:`Exception`"
msgstr ""

#: ../../../linkcheck/__init__.py:docstring of linkcheck.get_link_pat:1
msgid "Get a link pattern matcher for intern/extern links. Returns a compiled pattern and a negate and strict option."
msgstr ""

#: ../../../linkcheck/__init__.py:docstring of linkcheck.get_link_pat:0
#: ../../../linkcheck/checker/__init__.py:docstring of linkcheck.checker.absolute_url:0
#: ../../../linkcheck/checker/__init__.py:docstring of linkcheck.checker.get_index_html:0
#: ../../../linkcheck/checker/__init__.py:docstring of linkcheck.checker.get_url_from:0
#: ../../../linkcheck/checker/__init__.py:docstring of linkcheck.checker.guess_url:0
#: ../../../linkcheck/checker/dnsurl.py:docstring of linkcheck.checker.dnsurl.DnsUrl:0
#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.FileUrl:0
#: ../../../linkcheck/checker/ftpurl.py:docstring of linkcheck.checker.ftpurl.FtpUrl:0
#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl:0
#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl.allows_robots:0
#: ../../../linkcheck/checker/ignoreurl.py:docstring of linkcheck.checker.ignoreurl.IgnoreUrl:0
#: ../../../linkcheck/checker/internpaturl.py:docstring of linkcheck.checker.internpaturl.InternPatternUrl:0
#: ../../../linkcheck/checker/itmsservicesurl.py:docstring of linkcheck.checker.itmsservicesurl.ItmsServicesUrl:0
#: ../../../linkcheck/checker/mailtourl.py:docstring of linkcheck.checker.mailtourl.MailtoUrl:0
#: ../../../linkcheck/checker/nntpurl.py:docstring of linkcheck.checker.nntpurl.NntpUrl:0
#: ../../../linkcheck/checker/telneturl.py:docstring of linkcheck.checker.telneturl.TelnetUrl:0
#: ../../../linkcheck/checker/unknownurl.py:docstring of linkcheck.checker.unknownurl.UnknownUrl:0
#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase:0
#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.get_intern_pattern:0
#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.get_share_file:0
#: ../../../linkcheck/director/interrupter.py:docstring of linkcheck.director.interrupter.Interrupt:0
#: ../../../linkcheck/director/status.py:docstring of linkcheck.director.status.Status:0
#: ../../../linkcheck/lc_cgi.py:docstring of linkcheck.lc_cgi.format_error:0
#: ../../../linkcheck/loader.py:docstring of linkcheck.loader.get_plugins:0
#: ../../../linkcheck/lock.py:docstring of linkcheck.lock.get_lock:0
#: ../../../linkcheck/lock.py:docstring of linkcheck.lock.get_semaphore:0
#: ../../../linkcheck/logger/sql.py:docstring of linkcheck.logger.sql.intify:0
#: ../../../linkcheck/network/iputil.py:docstring of linkcheck.network.iputil.resolve_host:0
#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.ascii_safe:0
#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.limit:0
#: ../../../linkcheck/url.py:docstring of linkcheck.url.parse_qsl:0
#: ../../../linkcheck/url.py:docstring of linkcheck.url.splitport:0
msgid "Parameters"
msgstr ""

#: ../../../linkcheck/__init__.py:docstring of linkcheck.get_link_pat:4
msgid "pattern from config"
msgstr ""

#: ../../../linkcheck/__init__.py:docstring of linkcheck.get_link_pat:6
msgid "if pattern is to be handled strict"
msgstr ""

#: ../../../linkcheck/__init__.py:docstring of linkcheck.get_link_pat:0
#: ../../../linkcheck/__init__.py:docstring of linkcheck.init_i18n:0
#: ../../../linkcheck/checker/__init__.py:docstring of linkcheck.checker.guess_url:0
#: ../../../linkcheck/checker/dnsurl.py:docstring of linkcheck.checker.dnsurl.DnsUrl.can_get_content:0
#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.FileUrl.get_os_filename:0
#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.FileUrl.is_directory:0
#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.FileUrl.is_parseable:0
#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl.allows_robots:0
#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl.get_robots_txt_url:0
#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl.is_parseable:0
#: ../../../linkcheck/checker/mailtourl.py:docstring of linkcheck.checker.mailtourl.MailtoUrl.can_get_content:0
#: ../../../linkcheck/checker/nntpurl.py:docstring of linkcheck.checker.nntpurl.NntpUrl.can_get_content:0
#: ../../../linkcheck/checker/telneturl.py:docstring of linkcheck.checker.telneturl.TelnetUrl.can_get_content:0
#: ../../../linkcheck/checker/unknownurl.py:docstring of linkcheck.checker.unknownurl.UnknownUrl.can_get_content:0
#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.get_intern_pattern:0
#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.set_extern:0
#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.urljoin:0
#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.get_certifi_file:0
#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.get_share_file:0
#: ../../../linkcheck/cookies.py:docstring of linkcheck.cookies.from_file:0
#: ../../../linkcheck/cookies.py:docstring of linkcheck.cookies.from_headers:0
#: ../../../linkcheck/director/__init__.py:docstring of linkcheck.director.check_urls:0
#: ../../../linkcheck/httputil.py:docstring of linkcheck.httputil.asn1_generaltime_to_seconds:0
#: ../../../linkcheck/httputil.py:docstring of linkcheck.httputil.get_content_type:0
#: ../../../linkcheck/lc_cgi.py:docstring of linkcheck.lc_cgi.format_error:0
#: ../../../linkcheck/loader.py:docstring of linkcheck.loader.get_importable_files:0
#: ../../../linkcheck/loader.py:docstring of linkcheck.loader.get_package_modules:0
#: ../../../linkcheck/loader.py:docstring of linkcheck.loader.get_plugins:0
#: ../../../linkcheck/lock.py:docstring of linkcheck.lock.get_lock:0
#: ../../../linkcheck/lock.py:docstring of linkcheck.lock.get_semaphore:0
#: ../../../linkcheck/logger/sql.py:docstring of linkcheck.logger.sql.intify:0
#: ../../../linkcheck/memoryutil.py:docstring of linkcheck.memoryutil.write_memory_dump:0
#: ../../../linkcheck/plugins/locationinfo.py:docstring of linkcheck.plugins.locationinfo.get_location:0
#: ../../../linkcheck/plugins/viruscheck.py:docstring of linkcheck.plugins.viruscheck.ClamavConfig.new_connection:0
#: ../../../linkcheck/plugins/viruscheck.py:docstring of linkcheck.plugins.viruscheck.scan:0
#: ../../../linkcheck/robotparser2.py:docstring of linkcheck.robotparser2.RobotFileParser.can_fetch:0
#: ../../../linkcheck/robotparser2.py:docstring of linkcheck.robotparser2.RobotFileParser.get_crawldelay:0
#: ../../../linkcheck/robotparser2.py:docstring of linkcheck.robotparser2.RobotFileParser.mtime:0
#: ../../../linkcheck/robotparser2.py:docstring of linkcheck.robotparser2.RobotFileParser.parse:0
#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.ascii_safe:0
#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.limit:0
#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.unquote:0
#: ../../../linkcheck/url.py:docstring of linkcheck.url.get_content:0
#: ../../../linkcheck/url.py:docstring of linkcheck.url.parse_qsl:0
#: ../../../linkcheck/url.py:docstring of linkcheck.url.splitport:0
#: ../../../linkcheck/url.py:docstring of linkcheck.url.url_norm:0
msgid "Returns"
msgstr ""

#: ../../../linkcheck/__init__.py:docstring of linkcheck.get_link_pat:8
msgid "dictionary with keys 'pattern', 'negate' and 'strict'"
msgstr ""

#: ../../../linkcheck/__init__.py:docstring of linkcheck.get_link_pat:0
#: ../../../linkcheck/checker/__init__.py:docstring of linkcheck.checker.guess_url:0
#: ../../../linkcheck/checker/dnsurl.py:docstring of linkcheck.checker.dnsurl.DnsUrl.can_get_content:0
#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.FileUrl.get_os_filename:0
#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.FileUrl.is_directory:0
#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.FileUrl.is_parseable:0
#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl.allows_robots:0
#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl.get_robots_txt_url:0
#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl.is_parseable:0
#: ../../../linkcheck/checker/mailtourl.py:docstring of linkcheck.checker.mailtourl.MailtoUrl.can_get_content:0
#: ../../../linkcheck/checker/nntpurl.py:docstring of linkcheck.checker.nntpurl.NntpUrl.can_get_content:0
#: ../../../linkcheck/checker/telneturl.py:docstring of linkcheck.checker.telneturl.TelnetUrl.can_get_content:0
#: ../../../linkcheck/checker/unknownurl.py:docstring of linkcheck.checker.unknownurl.UnknownUrl.can_get_content:0
#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.get_intern_pattern:0
#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.get_certifi_file:0
#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.get_share_file:0
#: ../../../linkcheck/httputil.py:docstring of linkcheck.httputil.get_content_type:0
#: ../../../linkcheck/lc_cgi.py:docstring of linkcheck.lc_cgi.format_error:0
#: ../../../linkcheck/loader.py:docstring of linkcheck.loader.get_importable_files:0
#: ../../../linkcheck/loader.py:docstring of linkcheck.loader.get_package_modules:0
#: ../../../linkcheck/loader.py:docstring of linkcheck.loader.get_plugins:0
#: ../../../linkcheck/lock.py:docstring of linkcheck.lock.get_lock:0
#: ../../../linkcheck/lock.py:docstring of linkcheck.lock.get_semaphore:0
#: ../../../linkcheck/logger/sql.py:docstring of linkcheck.logger.sql.intify:0
#: ../../../linkcheck/memoryutil.py:docstring of linkcheck.memoryutil.write_memory_dump:0
#: ../../../linkcheck/plugins/viruscheck.py:docstring of linkcheck.plugins.viruscheck.scan:0
#: ../../../linkcheck/robotparser2.py:docstring of linkcheck.robotparser2.RobotFileParser.can_fetch:0
#: ../../../linkcheck/robotparser2.py:docstring of linkcheck.robotparser2.RobotFileParser.get_crawldelay:0
#: ../../../linkcheck/robotparser2.py:docstring of linkcheck.robotparser2.RobotFileParser.mtime:0
#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.ascii_safe:0
#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.unquote:0
#: ../../../linkcheck/url.py:docstring of linkcheck.url.get_content:0
#: ../../../linkcheck/url.py:docstring of linkcheck.url.parse_qsl:0
#: ../../../linkcheck/url.py:docstring of linkcheck.url.splitport:0
#: ../../../linkcheck/url.py:docstring of linkcheck.url.url_norm:0
msgid "Return type"
msgstr ""

#: ../../../linkcheck/__init__.py:docstring of linkcheck.get_link_pat:0
#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.Configuration.read:0
#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.get_certifi_file:0
#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.get_share_file:0
#: ../../../linkcheck/configuration/confparse.py:docstring of linkcheck.configuration.confparse.LCConfigParser.read:0
#: ../../../linkcheck/cookies.py:docstring of linkcheck.cookies.from_headers:0
msgid "raises"
msgstr ""

#: ../../../linkcheck/__init__.py:docstring of linkcheck.get_link_pat:10
msgid "re.error on invalid regular expressions"
msgstr ""

#: ../../../linkcheck/__init__.py:docstring of linkcheck.init_i18n:1
msgid "Initialize i18n with the configured locale dir. The environment variable LOCPATH can also specify a locale dir."
msgstr ""

#: ../../../linkcheck/__init__.py:docstring of linkcheck.init_i18n:4
#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.set_extern:5
#: ../../../linkcheck/director/__init__.py:docstring of linkcheck.director.check_urls:4
#: ../../../linkcheck/robotparser2.py:docstring of linkcheck.robotparser2.RobotFileParser.parse:5
msgid "None"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:43
#: ../../src/code/linkcheck/linkcheck.bookmarks.rst:25
#: ../../src/code/linkcheck/linkcheck.cache.rst:25
#: ../../src/code/linkcheck/linkcheck.checker.rst:35
#: ../../src/code/linkcheck/linkcheck.configuration.rst:56
#: ../../src/code/linkcheck/linkcheck.director.rst:36
#: ../../src/code/linkcheck/linkcheck.htmlutil.rst:25
#: ../../src/code/linkcheck/linkcheck.logger.rst:31
#: ../../src/code/linkcheck/linkcheck.network.rst:25
#: ../../src/code/linkcheck/linkcheck.parser.rst:41
#: ../../src/code/linkcheck/linkcheck.plugins.rst:39
msgid "Modules"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.ansicolor <linkcheck.ansicolor>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid "ANSI Color definitions and functions."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.better_exchook2 <linkcheck.better_exchook2>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.bookmarks <linkcheck.bookmarks>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.cache <linkcheck.cache>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
#: ../../../linkcheck/cache/__init__.py:docstring of linkcheck.cache:1
msgid "Store and provide cached data during checking in a thread-safe manner."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.checker <linkcheck.checker>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
#: ../../../linkcheck/checker/__init__.py:docstring of linkcheck.checker:1
msgid "Main functions for link checking."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.cmdline <linkcheck.cmdline>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
#: ../../../linkcheck/cmdline.py:docstring of linkcheck.cmdline:1
msgid "Utility functions suitable for command line clients."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.configuration <linkcheck.configuration>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration:1
msgid "Store metadata and options."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.containers <linkcheck.containers>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
#: ../../../linkcheck/containers.py:docstring of linkcheck.containers:1
msgid "Special container classes."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.cookies <linkcheck.cookies>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
#: ../../../linkcheck/cookies.py:docstring of linkcheck.cookies:1
msgid "Parsing of cookies."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.decorators <linkcheck.decorators>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
#: ../../../linkcheck/decorators.py:docstring of linkcheck.decorators:1
msgid "Simple decorators (usable in Python >= 2.4)."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.director <linkcheck.director>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
#: ../../../linkcheck/director/__init__.py:docstring of linkcheck.director:1
msgid "Management of checking a queue of links with several threads."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.dummy <linkcheck.dummy>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
#: ../../../linkcheck/dummy.py:docstring of linkcheck.dummy:1
msgid "Dummy objects."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.fileutil <linkcheck.fileutil>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
#: ../../../linkcheck/fileutil.py:docstring of linkcheck.fileutil:1
#: ../../../linkcheck/mimeutil.py:docstring of linkcheck.mimeutil:1
msgid "File and path utilities."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.ftpparse <linkcheck.ftpparse>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
#: ../../../linkcheck/ftpparse.py:docstring of linkcheck.ftpparse:1
msgid "Python implementation of a part of Dan Bernstein's ftpparse library."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.htmlutil <linkcheck.htmlutil>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
#: ../../../linkcheck/htmlutil/__init__.py:docstring of linkcheck.htmlutil:1
msgid "HTML utils"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.httputil <linkcheck.httputil>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.i18n <linkcheck.i18n>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
#: ../../../linkcheck/i18n.py:docstring of linkcheck.i18n:1
msgid "Application internationalization support."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.lc_cgi <linkcheck.lc_cgi>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
#: ../../../linkcheck/lc_cgi.py:docstring of linkcheck.lc_cgi:1
msgid "Functions used by the WSGI script."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.loader <linkcheck.loader>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
#: ../../../linkcheck/loader.py:docstring of linkcheck.loader:1
msgid "Functions to load plugin modules."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.lock <linkcheck.lock>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
#: ../../../linkcheck/lock.py:docstring of linkcheck.lock:1
msgid "Locking utility class."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.log <linkcheck.log>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
#: ../../../linkcheck/log.py:docstring of linkcheck.log:1
msgid "Logging and debug functions."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.logconf <linkcheck.logconf>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
#: ../../../linkcheck/logconf.py:docstring of linkcheck.logconf:1
msgid "Logging configuration"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.logger <linkcheck.logger>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
#: ../../../linkcheck/logger/__init__.py:docstring of linkcheck.logger:1
msgid "Output logging support for different formats."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.memoryutil <linkcheck.memoryutil>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
#: ../../../linkcheck/memoryutil.py:docstring of linkcheck.memoryutil:1
msgid "Memory utilities."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.mimeutil <linkcheck.mimeutil>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.network <linkcheck.network>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.parser <linkcheck.parser>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
#: ../../../linkcheck/parser/__init__.py:docstring of linkcheck.parser:1
#: ../../src/code/linkcheck/linkcheck.parser.rst:47:<autosummary>:1
#: ../../../linkcheck/parser/sitemap.py:docstring of linkcheck.parser.sitemap:1
msgid "Main functions for link parsing"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.plugins <linkcheck.plugins>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
#: ../../../linkcheck/plugins/__init__.py:docstring of linkcheck.plugins:1
msgid "Module for plugin management."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.robotparser2 <linkcheck.robotparser2>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
#: ../../../linkcheck/robotparser2.py:docstring of linkcheck.robotparser2:1
msgid "Robots.txt parser."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.socketutil <linkcheck.socketutil>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.strformat <linkcheck.strformat>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid "Various string utility functions."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.threader <linkcheck.threader>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
#: ../../../linkcheck/threader.py:docstring of linkcheck.threader:1
msgid "Support for managing threads."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.trace <linkcheck.trace>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
msgid ":obj:`linkcheck.url <linkcheck.url>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.rst:83:<autosummary>:1
#: ../../../linkcheck/url.py:docstring of linkcheck.url:1
msgid "Functions for parsing and matching URL strings."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.ansicolor.rst:2
msgid "linkcheck.ansicolor"
msgstr ""

#: ../../../linkcheck/ansicolor.py:docstring of linkcheck.ansicolor:1
msgid "ANSI Color definitions and functions. For Windows systems, the colorama module uses ctypes and Windows DLLs to generate colored output."
msgstr ""

#: ../../../linkcheck/ansicolor.py:docstring of linkcheck.ansicolor:4
msgid "From Term::ANSIColor, applies also to this module:"
msgstr ""

#: ../../../linkcheck/ansicolor.py:docstring of linkcheck.ansicolor:6
msgid "The codes output by this module are standard terminal control codes, complying with ECMA-48 and ISO 6429 (generally referred to as \"ANSI color\" for the color codes). The non-color control codes (bold, dark, italic, underline, and reverse) are part of the earlier ANSI X3.64 standard for control sequences for video terminals and peripherals."
msgstr ""

#: ../../../linkcheck/ansicolor.py:docstring of linkcheck.ansicolor:12
msgid "Note that not all displays are ISO 6429-compliant, or even X3.64-compliant (or are even attempting to be so)."
msgstr ""

#: ../../../linkcheck/ansicolor.py:docstring of linkcheck.ansicolor:15
msgid "Jean Delvare provided the following table of different common terminal emulators and their support for the various attributes and others have helped me flesh it out::"
msgstr ""

#: ../../../linkcheck/ansicolor.py:docstring of linkcheck.ansicolor:31
msgid "SEE ALSO"
msgstr ""

#: ../../../linkcheck/ansicolor.py:docstring of linkcheck.ansicolor:33
msgid "ECMA-048 is available on-line (at least at the time of this writing) at http://www.ecma-international.org/publications/standards/ECMA-048.HTM."
msgstr ""

#: ../../../linkcheck/ansicolor.py:docstring of linkcheck.ansicolor:36
msgid "ISO 6429 is available from ISO for a charge; the author of this module does not own a copy of it. Since the source material for ISO 6429 was ECMA-048 and the latter is available for free, there seems little reason to obtain the ISO standard."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.ansicolor.rst:25:<autosummary>:1
msgid ":obj:`esc_ansicolor <linkcheck.ansicolor.esc_ansicolor>`\\ \\(color\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.ansicolor.rst:25:<autosummary>:1
#: ../../../linkcheck/ansicolor.py:docstring of linkcheck.ansicolor.esc_ansicolor:1
msgid "convert a named color definition to an escaped ANSI color"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.ansicolor.rst:25:<autosummary>:1
msgid ":obj:`get_columns <linkcheck.ansicolor.get_columns>`\\ \\(fp\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.ansicolor.rst:25:<autosummary>:1
#: ../../../linkcheck/ansicolor.py:docstring of linkcheck.ansicolor.get_columns:1
msgid "Return number of columns for given file."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.ansicolor.rst:25:<autosummary>:1
msgid ":obj:`get_win_color <linkcheck.ansicolor.get_win_color>`\\ \\(color\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.ansicolor.rst:25:<autosummary>:1
#: ../../../linkcheck/ansicolor.py:docstring of linkcheck.ansicolor.get_win_color:1
msgid "Convert a named color definition to Windows console color foreground, background and style numbers."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.ansicolor.rst:25:<autosummary>:1
msgid ":obj:`has_colors <linkcheck.ansicolor.has_colors>`\\ \\(fp\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.ansicolor.rst:25:<autosummary>:1
#: ../../../linkcheck/ansicolor.py:docstring of linkcheck.ansicolor.has_colors:1
msgid "Test if given file is an ANSI color enabled tty."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.ansicolor.rst:25:<autosummary>:1
msgid ":obj:`write_color <linkcheck.ansicolor.write_color>`\\ \\(fp\\, text\\, color\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.ansicolor.rst:25:<autosummary>:1
#: ../../../linkcheck/ansicolor.py:docstring of linkcheck.ansicolor.write_color:1
msgid "Colorize text with given color."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.ansicolor.rst:27
#: ../../src/code/linkcheck/linkcheck.cache.results.rst:17
#: ../../src/code/linkcheck/linkcheck.cache.robots_txt.rst:17
#: ../../src/code/linkcheck/linkcheck.cache.urlqueue.rst:17
#: ../../src/code/linkcheck/linkcheck.checker.dnsurl.rst:17
#: ../../src/code/linkcheck/linkcheck.checker.fileurl.rst:27
#: ../../src/code/linkcheck/linkcheck.checker.ftpurl.rst:17
#: ../../src/code/linkcheck/linkcheck.checker.httpurl.rst:17
#: ../../src/code/linkcheck/linkcheck.checker.ignoreurl.rst:17
#: ../../src/code/linkcheck/linkcheck.checker.internpaturl.rst:23
#: ../../src/code/linkcheck/linkcheck.checker.itmsservicesurl.rst:17
#: ../../src/code/linkcheck/linkcheck.checker.mailtourl.rst:26
#: ../../src/code/linkcheck/linkcheck.checker.nntpurl.rst:17
#: ../../src/code/linkcheck/linkcheck.checker.proxysupport.rst:17
#: ../../src/code/linkcheck/linkcheck.checker.telneturl.rst:23
#: ../../src/code/linkcheck/linkcheck.checker.unknownurl.rst:17
#: ../../src/code/linkcheck/linkcheck.checker.urlbase.rst:24
#: ../../src/code/linkcheck/linkcheck.cmdline.rst:26
#: ../../src/code/linkcheck/linkcheck.configuration.rst:42
#: ../../src/code/linkcheck/linkcheck.configuration.confparse.rst:23
#: ../../src/code/linkcheck/linkcheck.containers.rst:17
#: ../../src/code/linkcheck/linkcheck.decorators.rst:30
#: ../../src/code/linkcheck/linkcheck.director.aggregator.rst:23
#: ../../src/code/linkcheck/linkcheck.director.checker.rst:24
#: ../../src/code/linkcheck/linkcheck.director.console.rst:28
#: ../../src/code/linkcheck/linkcheck.director.interrupter.rst:17
#: ../../src/code/linkcheck/linkcheck.director.logger.rst:17
#: ../../src/code/linkcheck/linkcheck.director.status.rst:17
#: ../../src/code/linkcheck/linkcheck.director.task.rst:17
#: ../../src/code/linkcheck/linkcheck.dummy.rst:23
#: ../../src/code/linkcheck/linkcheck.htmlutil.linkparse.rst:26
#: ../../src/code/linkcheck/linkcheck.htmlutil.loginformsearch.rst:23
#: ../../src/code/linkcheck/linkcheck.i18n.rst:33
#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:34
#: ../../src/code/linkcheck/linkcheck.lock.rst:24
#: ../../src/code/linkcheck/linkcheck.logger.rst:17
#: ../../src/code/linkcheck/linkcheck.logger.blacklist.rst:17
#: ../../src/code/linkcheck/linkcheck.logger.csvlog.rst:17
#: ../../src/code/linkcheck/linkcheck.logger.customxml.rst:17
#: ../../src/code/linkcheck/linkcheck.logger.dot.rst:23
#: ../../src/code/linkcheck/linkcheck.logger.gml.rst:17
#: ../../src/code/linkcheck/linkcheck.logger.gxml.rst:17
#: ../../src/code/linkcheck/linkcheck.logger.html.rst:17
#: ../../src/code/linkcheck/linkcheck.logger.none.rst:17
#: ../../src/code/linkcheck/linkcheck.logger.sitemapxml.rst:17
#: ../../src/code/linkcheck/linkcheck.logger.sql.rst:24
#: ../../src/code/linkcheck/linkcheck.logger.text.rst:17
#: ../../src/code/linkcheck/linkcheck.parser.sitemap.rst:24
#: ../../src/code/linkcheck/linkcheck.plugins.rst:25
#: ../../src/code/linkcheck/linkcheck.plugins.anchorcheck.rst:17
#: ../../src/code/linkcheck/linkcheck.plugins.httpheaderinfo.rst:17
#: ../../src/code/linkcheck/linkcheck.plugins.locationinfo.rst:25
#: ../../src/code/linkcheck/linkcheck.plugins.markdowncheck.rst:17
#: ../../src/code/linkcheck/linkcheck.plugins.parsepdf.rst:23
#: ../../src/code/linkcheck/linkcheck.plugins.parseword.rst:31
#: ../../src/code/linkcheck/linkcheck.plugins.regexcheck.rst:17
#: ../../src/code/linkcheck/linkcheck.plugins.sslcertcheck.rst:17
#: ../../src/code/linkcheck/linkcheck.plugins.syntaxchecks.rst:24
#: ../../src/code/linkcheck/linkcheck.plugins.viruscheck.rst:26
#: ../../src/code/linkcheck/linkcheck.robotparser2.rst:17
#: ../../src/code/linkcheck/linkcheck.threader.rst:17
msgid "Classes"
msgstr ""

#: ../../../linkcheck/ansicolor.py:docstring of linkcheck.ansicolor.ColoredStreamHandler:1:<autosummary>:1
msgid ":obj:`ColoredStreamHandler <linkcheck.ansicolor.ColoredStreamHandler>`\\ \\(\\[strm\\]\\)"
msgstr ""

#: ../../../linkcheck/ansicolor.py:docstring of linkcheck.ansicolor.ColoredStreamHandler:1:<autosummary>:1
#: ../../../linkcheck/ansicolor.py:docstring of linkcheck.ansicolor.ColoredStreamHandler:1
msgid "Send colored log messages to streams (file-like objects)."
msgstr ""

#: ../../../linkcheck/ansicolor.py:docstring of linkcheck.ansicolor.ColoredStreamHandler:1:<autosummary>:1
msgid ":obj:`Colorizer <linkcheck.ansicolor.Colorizer>`\\ \\(fp\\)"
msgstr ""

#: ../../../linkcheck/ansicolor.py:docstring of linkcheck.ansicolor.ColoredStreamHandler:1:<autosummary>:1
#: ../../../linkcheck/ansicolor.py:docstring of linkcheck.ansicolor.Colorizer:1
msgid "Prints colored messages to streams."
msgstr ""

#: ../../../linkcheck/ansicolor.py:docstring of linkcheck.ansicolor.ColoredStreamHandler:1
msgid "Bases: :class:`logging.StreamHandler`"
msgstr ""

#: ../../../linkcheck/ansicolor.py:docstring of linkcheck.ansicolor.ColoredStreamHandler:3
msgid "Log to given stream (a file-like object) or to stderr if strm is None."
msgstr ""

#: ../../../linkcheck/ansicolor.py:docstring of linkcheck.ansicolor.ColoredStreamHandler.emit:1
msgid "Emit a record."
msgstr ""

#: ../../../linkcheck/ansicolor.py:docstring of linkcheck.ansicolor.ColoredStreamHandler.emit:3
msgid "If a formatter is specified, it is used to format the record. The record is then written to the stream with a trailing newline [N.B. this may be removed depending on feedback]."
msgstr ""

#: ../../../linkcheck/ansicolor.py:docstring of linkcheck.ansicolor.ColoredStreamHandler.get_color:1
msgid "Get appropriate color according to log level."
msgstr ""

#: ../../../linkcheck/ansicolor.py:docstring of linkcheck.ansicolor.Colorizer:1
#: ../../../linkcheck/cache/results.py:docstring of linkcheck.cache.results.ResultCache:1
#: ../../../linkcheck/cache/robots_txt.py:docstring of linkcheck.cache.robots_txt.RobotsTxt:1
#: ../../../linkcheck/cache/urlqueue.py:docstring of linkcheck.cache.urlqueue.UrlQueue:1
#: ../../../linkcheck/checker/proxysupport.py:docstring of linkcheck.checker.proxysupport.ProxySupport:1
#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.CompactUrlData:1
#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase:1
#: ../../../linkcheck/decorators.py:docstring of linkcheck.decorators.curried:1
#: ../../../linkcheck/director/aggregator.py:docstring of linkcheck.director.aggregator.Aggregate:1
#: ../../../linkcheck/director/console.py:docstring of linkcheck.director.console.StatusLogger:1
#: ../../../linkcheck/director/logger.py:docstring of linkcheck.director.logger.Logger:1
#: ../../../linkcheck/dummy.py:docstring of linkcheck.dummy.Dummy:1
#: ../../../linkcheck/htmlutil/linkparse.py:docstring of linkcheck.htmlutil.linkparse.LinkFinder:1
#: ../../../linkcheck/htmlutil/loginformsearch.py:docstring of linkcheck.htmlutil.loginformsearch.Form:1
#: ../../../linkcheck/lc_cgi.py:docstring of linkcheck.lc_cgi.ThreadsafeIO:1
#: ../../../linkcheck/lock.py:docstring of linkcheck.lock.DebugLock:1
#: ../../../linkcheck/logger/__init__.py:docstring of linkcheck.logger.LogStatistics:1
#: ../../../linkcheck/parser/sitemap.py:docstring of linkcheck.parser.sitemap.XmlTagUrlParser:1
#: ../../../linkcheck/plugins/__init__.py:docstring of linkcheck.plugins.PluginManager:1
#: ../../../linkcheck/plugins/syntaxchecks.py:docstring of linkcheck.plugins.syntaxchecks.W3Timer:1
#: ../../../linkcheck/plugins/viruscheck.py:docstring of linkcheck.plugins.viruscheck.ClamdScanner:1
#: ../../../linkcheck/robotparser2.py:docstring of linkcheck.robotparser2.RobotFileParser:1
msgid "Bases: :class:`object`"
msgstr ""

#: ../../../linkcheck/ansicolor.py:docstring of linkcheck.ansicolor.Colorizer:3
msgid "Initialize with given stream (file-like object)."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.better_exchook2.rst:2
msgid "linkcheck.better\\_exchook2"
msgstr ""

#: ../../../linkcheck/better_exchook2.py:docstring of linkcheck.better_exchook2.better_exchook:1:<autosummary>:1
msgid ":obj:`better_exchook <linkcheck.better_exchook2.better_exchook>`\\ \\(etype\\, value\\, tb\\[\\, out\\]\\)"
msgstr ""

#: ../../../linkcheck/better_exchook2.py:docstring of linkcheck.better_exchook2.better_exchook:1:<autosummary>:1
msgid ":obj:`fallback_findfile <linkcheck.better_exchook2.fallback_findfile>`\\ \\(filename\\)"
msgstr ""

#: ../../../linkcheck/better_exchook2.py:docstring of linkcheck.better_exchook2.better_exchook:1:<autosummary>:1
msgid ":obj:`grep_full_py_identifiers <linkcheck.better_exchook2.grep_full_py_identifiers>`\\ \\(tokens\\)"
msgstr ""

#: ../../../linkcheck/better_exchook2.py:docstring of linkcheck.better_exchook2.better_exchook:1:<autosummary>:1
msgid ":obj:`install <linkcheck.better_exchook2.install>`\\ \\(\\)"
msgstr ""

#: ../../../linkcheck/better_exchook2.py:docstring of linkcheck.better_exchook2.better_exchook:1:<autosummary>:1
msgid ":obj:`output <linkcheck.better_exchook2.output>`\\ \\(s\\[\\, out\\]\\)"
msgstr ""

#: ../../../linkcheck/better_exchook2.py:docstring of linkcheck.better_exchook2.better_exchook:1:<autosummary>:1
msgid ":obj:`output_limit <linkcheck.better_exchook2.output_limit>`\\ \\(\\)"
msgstr ""

#: ../../../linkcheck/better_exchook2.py:docstring of linkcheck.better_exchook2.better_exchook:1:<autosummary>:1
msgid ":obj:`parse_py_statement <linkcheck.better_exchook2.parse_py_statement>`\\ \\(line\\)"
msgstr ""

#: ../../../linkcheck/better_exchook2.py:docstring of linkcheck.better_exchook2.better_exchook:1:<autosummary>:1
msgid ":obj:`pp_extra_info <linkcheck.better_exchook2.pp_extra_info>`\\ \\(obj\\[\\, depthlimit\\]\\)"
msgstr ""

#: ../../../linkcheck/better_exchook2.py:docstring of linkcheck.better_exchook2.better_exchook:1:<autosummary>:1
msgid ":obj:`pretty_print <linkcheck.better_exchook2.pretty_print>`\\ \\(obj\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.bookmarks.rst:2
msgid "linkcheck.bookmarks"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.bookmarks.rst:34:<autosummary>:1
msgid ":obj:`linkcheck.bookmarks.chromium <linkcheck.bookmarks.chromium>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.bookmarks.rst:34:<autosummary>:1
msgid ":obj:`linkcheck.bookmarks.firefox <linkcheck.bookmarks.firefox>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.bookmarks.rst:34:<autosummary>:1
#: ../../../linkcheck/bookmarks/firefox.py:docstring of linkcheck.bookmarks.firefox:1
msgid "Parser for Firefox bookmark file."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.bookmarks.rst:34:<autosummary>:1
msgid ":obj:`linkcheck.bookmarks.opera <linkcheck.bookmarks.opera>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.bookmarks.rst:34:<autosummary>:1
msgid ":obj:`linkcheck.bookmarks.safari <linkcheck.bookmarks.safari>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.bookmarks.chromium.rst:2
msgid "linkcheck.bookmarks.chromium"
msgstr ""

#: ../../../linkcheck/bookmarks/chromium.py:docstring of linkcheck.bookmarks.chromium.parse_bookmark_data:1:<autosummary>:1
msgid ":obj:`parse_bookmark_data <linkcheck.bookmarks.chromium.parse_bookmark_data>`\\ \\(data\\)"
msgstr ""

#: ../../../linkcheck/bookmarks/chromium.py:docstring of linkcheck.bookmarks.chromium.parse_bookmark_data:1:<autosummary>:1
msgid "Parse data string."
msgstr ""

#: ../../../linkcheck/bookmarks/chromium.py:docstring of linkcheck.bookmarks.chromium.parse_bookmark_data:1:<autosummary>:1
msgid ":obj:`parse_bookmark_json <linkcheck.bookmarks.chromium.parse_bookmark_json>`\\ \\(data\\)"
msgstr ""

#: ../../../linkcheck/bookmarks/chromium.py:docstring of linkcheck.bookmarks.chromium.parse_bookmark_data:1:<autosummary>:1
#: ../../../linkcheck/bookmarks/chromium.py:docstring of linkcheck.bookmarks.chromium.parse_bookmark_json:1
msgid "Parse complete JSON data for Chromium Bookmarks."
msgstr ""

#: ../../../linkcheck/bookmarks/chromium.py:docstring of linkcheck.bookmarks.chromium.parse_bookmark_data:1:<autosummary>:1
msgid ":obj:`parse_bookmark_node <linkcheck.bookmarks.chromium.parse_bookmark_node>`\\ \\(node\\)"
msgstr ""

#: ../../../linkcheck/bookmarks/chromium.py:docstring of linkcheck.bookmarks.chromium.parse_bookmark_data:1:<autosummary>:1
#: ../../../linkcheck/bookmarks/chromium.py:docstring of linkcheck.bookmarks.chromium.parse_bookmark_node:1
msgid "Parse one JSON node of Chromium Bookmarks."
msgstr ""

#: ../../../linkcheck/bookmarks/chromium.py:docstring of linkcheck.bookmarks.chromium.parse_bookmark_data:1
msgid "Parse data string. Return iterator for bookmarks of the form (url, name). Bookmarks are not sorted."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.bookmarks.firefox.rst:2
msgid "linkcheck.bookmarks.firefox"
msgstr ""

#: ../../../linkcheck/bookmarks/firefox.py:docstring of linkcheck.bookmarks.firefox.parse_bookmark_file:1:<autosummary>:1
msgid ":obj:`parse_bookmark_file <linkcheck.bookmarks.firefox.parse_bookmark_file>`\\ \\(filename\\)"
msgstr ""

#: ../../../linkcheck/bookmarks/firefox.py:docstring of linkcheck.bookmarks.firefox.parse_bookmark_file:1:<autosummary>:1
#: ../../../linkcheck/bookmarks/safari.py:docstring of linkcheck.bookmarks.safari.get_plist_data_from_string:1:<autosummary>:1
msgid "Return iterator for bookmarks of the form (url, name)."
msgstr ""

#: ../../../linkcheck/bookmarks/firefox.py:docstring of linkcheck.bookmarks.firefox.parse_bookmark_file:1
msgid "Return iterator for bookmarks of the form (url, name). Bookmarks are not sorted. Returns None if sqlite3 module is not installed."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.bookmarks.opera.rst:2
msgid "linkcheck.bookmarks.opera"
msgstr ""

#: ../../../linkcheck/bookmarks/opera.py:docstring of linkcheck.bookmarks.opera.parse_bookmark_data:1:<autosummary>:1
msgid ":obj:`parse_bookmark_data <linkcheck.bookmarks.opera.parse_bookmark_data>`\\ \\(data\\)"
msgstr ""

#: ../../../linkcheck/bookmarks/opera.py:docstring of linkcheck.bookmarks.opera.parse_bookmark_data:1:<autosummary>:1
msgid "Return iterator for bookmarks of the form (url, name, line number)."
msgstr ""

#: ../../../linkcheck/bookmarks/opera.py:docstring of linkcheck.bookmarks.opera.parse_bookmark_data:1
msgid "Return iterator for bookmarks of the form (url, name, line number). Bookmarks are not sorted."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.bookmarks.safari.rst:2
msgid "linkcheck.bookmarks.safari"
msgstr ""

#: ../../../linkcheck/bookmarks/safari.py:docstring of linkcheck.bookmarks.safari.get_plist_data_from_string:1:<autosummary>:1
msgid ":obj:`get_plist_data_from_string <linkcheck.bookmarks.safari.get_plist_data_from_string>`\\ \\(data\\)"
msgstr ""

#: ../../../linkcheck/bookmarks/safari.py:docstring of linkcheck.bookmarks.safari.get_plist_data_from_string:1:<autosummary>:1
msgid "Parse plist data for a string."
msgstr ""

#: ../../../linkcheck/bookmarks/safari.py:docstring of linkcheck.bookmarks.safari.get_plist_data_from_string:1:<autosummary>:1
msgid ":obj:`has_children <linkcheck.bookmarks.safari.has_children>`\\ \\(entry\\)"
msgstr ""

#: ../../../linkcheck/bookmarks/safari.py:docstring of linkcheck.bookmarks.safari.get_plist_data_from_string:1:<autosummary>:1
#: ../../../linkcheck/bookmarks/safari.py:docstring of linkcheck.bookmarks.safari.has_children:1
msgid "Return true if plist entry has children."
msgstr ""

#: ../../../linkcheck/bookmarks/safari.py:docstring of linkcheck.bookmarks.safari.get_plist_data_from_string:1:<autosummary>:1
msgid ":obj:`is_leaf <linkcheck.bookmarks.safari.is_leaf>`\\ \\(entry\\)"
msgstr ""

#: ../../../linkcheck/bookmarks/safari.py:docstring of linkcheck.bookmarks.safari.get_plist_data_from_string:1:<autosummary>:1
#: ../../../linkcheck/bookmarks/safari.py:docstring of linkcheck.bookmarks.safari.is_leaf:1
msgid "Return true if plist entry is an URL entry."
msgstr ""

#: ../../../linkcheck/bookmarks/safari.py:docstring of linkcheck.bookmarks.safari.get_plist_data_from_string:1:<autosummary>:1
msgid ":obj:`parse_bookmark_data <linkcheck.bookmarks.safari.parse_bookmark_data>`\\ \\(data\\)"
msgstr ""

#: ../../../linkcheck/bookmarks/safari.py:docstring of linkcheck.bookmarks.safari.get_plist_data_from_string:1:<autosummary>:1
msgid ":obj:`parse_plist <linkcheck.bookmarks.safari.parse_plist>`\\ \\(entry\\)"
msgstr ""

#: ../../../linkcheck/bookmarks/safari.py:docstring of linkcheck.bookmarks.safari.get_plist_data_from_string:1:<autosummary>:1
#: ../../../linkcheck/bookmarks/safari.py:docstring of linkcheck.bookmarks.safari.parse_plist:1
msgid "Parse a XML dictionary entry."
msgstr ""

#: ../../../linkcheck/bookmarks/safari.py:docstring of linkcheck.bookmarks.safari.get_plist_data_from_string:1
msgid "Parse plist data for a string. Tries biplist, falling back to plistlib."
msgstr ""

#: ../../../linkcheck/bookmarks/safari.py:docstring of linkcheck.bookmarks.safari.parse_bookmark_data:1
msgid "Return iterator for bookmarks of the form (url, name). Bookmarks are not sorted."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cache.rst:2
msgid "linkcheck.cache"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cache.rst:33:<autosummary>:1
msgid ":obj:`linkcheck.cache.results <linkcheck.cache.results>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cache.rst:33:<autosummary>:1
#: ../../../linkcheck/cache/results.py:docstring of linkcheck.cache.results:1
msgid "Cache check results."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cache.rst:33:<autosummary>:1
msgid ":obj:`linkcheck.cache.robots_txt <linkcheck.cache.robots_txt>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cache.rst:33:<autosummary>:1
#: ../../../linkcheck/cache/robots_txt.py:docstring of linkcheck.cache.robots_txt:1
msgid "Cache robots.txt contents."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cache.rst:33:<autosummary>:1
msgid ":obj:`linkcheck.cache.urlqueue <linkcheck.cache.urlqueue>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cache.rst:33:<autosummary>:1
#: ../../../linkcheck/cache/urlqueue.py:docstring of linkcheck.cache.urlqueue:1
msgid "Handle a queue of URLs to check."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cache.results.rst:2
msgid "linkcheck.cache.results"
msgstr ""

#: ../../../linkcheck/cache/results.py:docstring of linkcheck.cache.results.ResultCache:1:<autosummary>:1
msgid ":obj:`ResultCache <linkcheck.cache.results.ResultCache>`\\ \\(\\[max\\_size\\]\\)"
msgstr ""

#: ../../../linkcheck/cache/results.py:docstring of linkcheck.cache.results.ResultCache:1:<autosummary>:1
msgid "Thread-safe cache of UrlData.to_wire() results."
msgstr ""

#: ../../../linkcheck/cache/results.py:docstring of linkcheck.cache.results.ResultCache:1
msgid "Thread-safe cache of UrlData.to_wire() results. the cache is limited in size since we rather recheck the same URL multiple times instead of running out of memory. format: {cache key (string) -> result (UrlData.towire())}"
msgstr ""

#: ../../../linkcheck/cache/results.py:docstring of linkcheck.cache.results.ResultCache:6
msgid "Initialize result cache."
msgstr ""

#: ../../../linkcheck/cache/results.py:docstring of linkcheck.cache.results.ResultCache.add_result:1
msgid "Add result object to cache with given key. The request is ignored when the cache is already full or the key is None."
msgstr ""

#: ../../../linkcheck/cache/results.py:docstring of linkcheck.cache.results.ResultCache.get_result:1
msgid "Return cached result or None if not found."
msgstr ""

#: ../../../linkcheck/cache/results.py:docstring of linkcheck.cache.results.ResultCache.has_non_empty_result:1
#: ../../../linkcheck/cache/results.py:docstring of linkcheck.cache.results.ResultCache.has_result:1
msgid "Non-thread-safe function for fast containment checks."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cache.robots_txt.rst:2
msgid "linkcheck.cache.robots\\_txt"
msgstr ""

#: ../../../linkcheck/cache/robots_txt.py:docstring of linkcheck.cache.robots_txt.RobotsTxt:1:<autosummary>:1
msgid ":obj:`RobotsTxt <linkcheck.cache.robots_txt.RobotsTxt>`\\ \\(useragent\\)"
msgstr ""

#: ../../../linkcheck/cache/robots_txt.py:docstring of linkcheck.cache.robots_txt.RobotsTxt:1:<autosummary>:1
msgid "Thread-safe cache of downloaded robots.txt files."
msgstr ""

#: ../../../linkcheck/cache/robots_txt.py:docstring of linkcheck.cache.robots_txt.RobotsTxt:1
msgid "Thread-safe cache of downloaded robots.txt files. format: {cache key (string) -> robots.txt content (RobotFileParser)}"
msgstr ""

#: ../../../linkcheck/cache/robots_txt.py:docstring of linkcheck.cache.robots_txt.RobotsTxt:4
msgid "Initialize per-URL robots.txt cache."
msgstr ""

#: ../../../linkcheck/cache/robots_txt.py:docstring of linkcheck.cache.robots_txt.RobotsTxt.add_sitemap_urls:1
msgid "Add sitemap URLs to queue."
msgstr ""

#: ../../../linkcheck/cache/robots_txt.py:docstring of linkcheck.cache.robots_txt.RobotsTxt.allows_url:1
msgid "Ask robots.txt allowance."
msgstr ""

#: ../../../linkcheck/cache/robots_txt.py:docstring of linkcheck.cache.robots_txt.RobotsTxt.get_lock:1
msgid "Return lock for robots.txt url."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cache.urlqueue.rst:2
msgid "linkcheck.cache.urlqueue"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cache.urlqueue.rst:25:<autosummary>:1
msgid ":obj:`UrlQueue <linkcheck.cache.urlqueue.UrlQueue>`\\ \\(\\[max\\_allowed\\_urls\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cache.urlqueue.rst:25:<autosummary>:1
msgid "A queue supporting several consumer tasks."
msgstr ""

#: ../../../linkcheck/cache/urlqueue.py:docstring of linkcheck.cache.urlqueue.Empty:1:<autosummary>:1
msgid ":obj:`Empty <linkcheck.cache.urlqueue.Empty>`\\"
msgstr ""

#: ../../../linkcheck/cache/urlqueue.py:docstring of linkcheck.cache.urlqueue.Empty:1:<autosummary>:1
#: ../../../linkcheck/cache/urlqueue.py:docstring of linkcheck.cache.urlqueue.Empty:1
msgid "Exception raised by get()."
msgstr ""

#: ../../../linkcheck/cache/urlqueue.py:docstring of linkcheck.cache.urlqueue.Empty:1:<autosummary>:1
msgid ":obj:`Timeout <linkcheck.cache.urlqueue.Timeout>`\\"
msgstr ""

#: ../../../linkcheck/cache/urlqueue.py:docstring of linkcheck.cache.urlqueue.Empty:1:<autosummary>:1
#: ../../../linkcheck/cache/urlqueue.py:docstring of linkcheck.cache.urlqueue.Timeout:1
msgid "Raised by join()"
msgstr ""

#: ../../../linkcheck/cache/urlqueue.py:docstring of linkcheck.cache.urlqueue.UrlQueue:1
msgid "A queue supporting several consumer tasks. The task_done() idea is from the Python 2.5 implementation of Queue.Queue()."
msgstr ""

#: ../../../linkcheck/cache/urlqueue.py:docstring of linkcheck.cache.urlqueue.UrlQueue:4
msgid "Initialize the queue state and task counters."
msgstr ""

#: ../../../linkcheck/cache/urlqueue.py:docstring of linkcheck.cache.urlqueue.UrlQueue.cleanup:1
msgid "Move cached elements to top."
msgstr ""

#: ../../../linkcheck/cache/urlqueue.py:docstring of linkcheck.cache.urlqueue.UrlQueue.do_shutdown:1
msgid "Shutdown the queue by not accepting any more URLs."
msgstr ""

#: ../../../linkcheck/cache/urlqueue.py:docstring of linkcheck.cache.urlqueue.UrlQueue.empty:1
msgid "Return True if the queue is empty, False otherwise. Result is thread-safe, but not reliable since the queue could have been changed before the result is returned!"
msgstr ""

#: ../../../linkcheck/cache/urlqueue.py:docstring of linkcheck.cache.urlqueue.UrlQueue.get:1
msgid "Get first not-in-progress url from the queue and return it. If no such url is available return None."
msgstr ""

#: ../../../linkcheck/cache/urlqueue.py:docstring of linkcheck.cache.urlqueue.UrlQueue.join:1
msgid "Blocks until all items in the Queue have been gotten and processed."
msgstr ""

#: ../../../linkcheck/cache/urlqueue.py:docstring of linkcheck.cache.urlqueue.UrlQueue.join:3
msgid "The count of unfinished tasks goes up whenever an item is added to the queue. The count goes down whenever a consumer thread calls task_done() to indicate the item was retrieved and all work on it is complete."
msgstr ""

#: ../../../linkcheck/cache/urlqueue.py:docstring of linkcheck.cache.urlqueue.UrlQueue.join:7
msgid "When the count of unfinished tasks drops to zero, join() unblocks."
msgstr ""

#: ../../../linkcheck/cache/urlqueue.py:docstring of linkcheck.cache.urlqueue.UrlQueue.put:1
msgid "Put an item into the queue. Block if necessary until a free slot is available."
msgstr ""

#: ../../../linkcheck/cache/urlqueue.py:docstring of linkcheck.cache.urlqueue.UrlQueue.qsize:1
msgid "Return the approximate size of the queue (not reliable!)."
msgstr ""

#: ../../../linkcheck/cache/urlqueue.py:docstring of linkcheck.cache.urlqueue.UrlQueue.status:1
msgid "Get tuple (finished tasks, in progress, queue size)."
msgstr ""

#: ../../../linkcheck/cache/urlqueue.py:docstring of linkcheck.cache.urlqueue.UrlQueue.task_done:1
msgid "Indicate that a formerly enqueued task is complete."
msgstr ""

#: ../../../linkcheck/cache/urlqueue.py:docstring of linkcheck.cache.urlqueue.UrlQueue.task_done:3
msgid "Used by Queue consumer threads.  For each get() used to fetch a task, a subsequent call to task_done() tells the queue that the processing on the task is complete."
msgstr ""

#: ../../../linkcheck/cache/urlqueue.py:docstring of linkcheck.cache.urlqueue.UrlQueue.task_done:7
msgid "If a join() is currently blocking, it will resume when all items have been processed (meaning that a task_done() call was received for every item that had been put() into the queue)."
msgstr ""

#: ../../../linkcheck/cache/urlqueue.py:docstring of linkcheck.cache.urlqueue.UrlQueue.task_done:11
msgid "Raises a ValueError if called more times than there were items placed in the queue."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:2
msgid "linkcheck.checker"
msgstr ""

#: ../../../linkcheck/checker/__init__.py:docstring of linkcheck.checker.absolute_url:1:<autosummary>:1
msgid ":obj:`absolute_url <linkcheck.checker.absolute_url>`\\ \\(base\\_url\\, base\\_ref\\, parent\\_url\\)"
msgstr ""

#: ../../../linkcheck/checker/__init__.py:docstring of linkcheck.checker.absolute_url:1:<autosummary>:1
msgid "Search for the absolute url to detect the link type."
msgstr ""

#: ../../../linkcheck/checker/__init__.py:docstring of linkcheck.checker.absolute_url:1:<autosummary>:1
msgid ":obj:`get_index_html <linkcheck.checker.get_index_html>`\\ \\(urls\\)"
msgstr ""

#: ../../../linkcheck/checker/__init__.py:docstring of linkcheck.checker.absolute_url:1:<autosummary>:1
#: ../../../linkcheck/checker/__init__.py:docstring of linkcheck.checker.get_index_html:1
msgid "Construct artificial index.html from given URLs."
msgstr ""

#: ../../../linkcheck/checker/__init__.py:docstring of linkcheck.checker.absolute_url:1:<autosummary>:1
msgid ":obj:`get_url_from <linkcheck.checker.get_url_from>`\\ \\(base\\_url\\, recursion\\_level\\, ...\\)"
msgstr ""

#: ../../../linkcheck/checker/__init__.py:docstring of linkcheck.checker.absolute_url:1:<autosummary>:1
#: ../../../linkcheck/checker/__init__.py:docstring of linkcheck.checker.get_url_from:1
msgid "Get url data from given base data."
msgstr ""

#: ../../../linkcheck/checker/__init__.py:docstring of linkcheck.checker.absolute_url:1:<autosummary>:1
msgid ":obj:`get_urlclass_from <linkcheck.checker.get_urlclass_from>`\\ \\(scheme\\[\\, assume\\_local\\_file\\]\\)"
msgstr ""

#: ../../../linkcheck/checker/__init__.py:docstring of linkcheck.checker.absolute_url:1:<autosummary>:1
msgid "Return checker class for given URL scheme."
msgstr ""

#: ../../../linkcheck/checker/__init__.py:docstring of linkcheck.checker.absolute_url:1:<autosummary>:1
msgid ":obj:`guess_url <linkcheck.checker.guess_url>`\\ \\(url\\)"
msgstr ""

#: ../../../linkcheck/checker/__init__.py:docstring of linkcheck.checker.absolute_url:1:<autosummary>:1
#: ../../../linkcheck/checker/__init__.py:docstring of linkcheck.checker.guess_url:1
msgid "Guess if URL is a http or ftp URL."
msgstr ""

#: ../../../linkcheck/checker/__init__.py:docstring of linkcheck.checker.absolute_url:1
msgid "Search for the absolute url to detect the link type. This does not join any url fragments together!"
msgstr ""

#: ../../../linkcheck/checker/__init__.py:docstring of linkcheck.checker.absolute_url:4
#: ../../../linkcheck/checker/__init__.py:docstring of linkcheck.checker.get_url_from:3
msgid "base url from a link tag"
msgstr ""

#: ../../../linkcheck/checker/__init__.py:docstring of linkcheck.checker.absolute_url:6
#: ../../../linkcheck/checker/__init__.py:docstring of linkcheck.checker.get_url_from:11
msgid "base url from <base> tag"
msgstr ""

#: ../../../linkcheck/checker/__init__.py:docstring of linkcheck.checker.absolute_url:8
msgid "url of parent document"
msgstr ""

#: ../../../linkcheck/checker/__init__.py:docstring of linkcheck.checker.get_index_html:3
msgid "URL strings"
msgstr ""

#: ../../../linkcheck/checker/__init__.py:docstring of linkcheck.checker.get_url_from:5
msgid "current recursion level"
msgstr ""

#: ../../../linkcheck/checker/__init__.py:docstring of linkcheck.checker.get_url_from:7
msgid "aggregate object"
msgstr ""

#: ../../../linkcheck/checker/__init__.py:docstring of linkcheck.checker.get_url_from:9
msgid "parent url"
msgstr ""

#: ../../../linkcheck/checker/__init__.py:docstring of linkcheck.checker.get_url_from:13
msgid "line number"
msgstr ""

#: ../../../linkcheck/checker/__init__.py:docstring of linkcheck.checker.get_url_from:15
msgid "column number"
msgstr ""

#: ../../../linkcheck/checker/__init__.py:docstring of linkcheck.checker.get_url_from:17
msgid "page number"
msgstr ""

#: ../../../linkcheck/checker/__init__.py:docstring of linkcheck.checker.get_url_from:19
msgid "link name"
msgstr ""

#: ../../../linkcheck/checker/__init__.py:docstring of linkcheck.checker.get_url_from:21
msgid "(is_extern, is_strict) or None"
msgstr ""

#: ../../../linkcheck/checker/__init__.py:docstring of linkcheck.checker.get_urlclass_from:1
msgid "Return checker class for given URL scheme. If the scheme cannot be matched and assume_local_file is True, assume a local file."
msgstr ""

#: ../../../linkcheck/checker/__init__.py:docstring of linkcheck.checker.guess_url:3
msgid "the URL to check"
msgstr ""

#: ../../../linkcheck/checker/__init__.py:docstring of linkcheck.checker.guess_url:5
msgid "url with http:// or ftp:// prepended if it's detected as a http respective ftp URL."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.checker.const <linkcheck.checker.const>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
#: ../../../linkcheck/checker/const.py:docstring of linkcheck.checker.const:1
msgid "Helper constants."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.checker.dnsurl <linkcheck.checker.dnsurl>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
#: ../../../linkcheck/checker/dnsurl.py:docstring of linkcheck.checker.dnsurl:1
msgid "Handler for dns: links."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.checker.fileurl <linkcheck.checker.fileurl>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl:1
msgid "Handle local file: links."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.checker.ftpurl <linkcheck.checker.ftpurl>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
#: ../../../linkcheck/checker/ftpurl.py:docstring of linkcheck.checker.ftpurl:1
msgid "Handle FTP links."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.checker.httpurl <linkcheck.checker.httpurl>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl:1
msgid "Handle http links."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.checker.ignoreurl <linkcheck.checker.ignoreurl>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
#: ../../../linkcheck/checker/ignoreurl.py:docstring of linkcheck.checker.ignoreurl:1
msgid "Handle ignored URLs."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.checker.internpaturl <linkcheck.checker.internpaturl>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
#: ../../../linkcheck/checker/internpaturl.py:docstring of linkcheck.checker.internpaturl:1
msgid "Intern URL pattern support."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.checker.itmsservicesurl <linkcheck.checker.itmsservicesurl>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
#: ../../../linkcheck/checker/itmsservicesurl.py:docstring of linkcheck.checker.itmsservicesurl:1
msgid "Handle itms-services URLs."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.checker.mailtourl <linkcheck.checker.mailtourl>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
#: ../../../linkcheck/checker/mailtourl.py:docstring of linkcheck.checker.mailtourl:1
msgid "Handler for mailto: links."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.checker.nntpurl <linkcheck.checker.nntpurl>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
#: ../../../linkcheck/checker/nntpurl.py:docstring of linkcheck.checker.nntpurl:1
msgid "Handle nntp: and news: links."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.checker.proxysupport <linkcheck.checker.proxysupport>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
#: ../../../linkcheck/checker/proxysupport.py:docstring of linkcheck.checker.proxysupport:1
msgid "Mixin class for URLs that can be fetched over a proxy."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.checker.telneturl <linkcheck.checker.telneturl>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
#: ../../../linkcheck/checker/telneturl.py:docstring of linkcheck.checker.telneturl:1
msgid "Handle telnet: links."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.checker.unknownurl <linkcheck.checker.unknownurl>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
#: ../../../linkcheck/checker/unknownurl.py:docstring of linkcheck.checker.unknownurl:1
msgid "Handle uncheckable URLs."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.checker.urlbase <linkcheck.checker.urlbase>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.rst:54:<autosummary>:1
#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase:1
msgid "Base URL handler."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.const.rst:2
msgid "linkcheck.checker.const"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.dnsurl.rst:2
msgid "linkcheck.checker.dnsurl"
msgstr ""

#: ../../../linkcheck/checker/dnsurl.py:docstring of linkcheck.checker.dnsurl.DnsUrl:1:<autosummary>:1
msgid ":obj:`DnsUrl <linkcheck.checker.dnsurl.DnsUrl>`\\ \\(base\\_url\\, recursion\\_level\\, aggregate\\)"
msgstr ""

#: ../../../linkcheck/checker/dnsurl.py:docstring of linkcheck.checker.dnsurl.DnsUrl:1:<autosummary>:1
#: ../../../linkcheck/checker/dnsurl.py:docstring of linkcheck.checker.dnsurl.DnsUrl:1
msgid "Url link with dns scheme."
msgstr ""

#: ../../../linkcheck/checker/dnsurl.py:docstring of linkcheck.checker.dnsurl.DnsUrl:1
#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.FileUrl:1
#: ../../../linkcheck/checker/internpaturl.py:docstring of linkcheck.checker.internpaturl.InternPatternUrl:1
#: ../../../linkcheck/checker/itmsservicesurl.py:docstring of linkcheck.checker.itmsservicesurl.ItmsServicesUrl:1
#: ../../../linkcheck/checker/mailtourl.py:docstring of linkcheck.checker.mailtourl.MailtoUrl:1
#: ../../../linkcheck/checker/nntpurl.py:docstring of linkcheck.checker.nntpurl.NntpUrl:1
#: ../../../linkcheck/checker/telneturl.py:docstring of linkcheck.checker.telneturl.TelnetUrl:1
#: ../../../linkcheck/checker/unknownurl.py:docstring of linkcheck.checker.unknownurl.UnknownUrl:1
msgid "Bases: :class:`linkcheck.checker.urlbase.UrlBase`"
msgstr ""

#: ../../../linkcheck/checker/dnsurl.py:docstring of linkcheck.checker.dnsurl.DnsUrl:3
#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.FileUrl:3
#: ../../../linkcheck/checker/ftpurl.py:docstring of linkcheck.checker.ftpurl.FtpUrl:3
#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl:3
#: ../../../linkcheck/checker/ignoreurl.py:docstring of linkcheck.checker.ignoreurl.IgnoreUrl:3
#: ../../../linkcheck/checker/internpaturl.py:docstring of linkcheck.checker.internpaturl.InternPatternUrl:3
#: ../../../linkcheck/checker/itmsservicesurl.py:docstring of linkcheck.checker.itmsservicesurl.ItmsServicesUrl:3
#: ../../../linkcheck/checker/mailtourl.py:docstring of linkcheck.checker.mailtourl.MailtoUrl:3
#: ../../../linkcheck/checker/nntpurl.py:docstring of linkcheck.checker.nntpurl.NntpUrl:3
#: ../../../linkcheck/checker/telneturl.py:docstring of linkcheck.checker.telneturl.TelnetUrl:3
#: ../../../linkcheck/checker/unknownurl.py:docstring of linkcheck.checker.unknownurl.UnknownUrl:3
#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase:3
msgid "Initialize check data, and store given variables."
msgstr ""

#: ../../../linkcheck/checker/dnsurl.py:docstring of linkcheck.checker.dnsurl.DnsUrl:5
#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.FileUrl:5
#: ../../../linkcheck/checker/ftpurl.py:docstring of linkcheck.checker.ftpurl.FtpUrl:5
#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl:5
#: ../../../linkcheck/checker/ignoreurl.py:docstring of linkcheck.checker.ignoreurl.IgnoreUrl:5
#: ../../../linkcheck/checker/internpaturl.py:docstring of linkcheck.checker.internpaturl.InternPatternUrl:5
#: ../../../linkcheck/checker/itmsservicesurl.py:docstring of linkcheck.checker.itmsservicesurl.ItmsServicesUrl:5
#: ../../../linkcheck/checker/mailtourl.py:docstring of linkcheck.checker.mailtourl.MailtoUrl:5
#: ../../../linkcheck/checker/nntpurl.py:docstring of linkcheck.checker.nntpurl.NntpUrl:5
#: ../../../linkcheck/checker/telneturl.py:docstring of linkcheck.checker.telneturl.TelnetUrl:5
#: ../../../linkcheck/checker/unknownurl.py:docstring of linkcheck.checker.unknownurl.UnknownUrl:5
#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase:5
msgid "unquoted and possibly unnormed url"
msgstr ""

#: ../../../linkcheck/checker/dnsurl.py:docstring of linkcheck.checker.dnsurl.DnsUrl:6
#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.FileUrl:6
#: ../../../linkcheck/checker/ftpurl.py:docstring of linkcheck.checker.ftpurl.FtpUrl:6
#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl:6
#: ../../../linkcheck/checker/ignoreurl.py:docstring of linkcheck.checker.ignoreurl.IgnoreUrl:6
#: ../../../linkcheck/checker/internpaturl.py:docstring of linkcheck.checker.internpaturl.InternPatternUrl:6
#: ../../../linkcheck/checker/itmsservicesurl.py:docstring of linkcheck.checker.itmsservicesurl.ItmsServicesUrl:6
#: ../../../linkcheck/checker/mailtourl.py:docstring of linkcheck.checker.mailtourl.MailtoUrl:6
#: ../../../linkcheck/checker/nntpurl.py:docstring of linkcheck.checker.nntpurl.NntpUrl:6
#: ../../../linkcheck/checker/telneturl.py:docstring of linkcheck.checker.telneturl.TelnetUrl:6
#: ../../../linkcheck/checker/unknownurl.py:docstring of linkcheck.checker.unknownurl.UnknownUrl:6
#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase:6
msgid "on what check level lies the base url"
msgstr ""

#: ../../../linkcheck/checker/dnsurl.py:docstring of linkcheck.checker.dnsurl.DnsUrl:7
#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.FileUrl:7
#: ../../../linkcheck/checker/ftpurl.py:docstring of linkcheck.checker.ftpurl.FtpUrl:7
#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl:7
#: ../../../linkcheck/checker/ignoreurl.py:docstring of linkcheck.checker.ignoreurl.IgnoreUrl:7
#: ../../../linkcheck/checker/internpaturl.py:docstring of linkcheck.checker.internpaturl.InternPatternUrl:7
#: ../../../linkcheck/checker/itmsservicesurl.py:docstring of linkcheck.checker.itmsservicesurl.ItmsServicesUrl:7
#: ../../../linkcheck/checker/mailtourl.py:docstring of linkcheck.checker.mailtourl.MailtoUrl:7
#: ../../../linkcheck/checker/nntpurl.py:docstring of linkcheck.checker.nntpurl.NntpUrl:7
#: ../../../linkcheck/checker/telneturl.py:docstring of linkcheck.checker.telneturl.TelnetUrl:7
#: ../../../linkcheck/checker/unknownurl.py:docstring of linkcheck.checker.unknownurl.UnknownUrl:7
#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase:7
msgid "aggregate instance"
msgstr ""

#: ../../../linkcheck/checker/dnsurl.py:docstring of linkcheck.checker.dnsurl.DnsUrl:8
#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.FileUrl:8
#: ../../../linkcheck/checker/ftpurl.py:docstring of linkcheck.checker.ftpurl.FtpUrl:8
#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl:8
#: ../../../linkcheck/checker/ignoreurl.py:docstring of linkcheck.checker.ignoreurl.IgnoreUrl:8
#: ../../../linkcheck/checker/internpaturl.py:docstring of linkcheck.checker.internpaturl.InternPatternUrl:8
#: ../../../linkcheck/checker/itmsservicesurl.py:docstring of linkcheck.checker.itmsservicesurl.ItmsServicesUrl:8
#: ../../../linkcheck/checker/mailtourl.py:docstring of linkcheck.checker.mailtourl.MailtoUrl:8
#: ../../../linkcheck/checker/nntpurl.py:docstring of linkcheck.checker.nntpurl.NntpUrl:8
#: ../../../linkcheck/checker/telneturl.py:docstring of linkcheck.checker.telneturl.TelnetUrl:8
#: ../../../linkcheck/checker/unknownurl.py:docstring of linkcheck.checker.unknownurl.UnknownUrl:8
#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase:8
msgid "quoted and normed url of parent or None"
msgstr ""

#: ../../../linkcheck/checker/dnsurl.py:docstring of linkcheck.checker.dnsurl.DnsUrl:9
#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.FileUrl:9
#: ../../../linkcheck/checker/ftpurl.py:docstring of linkcheck.checker.ftpurl.FtpUrl:9
#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl:9
#: ../../../linkcheck/checker/ignoreurl.py:docstring of linkcheck.checker.ignoreurl.IgnoreUrl:9
#: ../../../linkcheck/checker/internpaturl.py:docstring of linkcheck.checker.internpaturl.InternPatternUrl:9
#: ../../../linkcheck/checker/itmsservicesurl.py:docstring of linkcheck.checker.itmsservicesurl.ItmsServicesUrl:9
#: ../../../linkcheck/checker/mailtourl.py:docstring of linkcheck.checker.mailtourl.MailtoUrl:9
#: ../../../linkcheck/checker/nntpurl.py:docstring of linkcheck.checker.nntpurl.NntpUrl:9
#: ../../../linkcheck/checker/telneturl.py:docstring of linkcheck.checker.telneturl.TelnetUrl:9
#: ../../../linkcheck/checker/unknownurl.py:docstring of linkcheck.checker.unknownurl.UnknownUrl:9
#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase:9
msgid "quoted and normed url of <base href=\"\"> or None"
msgstr ""

#: ../../../linkcheck/checker/dnsurl.py:docstring of linkcheck.checker.dnsurl.DnsUrl:10
#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.FileUrl:10
#: ../../../linkcheck/checker/ftpurl.py:docstring of linkcheck.checker.ftpurl.FtpUrl:10
#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl:10
#: ../../../linkcheck/checker/ignoreurl.py:docstring of linkcheck.checker.ignoreurl.IgnoreUrl:10
#: ../../../linkcheck/checker/internpaturl.py:docstring of linkcheck.checker.internpaturl.InternPatternUrl:10
#: ../../../linkcheck/checker/itmsservicesurl.py:docstring of linkcheck.checker.itmsservicesurl.ItmsServicesUrl:10
#: ../../../linkcheck/checker/mailtourl.py:docstring of linkcheck.checker.mailtourl.MailtoUrl:10
#: ../../../linkcheck/checker/nntpurl.py:docstring of linkcheck.checker.nntpurl.NntpUrl:10
#: ../../../linkcheck/checker/telneturl.py:docstring of linkcheck.checker.telneturl.TelnetUrl:10
#: ../../../linkcheck/checker/unknownurl.py:docstring of linkcheck.checker.unknownurl.UnknownUrl:10
#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase:10
msgid "line number of url in parent content"
msgstr ""

#: ../../../linkcheck/checker/dnsurl.py:docstring of linkcheck.checker.dnsurl.DnsUrl:11
#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.FileUrl:11
#: ../../../linkcheck/checker/ftpurl.py:docstring of linkcheck.checker.ftpurl.FtpUrl:11
#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl:11
#: ../../../linkcheck/checker/ignoreurl.py:docstring of linkcheck.checker.ignoreurl.IgnoreUrl:11
#: ../../../linkcheck/checker/internpaturl.py:docstring of linkcheck.checker.internpaturl.InternPatternUrl:11
#: ../../../linkcheck/checker/itmsservicesurl.py:docstring of linkcheck.checker.itmsservicesurl.ItmsServicesUrl:11
#: ../../../linkcheck/checker/mailtourl.py:docstring of linkcheck.checker.mailtourl.MailtoUrl:11
#: ../../../linkcheck/checker/nntpurl.py:docstring of linkcheck.checker.nntpurl.NntpUrl:11
#: ../../../linkcheck/checker/telneturl.py:docstring of linkcheck.checker.telneturl.TelnetUrl:11
#: ../../../linkcheck/checker/unknownurl.py:docstring of linkcheck.checker.unknownurl.UnknownUrl:11
#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase:11
msgid "column number of url in parent content"
msgstr ""

#: ../../../linkcheck/checker/dnsurl.py:docstring of linkcheck.checker.dnsurl.DnsUrl:12
#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.FileUrl:12
#: ../../../linkcheck/checker/ftpurl.py:docstring of linkcheck.checker.ftpurl.FtpUrl:12
#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl:12
#: ../../../linkcheck/checker/ignoreurl.py:docstring of linkcheck.checker.ignoreurl.IgnoreUrl:12
#: ../../../linkcheck/checker/internpaturl.py:docstring of linkcheck.checker.internpaturl.InternPatternUrl:12
#: ../../../linkcheck/checker/itmsservicesurl.py:docstring of linkcheck.checker.itmsservicesurl.ItmsServicesUrl:12
#: ../../../linkcheck/checker/mailtourl.py:docstring of linkcheck.checker.mailtourl.MailtoUrl:12
#: ../../../linkcheck/checker/nntpurl.py:docstring of linkcheck.checker.nntpurl.NntpUrl:12
#: ../../../linkcheck/checker/telneturl.py:docstring of linkcheck.checker.telneturl.TelnetUrl:12
#: ../../../linkcheck/checker/unknownurl.py:docstring of linkcheck.checker.unknownurl.UnknownUrl:12
#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase:12
msgid "page number of url in parent content"
msgstr ""

#: ../../../linkcheck/checker/dnsurl.py:docstring of linkcheck.checker.dnsurl.DnsUrl:13
#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.FileUrl:13
#: ../../../linkcheck/checker/ftpurl.py:docstring of linkcheck.checker.ftpurl.FtpUrl:13
#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl:13
#: ../../../linkcheck/checker/ignoreurl.py:docstring of linkcheck.checker.ignoreurl.IgnoreUrl:13
#: ../../../linkcheck/checker/internpaturl.py:docstring of linkcheck.checker.internpaturl.InternPatternUrl:13
#: ../../../linkcheck/checker/itmsservicesurl.py:docstring of linkcheck.checker.itmsservicesurl.ItmsServicesUrl:13
#: ../../../linkcheck/checker/mailtourl.py:docstring of linkcheck.checker.mailtourl.MailtoUrl:13
#: ../../../linkcheck/checker/nntpurl.py:docstring of linkcheck.checker.nntpurl.NntpUrl:13
#: ../../../linkcheck/checker/telneturl.py:docstring of linkcheck.checker.telneturl.TelnetUrl:13
#: ../../../linkcheck/checker/unknownurl.py:docstring of linkcheck.checker.unknownurl.UnknownUrl:13
#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase:13
msgid "name of url or empty"
msgstr ""

#: ../../../linkcheck/checker/dnsurl.py:docstring of linkcheck.checker.dnsurl.DnsUrl:14
#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.FileUrl:14
#: ../../../linkcheck/checker/ftpurl.py:docstring of linkcheck.checker.ftpurl.FtpUrl:14
#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl:14
#: ../../../linkcheck/checker/ignoreurl.py:docstring of linkcheck.checker.ignoreurl.IgnoreUrl:14
#: ../../../linkcheck/checker/internpaturl.py:docstring of linkcheck.checker.internpaturl.InternPatternUrl:14
#: ../../../linkcheck/checker/itmsservicesurl.py:docstring of linkcheck.checker.itmsservicesurl.ItmsServicesUrl:14
#: ../../../linkcheck/checker/mailtourl.py:docstring of linkcheck.checker.mailtourl.MailtoUrl:14
#: ../../../linkcheck/checker/nntpurl.py:docstring of linkcheck.checker.nntpurl.NntpUrl:14
#: ../../../linkcheck/checker/telneturl.py:docstring of linkcheck.checker.telneturl.TelnetUrl:14
#: ../../../linkcheck/checker/unknownurl.py:docstring of linkcheck.checker.unknownurl.UnknownUrl:14
#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase:14
msgid "encoding of URL or None"
msgstr ""

#: ../../../linkcheck/checker/dnsurl.py:docstring of linkcheck.checker.dnsurl.DnsUrl:15
#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.FileUrl:15
#: ../../../linkcheck/checker/ftpurl.py:docstring of linkcheck.checker.ftpurl.FtpUrl:15
#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl:15
#: ../../../linkcheck/checker/ignoreurl.py:docstring of linkcheck.checker.ignoreurl.IgnoreUrl:15
#: ../../../linkcheck/checker/internpaturl.py:docstring of linkcheck.checker.internpaturl.InternPatternUrl:15
#: ../../../linkcheck/checker/itmsservicesurl.py:docstring of linkcheck.checker.itmsservicesurl.ItmsServicesUrl:15
#: ../../../linkcheck/checker/mailtourl.py:docstring of linkcheck.checker.mailtourl.MailtoUrl:15
#: ../../../linkcheck/checker/nntpurl.py:docstring of linkcheck.checker.nntpurl.NntpUrl:15
#: ../../../linkcheck/checker/telneturl.py:docstring of linkcheck.checker.telneturl.TelnetUrl:15
#: ../../../linkcheck/checker/unknownurl.py:docstring of linkcheck.checker.unknownurl.UnknownUrl:15
#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase:15
msgid "None or (is_extern, is_strict)"
msgstr ""

#: ../../../linkcheck/checker/dnsurl.py:docstring of linkcheck.checker.dnsurl.DnsUrl.can_get_content:1
msgid "dns: URLs do not have any content"
msgstr ""

#: ../../../linkcheck/checker/dnsurl.py:docstring of linkcheck.checker.dnsurl.DnsUrl.can_get_content:3
#: ../../../linkcheck/checker/mailtourl.py:docstring of linkcheck.checker.mailtourl.MailtoUrl.can_get_content:3
#: ../../../linkcheck/checker/nntpurl.py:docstring of linkcheck.checker.nntpurl.NntpUrl.can_get_content:3
#: ../../../linkcheck/checker/telneturl.py:docstring of linkcheck.checker.telneturl.TelnetUrl.can_get_content:3
#: ../../../linkcheck/checker/unknownurl.py:docstring of linkcheck.checker.unknownurl.UnknownUrl.can_get_content:3
msgid "False"
msgstr ""

#: ../../../linkcheck/checker/dnsurl.py:docstring of linkcheck.checker.dnsurl.DnsUrl.check_connection:1
msgid "Resolve hostname."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.fileurl.rst:2
msgid "linkcheck.checker.fileurl"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.fileurl.rst:25:<autosummary>:1
msgid ":obj:`get_files <linkcheck.checker.fileurl.get_files>`\\ \\(dirname\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.fileurl.rst:25:<autosummary>:1
msgid "Get iterator of entries in directory."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.fileurl.rst:25:<autosummary>:1
msgid ":obj:`get_nt_filename <linkcheck.checker.fileurl.get_nt_filename>`\\ \\(path\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.fileurl.rst:25:<autosummary>:1
#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.get_nt_filename:1
msgid "Return case sensitive filename for NT path."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.fileurl.rst:25:<autosummary>:1
msgid ":obj:`get_os_filename <linkcheck.checker.fileurl.get_os_filename>`\\ \\(path\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.fileurl.rst:25:<autosummary>:1
#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.get_os_filename:1
msgid "Return filesystem path for given URL path."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.fileurl.rst:25:<autosummary>:1
msgid ":obj:`is_absolute_path <linkcheck.checker.fileurl.is_absolute_path>`\\ \\(path\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.fileurl.rst:25:<autosummary>:1
msgid "Check if given path is absolute."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.fileurl.rst:25:<autosummary>:1
msgid ":obj:`prepare_urlpath_for_nt <linkcheck.checker.fileurl.prepare_urlpath_for_nt>`\\ \\(path\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.fileurl.rst:25:<autosummary>:1
msgid "URLs like 'file://server/path/' result in a path named '/server/path'."
msgstr ""

#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.FileUrl:1:<autosummary>:1
msgid ":obj:`FileUrl <linkcheck.checker.fileurl.FileUrl>`\\ \\(base\\_url\\, recursion\\_level\\, aggregate\\)"
msgstr ""

#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.FileUrl:1:<autosummary>:1
#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.FileUrl:1
msgid "Url link with file scheme."
msgstr ""

#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.FileUrl.add_size_info:1
msgid "Get size of file content and modification time from filename path."
msgstr ""

#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.FileUrl.add_url:1
msgid "If a local webroot directory is configured, replace absolute URLs with it. After that queue the URL data for checking."
msgstr ""

#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.FileUrl.build_base_url:1
msgid "The URL is normed according to the platform: - the base URL is made an absolute file:// URL - under Windows platform the drive specifier is normed"
msgstr ""

#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.FileUrl.build_url:1
msgid "Calls super.build_url() and adds a trailing slash to directories."
msgstr ""

#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.FileUrl.check_case_sensitivity:1
msgid "Check if url and windows path name match cases else there might be problems when copying such files on web servers that are case sensitive."
msgstr ""

#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.FileUrl.check_connection:1
msgid "Try to open the local file. Under NT systems the case sensitivity is checked."
msgstr ""

#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.FileUrl.get_intern_pattern:1
#: ../../../linkcheck/checker/internpaturl.py:docstring of linkcheck.checker.internpaturl.InternPatternUrl.get_intern_pattern:1
#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.get_intern_pattern:1
msgid "Get pattern for intern URL matching."
msgstr ""

#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.FileUrl.get_intern_pattern:3
#: ../../../linkcheck/checker/internpaturl.py:docstring of linkcheck.checker.internpaturl.InternPatternUrl.get_intern_pattern:3
msgid ":return non-empty regex pattern or None :rtype String or None"
msgstr ""

#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.FileUrl.get_os_filename:1
msgid "Construct os specific file path out of the file:// URL."
msgstr ""

#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.FileUrl.get_os_filename:3
msgid "file name"
msgstr ""

#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.FileUrl.get_temp_filename:1
msgid "Get filename for content to parse."
msgstr ""

#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.FileUrl.init:1
msgid "Initialize the scheme."
msgstr ""

#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.FileUrl.is_directory:1
msgid "Check if file is a directory."
msgstr ""

#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.FileUrl.is_directory:3
msgid "True iff file is a directory"
msgstr ""

#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.FileUrl.is_parseable:1
#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl.is_parseable:1
msgid "Check if content is parseable for recursion."
msgstr ""

#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.FileUrl.is_parseable:3
#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl.is_parseable:3
msgid "True if content is parseable"
msgstr ""

#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.FileUrl.read_content:1
msgid "Return file content, or in case of directories a dummy HTML file with links to the files."
msgstr ""

#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.FileUrl.set_content_type:1
msgid "Return URL content type, or an empty string if content type could not be found."
msgstr ""

#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.get_files:1
msgid "Get iterator of entries in directory. Only allows regular files and directories, no symlinks."
msgstr ""

#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.is_absolute_path:1
msgid "Check if given path is absolute. On Windows absolute paths start with a drive letter. On all other systems absolute paths start with a slash."
msgstr ""

#: ../../../linkcheck/checker/fileurl.py:docstring of linkcheck.checker.fileurl.prepare_urlpath_for_nt:1
msgid "URLs like 'file://server/path/' result in a path named '/server/path'. However urllib.url2pathname expects '////server/path'."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.ftpurl.rst:2
msgid "linkcheck.checker.ftpurl"
msgstr ""

#: ../../../linkcheck/checker/ftpurl.py:docstring of linkcheck.checker.ftpurl.FtpUrl:1:<autosummary>:1
msgid ":obj:`FtpUrl <linkcheck.checker.ftpurl.FtpUrl>`\\ \\(base\\_url\\, recursion\\_level\\, aggregate\\)"
msgstr ""

#: ../../../linkcheck/checker/ftpurl.py:docstring of linkcheck.checker.ftpurl.FtpUrl:1:<autosummary>:1
#: ../../../linkcheck/checker/ftpurl.py:docstring of linkcheck.checker.ftpurl.FtpUrl:1
msgid "Url link with ftp scheme."
msgstr ""

#: ../../../linkcheck/checker/ftpurl.py:docstring of linkcheck.checker.ftpurl.FtpUrl:1
#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl:1
msgid "Bases: :class:`linkcheck.checker.internpaturl.InternPatternUrl`, :class:`linkcheck.checker.proxysupport.ProxySupport`"
msgstr ""

#: ../../../linkcheck/checker/ftpurl.py:docstring of linkcheck.checker.ftpurl.FtpUrl.check_connection:1
msgid "In case of proxy, delegate to HttpUrl. Else check in this order: login, changing directory, list the file."
msgstr ""

#: ../../../linkcheck/checker/ftpurl.py:docstring of linkcheck.checker.ftpurl.FtpUrl.close_connection:1
msgid "Release the open connection from the connection pool."
msgstr ""

#: ../../../linkcheck/checker/ftpurl.py:docstring of linkcheck.checker.ftpurl.FtpUrl.cwd:1
msgid "Change to URL parent directory. Return filename of last path component."
msgstr ""

#: ../../../linkcheck/checker/ftpurl.py:docstring of linkcheck.checker.ftpurl.FtpUrl.get_files:1
msgid "Get list of filenames in directory. Subdirectories have an ending slash."
msgstr ""

#: ../../../linkcheck/checker/ftpurl.py:docstring of linkcheck.checker.ftpurl.FtpUrl.is_directory:1
msgid "See if URL target is a directory."
msgstr ""

#: ../../../linkcheck/checker/ftpurl.py:docstring of linkcheck.checker.ftpurl.FtpUrl.is_parseable:1
msgid "See if URL target is parseable for recursion."
msgstr ""

#: ../../../linkcheck/checker/ftpurl.py:docstring of linkcheck.checker.ftpurl.FtpUrl.listfile:1
msgid "See if filename is in the current FTP directory."
msgstr ""

#: ../../../linkcheck/checker/ftpurl.py:docstring of linkcheck.checker.ftpurl.FtpUrl.login:1
msgid "Log into ftp server and check the welcome message."
msgstr ""

#: ../../../linkcheck/checker/ftpurl.py:docstring of linkcheck.checker.ftpurl.FtpUrl.negotiate_encoding:1
msgid "Check if server can handle UTF-8 encoded filenames. See also RFC 2640."
msgstr ""

#: ../../../linkcheck/checker/ftpurl.py:docstring of linkcheck.checker.ftpurl.FtpUrl.read_content:1
msgid "Return URL target content, or in case of directories a dummy HTML file with links to the files."
msgstr ""

#: ../../../linkcheck/checker/ftpurl.py:docstring of linkcheck.checker.ftpurl.FtpUrl.reset:1
msgid "Initialize FTP url data."
msgstr ""

#: ../../../linkcheck/checker/ftpurl.py:docstring of linkcheck.checker.ftpurl.FtpUrl.set_content_type:1
msgid "Set URL content type, or an empty string if content type could not be found."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.httpurl.rst:2
msgid "linkcheck.checker.httpurl"
msgstr ""

#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl:1:<autosummary>:1
msgid ":obj:`HttpUrl <linkcheck.checker.httpurl.HttpUrl>`\\ \\(base\\_url\\, recursion\\_level\\, aggregate\\)"
msgstr ""

#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl:1:<autosummary>:1
#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl:1
msgid "Url link with http scheme."
msgstr ""

#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl.add_size_info:1
msgid "Get size of URL content from HTTP header."
msgstr ""

#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl.allows_robots:1
msgid "Fetch and parse the robots.txt of given url. Checks if LinkChecker can get the requested resource content."
msgstr ""

#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl.allows_robots:4
msgid "the url to be requested"
msgstr ""

#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl.allows_robots:6
msgid "True if access is granted, otherwise False"
msgstr ""

#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl.build_request:1
msgid "Build a prepared request object."
msgstr ""

#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl.check_connection:1
msgid "Check a URL with HTTP protocol. Here is an excerpt from RFC 1945 with common response codes: The first digit of the Status-Code defines the class of response. The last two digits do not have any categorization role. There are 5 values for the first digit:"
msgstr ""

#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl.check_connection:7
msgid "1xx: Informational - Not used, but reserved for future use"
msgstr ""

#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl.check_connection:8
msgid "2xx: Success - The action was successfully received, understood, and accepted"
msgstr ""

#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl.check_connection:10
msgid "3xx: Redirection - Further action must be taken in order to complete the request"
msgstr ""

#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl.check_connection:12
msgid "4xx: Client Error - The request contains bad syntax or cannot be fulfilled"
msgstr ""

#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl.check_connection:14
msgid "5xx: Server Error - The server failed to fulfill an apparently valid request"
msgstr ""

#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl.check_response:1
msgid "Check final result and log it."
msgstr ""

#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl.construct_auth:1
msgid "Construct HTTP Basic authentication credentials if there is user/password information available. Does not overwrite if credentials have already been constructed."
msgstr ""

#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl.content_allows_robots:1
msgid "Return False if the content of this URL forbids robots to search for recursive links."
msgstr ""

#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl.follow_redirections:1
msgid "Follow all redirections of http response."
msgstr ""

#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl.get_redirects:1
msgid "Return iterator of redirects for given request."
msgstr ""

#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl.get_request_kwargs:1
msgid "Construct keyword parameters for Session.request() and Session.resolve_redirects()."
msgstr ""

#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl.get_robots_txt_url:1
msgid "Get the according robots.txt URL for this URL."
msgstr ""

#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl.get_robots_txt_url:3
msgid "robots.txt URL"
msgstr ""

#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl.is_redirect:1
msgid "Check if current response is a redirect."
msgstr ""

#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl.parse_header_links:1
msgid "Parse URLs in HTTP headers Link:."
msgstr ""

#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl.read_content:1
msgid "Return data and data size for this URL. Can be overridden in subclasses."
msgstr ""

#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl.reset:1
msgid "Initialize HTTP specific variables."
msgstr ""

#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl.send_request:1
msgid "Send request and store response in self.url_connection."
msgstr ""

#: ../../../linkcheck/checker/httpurl.py:docstring of linkcheck.checker.httpurl.HttpUrl.set_content_type:1
msgid "Return content MIME type or empty string."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.ignoreurl.rst:2
msgid "linkcheck.checker.ignoreurl"
msgstr ""

#: ../../../linkcheck/checker/ignoreurl.py:docstring of linkcheck.checker.ignoreurl.IgnoreUrl:1:<autosummary>:1
msgid ":obj:`IgnoreUrl <linkcheck.checker.ignoreurl.IgnoreUrl>`\\ \\(base\\_url\\, recursion\\_level\\, aggregate\\)"
msgstr ""

#: ../../../linkcheck/checker/ignoreurl.py:docstring of linkcheck.checker.ignoreurl.IgnoreUrl:1:<autosummary>:1
#: ../../../linkcheck/checker/ignoreurl.py:docstring of linkcheck.checker.ignoreurl.IgnoreUrl:1
msgid "Always ignored URL."
msgstr ""

#: ../../../linkcheck/checker/ignoreurl.py:docstring of linkcheck.checker.ignoreurl.IgnoreUrl:1
msgid "Bases: :class:`linkcheck.checker.unknownurl.UnknownUrl`"
msgstr ""

#: ../../../linkcheck/checker/ignoreurl.py:docstring of linkcheck.checker.ignoreurl.IgnoreUrl.is_ignored:1
#: ../../../linkcheck/checker/unknownurl.py:docstring of linkcheck.checker.unknownurl.UnknownUrl.is_ignored:1
msgid "Return True if this URL scheme is ignored."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.internpaturl.rst:2
msgid "linkcheck.checker.internpaturl"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.internpaturl.rst:21:<autosummary>:1
msgid ":obj:`get_intern_pattern <linkcheck.checker.internpaturl.get_intern_pattern>`\\ \\(url\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.internpaturl.rst:21:<autosummary>:1
msgid "Return intern pattern for given URL."
msgstr ""

#: ../../../linkcheck/checker/internpaturl.py:docstring of linkcheck.checker.internpaturl.InternPatternUrl:1:<autosummary>:1
msgid ":obj:`InternPatternUrl <linkcheck.checker.internpaturl.InternPatternUrl>`\\ \\(base\\_url\\, recursion\\_level\\, ...\\)"
msgstr ""

#: ../../../linkcheck/checker/internpaturl.py:docstring of linkcheck.checker.internpaturl.InternPatternUrl:1:<autosummary>:1
#: ../../../linkcheck/checker/internpaturl.py:docstring of linkcheck.checker.internpaturl.InternPatternUrl:1
msgid "Class supporting an intern URL pattern."
msgstr ""

#: ../../../linkcheck/checker/internpaturl.py:docstring of linkcheck.checker.internpaturl.get_intern_pattern:1
msgid "Return intern pattern for given URL. Redirections to the same domain with or without \"www.\" prepended are allowed."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.itmsservicesurl.rst:2
msgid "linkcheck.checker.itmsservicesurl"
msgstr ""

#: ../../../linkcheck/checker/itmsservicesurl.py:docstring of linkcheck.checker.itmsservicesurl.ItmsServicesUrl:1:<autosummary>:1
msgid ":obj:`ItmsServicesUrl <linkcheck.checker.itmsservicesurl.ItmsServicesUrl>`\\ \\(base\\_url\\, recursion\\_level\\, ...\\)"
msgstr ""

#: ../../../linkcheck/checker/itmsservicesurl.py:docstring of linkcheck.checker.itmsservicesurl.ItmsServicesUrl:1:<autosummary>:1
#: ../../../linkcheck/checker/itmsservicesurl.py:docstring of linkcheck.checker.itmsservicesurl.ItmsServicesUrl:1
msgid "Apple iOS application download URLs."
msgstr ""

#: ../../../linkcheck/checker/itmsservicesurl.py:docstring of linkcheck.checker.itmsservicesurl.ItmsServicesUrl.check_content:1
msgid "Allow recursion to check the url CGI param."
msgstr ""

#: ../../../linkcheck/checker/itmsservicesurl.py:docstring of linkcheck.checker.itmsservicesurl.ItmsServicesUrl.check_syntax:1
#: ../../../linkcheck/checker/unknownurl.py:docstring of linkcheck.checker.unknownurl.UnknownUrl.build_url:1
msgid "Only logs that this URL is unknown."
msgstr ""

#: ../../../linkcheck/checker/itmsservicesurl.py:docstring of linkcheck.checker.itmsservicesurl.ItmsServicesUrl.is_parseable:1
msgid "This URL is parseable."
msgstr ""

#: ../../../linkcheck/checker/itmsservicesurl.py:docstring of linkcheck.checker.itmsservicesurl.ItmsServicesUrl.local_check:1
msgid "Disable content checks."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.mailtourl.rst:2
msgid "linkcheck.checker.mailtourl"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.mailtourl.rst:24:<autosummary>:1
msgid ":obj:`getaddresses <linkcheck.checker.mailtourl.getaddresses>`\\ \\(addr\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.mailtourl.rst:24:<autosummary>:1
#: ../../../linkcheck/checker/mailtourl.py:docstring of linkcheck.checker.mailtourl.getaddresses:1
msgid "Return list of email addresses from given field value."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.mailtourl.rst:24:<autosummary>:1
msgid ":obj:`is_literal <linkcheck.checker.mailtourl.is_literal>`\\ \\(domain\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.mailtourl.rst:24:<autosummary>:1
#: ../../../linkcheck/checker/mailtourl.py:docstring of linkcheck.checker.mailtourl.is_literal:1
msgid "Return True iff domain string is a literal."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.mailtourl.rst:24:<autosummary>:1
msgid ":obj:`is_missing_quote <linkcheck.checker.mailtourl.is_missing_quote>`\\ \\(addr\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.mailtourl.rst:24:<autosummary>:1
#: ../../../linkcheck/checker/mailtourl.py:docstring of linkcheck.checker.mailtourl.is_missing_quote:1
msgid "Return True iff mail address is not correctly quoted."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.mailtourl.rst:24:<autosummary>:1
msgid ":obj:`is_quoted <linkcheck.checker.mailtourl.is_quoted>`\\ \\(addr\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.mailtourl.rst:24:<autosummary>:1
#: ../../../linkcheck/checker/mailtourl.py:docstring of linkcheck.checker.mailtourl.is_quoted:1
msgid "Return True iff mail address string is quoted."
msgstr ""

#: ../../../linkcheck/checker/mailtourl.py:docstring of linkcheck.checker.mailtourl.MailtoUrl:1:<autosummary>:1
msgid ":obj:`MailtoUrl <linkcheck.checker.mailtourl.MailtoUrl>`\\ \\(base\\_url\\, recursion\\_level\\, aggregate\\)"
msgstr ""

#: ../../../linkcheck/checker/mailtourl.py:docstring of linkcheck.checker.mailtourl.MailtoUrl:1:<autosummary>:1
#: ../../../linkcheck/checker/mailtourl.py:docstring of linkcheck.checker.mailtourl.MailtoUrl:1
msgid "Url link with mailto scheme."
msgstr ""

#: ../../../linkcheck/checker/mailtourl.py:docstring of linkcheck.checker.mailtourl.MailtoUrl.build_url:1
msgid "Call super.build_url(), extract list of mail addresses from URL, and check their syntax."
msgstr ""

#: ../../../linkcheck/checker/mailtourl.py:docstring of linkcheck.checker.mailtourl.MailtoUrl.can_get_content:1
msgid "mailto: URLs do not have any content"
msgstr ""

#: ../../../linkcheck/checker/mailtourl.py:docstring of linkcheck.checker.mailtourl.MailtoUrl.check_connection:1
msgid "Verify a list of email addresses. If one address fails, the whole list will fail."
msgstr ""

#: ../../../linkcheck/checker/mailtourl.py:docstring of linkcheck.checker.mailtourl.MailtoUrl.check_connection:4
msgid "For each mail address the MX DNS records are found. If no MX records are found, print a warning and try to look for A DNS records. If no A records are found either print an error."
msgstr ""

#: ../../../linkcheck/checker/mailtourl.py:docstring of linkcheck.checker.mailtourl.MailtoUrl.check_email_syntax:1
msgid "Check email syntax. The relevant RFCs:"
msgstr ""

#: ../../../linkcheck/checker/mailtourl.py:docstring of linkcheck.checker.mailtourl.MailtoUrl.check_email_syntax:3
msgid "How to check names (memo): https://tools.ietf.org/html/rfc3696"
msgstr ""

#: ../../../linkcheck/checker/mailtourl.py:docstring of linkcheck.checker.mailtourl.MailtoUrl.check_email_syntax:5
msgid "Email address syntax https://tools.ietf.org/html/rfc2822"
msgstr ""

#: ../../../linkcheck/checker/mailtourl.py:docstring of linkcheck.checker.mailtourl.MailtoUrl.check_email_syntax:7
msgid "SMTP protocol https://tools.ietf.org/html/rfc5321#section-4.1.3"
msgstr ""

#: ../../../linkcheck/checker/mailtourl.py:docstring of linkcheck.checker.mailtourl.MailtoUrl.check_email_syntax:9
msgid "IPv6 https://tools.ietf.org/html/rfc4291#section-2.2"
msgstr ""

#: ../../../linkcheck/checker/mailtourl.py:docstring of linkcheck.checker.mailtourl.MailtoUrl.check_email_syntax:11
msgid "Host syntax https://tools.ietf.org/html/rfc1123#section-2"
msgstr ""

#: ../../../linkcheck/checker/mailtourl.py:docstring of linkcheck.checker.mailtourl.MailtoUrl.check_smtp_domain:1
msgid "Check a single mail address."
msgstr ""

#: ../../../linkcheck/checker/mailtourl.py:docstring of linkcheck.checker.mailtourl.MailtoUrl.parse_addresses:1
msgid "Parse all mail addresses out of the URL target. Also parses optional CGI headers like \"?to=foo@example.org\". Stores parsed addresses in the self.addresses set."
msgstr ""

#: ../../../linkcheck/checker/mailtourl.py:docstring of linkcheck.checker.mailtourl.MailtoUrl.set_cache_url:1
msgid "The cache url is a comma separated list of emails."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.nntpurl.rst:2
msgid "linkcheck.checker.nntpurl"
msgstr ""

#: ../../../linkcheck/checker/nntpurl.py:docstring of linkcheck.checker.nntpurl.NntpUrl:1:<autosummary>:1
msgid ":obj:`NntpUrl <linkcheck.checker.nntpurl.NntpUrl>`\\ \\(base\\_url\\, recursion\\_level\\, aggregate\\)"
msgstr ""

#: ../../../linkcheck/checker/nntpurl.py:docstring of linkcheck.checker.nntpurl.NntpUrl:1:<autosummary>:1
#: ../../../linkcheck/checker/nntpurl.py:docstring of linkcheck.checker.nntpurl.NntpUrl:1
msgid "Url link with NNTP scheme."
msgstr ""

#: ../../../linkcheck/checker/nntpurl.py:docstring of linkcheck.checker.nntpurl.NntpUrl.can_get_content:1
msgid "NNTP urls have no content."
msgstr ""

#: ../../../linkcheck/checker/nntpurl.py:docstring of linkcheck.checker.nntpurl.NntpUrl.check_connection:1
msgid "Connect to NNTP server and try to request the URL article resource (if specified)."
msgstr ""

#: ../../../linkcheck/checker/nntpurl.py:docstring of linkcheck.checker.nntpurl.NntpUrl.wait:1
msgid "Wait some time before trying to connect again."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.proxysupport.rst:2
msgid "linkcheck.checker.proxysupport"
msgstr ""

#: ../../../linkcheck/checker/proxysupport.py:docstring of linkcheck.checker.proxysupport.ProxySupport:1:<autosummary>:1
msgid ":obj:`ProxySupport <linkcheck.checker.proxysupport.ProxySupport>`\\ \\(\\)"
msgstr ""

#: ../../../linkcheck/checker/proxysupport.py:docstring of linkcheck.checker.proxysupport.ProxySupport:1:<autosummary>:1
#: ../../../linkcheck/checker/proxysupport.py:docstring of linkcheck.checker.proxysupport.ProxySupport:1
msgid "Get support for proxying and for URLs with user:pass@host setting."
msgstr ""

#: ../../../linkcheck/checker/proxysupport.py:docstring of linkcheck.checker.proxysupport.ProxySupport.get_netloc:1
msgid "Determine scheme, host and port for this connection taking proxy data into account. :return: tuple (scheme, host, port) :rtype: tuple(string, string, int)"
msgstr ""

#: ../../../linkcheck/checker/proxysupport.py:docstring of linkcheck.checker.proxysupport.ProxySupport.ignore_proxy_host:1
msgid "Check if self.host is in the $no_proxy ignore list."
msgstr ""

#: ../../../linkcheck/checker/proxysupport.py:docstring of linkcheck.checker.proxysupport.ProxySupport.set_proxy:1
msgid "Parse given proxy information and store parsed values. Note that only http:// proxies are supported, both for ftp:// and http:// URLs."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.telneturl.rst:2
msgid "linkcheck.checker.telneturl"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.telneturl.rst:21:<autosummary>:1
msgid ":obj:`encode <linkcheck.checker.telneturl.encode>`\\ \\(s\\[\\, encoding\\, errors\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.telneturl.rst:21:<autosummary>:1
#: ../../../linkcheck/checker/telneturl.py:docstring of linkcheck.checker.telneturl.encode:1
msgid "Encode telnet data like username and password."
msgstr ""

#: ../../../linkcheck/checker/telneturl.py:docstring of linkcheck.checker.telneturl.TelnetUrl:1:<autosummary>:1
msgid ":obj:`TelnetUrl <linkcheck.checker.telneturl.TelnetUrl>`\\ \\(base\\_url\\, recursion\\_level\\, aggregate\\)"
msgstr ""

#: ../../../linkcheck/checker/telneturl.py:docstring of linkcheck.checker.telneturl.TelnetUrl:1:<autosummary>:1
#: ../../../linkcheck/checker/telneturl.py:docstring of linkcheck.checker.telneturl.TelnetUrl:1
msgid "Url link with telnet scheme."
msgstr ""

#: ../../../linkcheck/checker/telneturl.py:docstring of linkcheck.checker.telneturl.TelnetUrl.build_url:1
msgid "Call super.build_url(), set default telnet port and initialize the login credentials."
msgstr ""

#: ../../../linkcheck/checker/telneturl.py:docstring of linkcheck.checker.telneturl.TelnetUrl.can_get_content:1
msgid "Telnet URLs have no content."
msgstr ""

#: ../../../linkcheck/checker/telneturl.py:docstring of linkcheck.checker.telneturl.TelnetUrl.check_connection:1
msgid "Open a telnet connection and try to login. Expected login label is \"login: \", expected password label is \"Password: \"."
msgstr ""

#: ../../../linkcheck/checker/telneturl.py:docstring of linkcheck.checker.telneturl.TelnetUrl.local_check:1
msgid "Warn about empty host names. Else call super.local_check()."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.unknownurl.rst:2
msgid "linkcheck.checker.unknownurl"
msgstr ""

#: ../../../linkcheck/checker/unknownurl.py:docstring of linkcheck.checker.unknownurl.UnknownUrl:1:<autosummary>:1
msgid ":obj:`UnknownUrl <linkcheck.checker.unknownurl.UnknownUrl>`\\ \\(base\\_url\\, recursion\\_level\\, aggregate\\)"
msgstr ""

#: ../../../linkcheck/checker/unknownurl.py:docstring of linkcheck.checker.unknownurl.UnknownUrl:1:<autosummary>:1
#: ../../../linkcheck/checker/unknownurl.py:docstring of linkcheck.checker.unknownurl.UnknownUrl:1
msgid "Handle unknown or just plain broken URLs."
msgstr ""

#: ../../../linkcheck/checker/unknownurl.py:docstring of linkcheck.checker.unknownurl.UnknownUrl.can_get_content:1
msgid "Unknown URLs have no content."
msgstr ""

#: ../../../linkcheck/checker/unknownurl.py:docstring of linkcheck.checker.unknownurl.is_unknown_scheme:1
#: ../../../linkcheck/network/iputil.py:docstring of linkcheck.network.iputil.is_obfuscated_ip:1
#: ../../../linkcheck/url.py:docstring of linkcheck.url.is_safe_char:1
#: ../../../linkcheck/url.py:docstring of linkcheck.url.is_safe_domain:1
#: ../../../linkcheck/url.py:docstring of linkcheck.url.is_safe_fragment:1
#: ../../../linkcheck/url.py:docstring of linkcheck.url.is_safe_host:1
#: ../../../linkcheck/url.py:docstring of linkcheck.url.is_safe_parameter:1
#: ../../../linkcheck/url.py:docstring of linkcheck.url.is_safe_path:1
#: ../../../linkcheck/url.py:docstring of linkcheck.url.is_safe_query:1
#: ../../../linkcheck/url.py:docstring of linkcheck.url.is_safe_url:1
#: ../../../linkcheck/url.py:docstring of linkcheck.url.url_is_absolute:1
msgid "Matches zero or more characters at the beginning of the string."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.urlbase.rst:2
msgid "linkcheck.checker.urlbase"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.urlbase.rst:22:<autosummary>:1
msgid ":obj:`url_norm <linkcheck.checker.urlbase.url_norm>`\\ \\(url\\, encoding\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.urlbase.rst:22:<autosummary>:1
#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.url_norm:1
msgid "Wrapper for url.url_norm() to convert UnicodeError in LinkCheckerError."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.urlbase.rst:22:<autosummary>:1
msgid ":obj:`urljoin <linkcheck.checker.urlbase.urljoin>`\\ \\(parent\\, url\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.checker.urlbase.rst:22:<autosummary>:1
msgid "If url is relative, join parent and url."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.CompactUrlData:1:<autosummary>:1
msgid ":obj:`CompactUrlData <linkcheck.checker.urlbase.CompactUrlData>`\\ \\(wired\\_url\\_data\\)"
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.CompactUrlData:1:<autosummary>:1
#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.CompactUrlData:1
msgid "Store selected UrlData attributes in slots to minimize memory usage."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.CompactUrlData:1:<autosummary>:1
msgid ":obj:`UrlBase <linkcheck.checker.urlbase.UrlBase>`\\ \\(base\\_url\\, recursion\\_level\\, aggregate\\)"
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.CompactUrlData:1:<autosummary>:1
#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase:1
msgid "An URL with additional information like validity etc."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.CompactUrlData:3
msgid "Set all attributes according to the dictionnary wired_url_data"
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.add_info:1
msgid "Add an info string."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.add_intern_pattern:1
msgid "Add intern URL regex to config."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.add_size_info:1
msgid "Set size of URL content (if any).. Should be overridden in subclasses."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.add_url:1
msgid "Add new URL to queue."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.add_warning:1
msgid "Add a warning string."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.allows_recursion:1
msgid "Return True iff we can recurse into the url's content."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.allows_simple_recursion:1
msgid "Check recursion level and extern status."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.build_url:1
msgid "Construct self.url and self.urlparts out of the given base url information self.base_url, self.parent_url and self.base_ref."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.build_url_parts:1
msgid "Set userinfo, host, port and anchor from self.urlparts. Also checks for obfuscated IP addresses."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.can_get_content:1
msgid "Indicate wether url get_content() can be called."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.check:1
msgid "Main check function for checking this URL."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.check_connection:1
msgid "The basic connection check uses urlopen to initialize a connection object."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.check_content:1
msgid "Check content of URL. :return: True if content can be parsed, else False"
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.check_obfuscated_ip:1
msgid "Warn if host of this URL is obfuscated IP address."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.check_syntax:1
msgid "Called before self.check(), this function inspects the url syntax. Success enables further checking, failure immediately logs this url. Syntax checks must not use any network resources."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.check_url_warnings:1
msgid "Check URL name and length."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.close_connection:1
msgid "Close an opened url connection."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.content_allows_robots:1
msgid "Returns True: only check robots.txt on HTTP links."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.get_intern_pattern:3
msgid "the URL to set intern pattern for, else self.url"
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.get_intern_pattern:5
msgid "non-empty regex pattern or None"
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.get_title:1
msgid "Return title of page the URL refers to. This is per default the filename or the URL."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.get_user_password:1
msgid "Get tuple (user, password) from configured authentication. Both user and password can be None."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.handle_exception:1
msgid "An exception occurred. Log it and set the cache flag."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.init:1
msgid "Initialize internal data."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.is_css:1
msgid "Return True iff content of this url is CSS stylesheet."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.is_directory:1
msgid "Return True if current URL represents a directory."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.is_file:1
msgid "Return True for file:// URLs."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.is_html:1
msgid "Return True iff content of this url is HTML formatted."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.is_http:1
msgid "Return True for http:// or https:// URLs."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.is_local:1
msgid "Return True for local (ie. file://) URLs."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.is_parseable:1
msgid "Return True iff content of this url is parseable."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.local_check:1
msgid "Local check function can be overridden in subclasses."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.read_content:1
msgid "Return data for this URL. Can be overridden in subclasses."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.read_content_chunk:1
msgid "Read one chunk of content from this URL. Precondition: url_connection is an opened URL."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.reset:1
msgid "Reset all variables to default values."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.serialized:1
msgid "Return serialized url check data as unicode string."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.set_cache_url:1
msgid "Set the URL to be used for caching."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.set_content_type:1
msgid "Set content MIME type. Should be overridden in subclasses."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.set_extern:1
msgid "Match URL against extern and intern link patterns. If no pattern matches the URL is extern. Sets self.extern to a tuple (bool, bool) with content (is_extern, is_strict)."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.set_result:1
msgid "Set result string and validity."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.to_wire:1
msgid "Return compact UrlData object with information from to_wire_dict()."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.to_wire_dict:1
msgid "Return a simplified transport object for logging and caching."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.to_wire_dict:3
msgid "The transport object must contain these attributes:"
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.to_wire_dict:5
msgid "url_data.valid: bool Indicates if URL is valid"
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.to_wire_dict:7
msgid "url_data.result: unicode Result string"
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.to_wire_dict:9
msgid "url_data.warnings: list of tuples (tag, warning message) List of tagged warnings for this URL."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.to_wire_dict:11
msgid "url_data.name: unicode string or None name of URL (eg. filename or link name)"
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.to_wire_dict:13
msgid "url_data.parent_url: unicode or None Parent URL"
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.to_wire_dict:15
msgid "url_data.base_ref: unicode HTML base reference URL of parent"
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.to_wire_dict:17
msgid "url_data.url: unicode Fully qualified URL."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.to_wire_dict:19
msgid "url_data.domain: unicode URL domain part."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.to_wire_dict:21
msgid "url_data.checktime: int Number of seconds needed to check this link, default: zero."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.to_wire_dict:23
msgid "url_data.dltime: int Number of seconds needed to download URL content, default: -1"
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.to_wire_dict:25
msgid "url_data.size: int Size of downloaded URL content, default: -1"
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.to_wire_dict:27
msgid "url_data.info: list of unicode Additional information about this URL."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.to_wire_dict:29
msgid "url_data.line: int Line number of this URL at parent document, or None"
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.to_wire_dict:31
msgid "url_data.column: int Column number of this URL at parent document, or None"
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.to_wire_dict:33
msgid "url_data.page: int Page number of this URL at parent document, or -1"
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.to_wire_dict:35
msgid "url_data.cache_url: unicode Cache url for this URL."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.to_wire_dict:37
msgid "url_data.content_type: unicode MIME content type for URL content."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.to_wire_dict:39
msgid "url_data.level: int Recursion level until reaching this URL from start URL"
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.UrlBase.to_wire_dict:41
msgid "url_data.last_modified: datetime Last modification date of retrieved page (or None)."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.urljoin:1
msgid "If url is relative, join parent and url. Else leave url as-is."
msgstr ""

#: ../../../linkcheck/checker/urlbase.py:docstring of linkcheck.checker.urlbase.urljoin:3
msgid "joined url"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cmdline.rst:2
msgid "linkcheck.cmdline"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cmdline.rst:24:<autosummary>:1
msgid ":obj:`aggregate_url <linkcheck.cmdline.aggregate_url>`\\ \\(aggregate\\, url\\[\\, err\\_exit\\_code\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cmdline.rst:24:<autosummary>:1
#: ../../../linkcheck/cmdline.py:docstring of linkcheck.cmdline.aggregate_url:1
msgid "Append given commandline URL to input queue."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cmdline.rst:24:<autosummary>:1
msgid ":obj:`print_plugins <linkcheck.cmdline.print_plugins>`\\ \\(folders\\[\\, exit\\_code\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cmdline.rst:24:<autosummary>:1
#: ../../../linkcheck/cmdline.py:docstring of linkcheck.cmdline.print_plugins:1
msgid "Print available plugins and exit."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cmdline.rst:24:<autosummary>:1
msgid ":obj:`print_usage <linkcheck.cmdline.print_usage>`\\ \\(msg\\[\\, exit\\_code\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cmdline.rst:24:<autosummary>:1
#: ../../../linkcheck/cmdline.py:docstring of linkcheck.cmdline.print_usage:1
msgid "Print a program msg text to stderr and exit."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cmdline.rst:24:<autosummary>:1
msgid ":obj:`print_version <linkcheck.cmdline.print_version>`\\ \\(\\[exit\\_code\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cmdline.rst:24:<autosummary>:1
#: ../../../linkcheck/cmdline.py:docstring of linkcheck.cmdline.print_version:1
msgid "Print the program version and exit."
msgstr ""

#: ../../../linkcheck/cmdline.py:docstring of linkcheck.cmdline.LCArgumentParser:1:<autosummary>:1
msgid ":obj:`LCArgumentParser <linkcheck.cmdline.LCArgumentParser>`\\ \\(\\[prog\\, usage\\, description\\, ...\\]\\)"
msgstr ""

#: ../../../linkcheck/cmdline.py:docstring of linkcheck.cmdline.LCArgumentParser:1:<autosummary>:1
#: ../../../linkcheck/cmdline.py:docstring of linkcheck.cmdline.LCArgumentParser:1
msgid "Custom argument parser to format help text."
msgstr ""

#: ../../../linkcheck/cmdline.py:docstring of linkcheck.cmdline.LCArgumentParser:1
msgid "Bases: :class:`argparse.ArgumentParser`"
msgstr ""

#: ../../../linkcheck/cmdline.py:docstring of linkcheck.cmdline.LCArgumentParser.print_help:1
msgid "Print a help message to stdout."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:2
msgid "linkcheck.configuration"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid ":obj:`add_kde_proxy <linkcheck.configuration.add_kde_proxy>`\\ \\(key\\, value\\, data\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.add_kde_proxy:1
msgid "Add a proxy value to data dictionary after sanity checks."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid ":obj:`add_kde_setting <linkcheck.configuration.add_kde_setting>`\\ \\(key\\, value\\, data\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.add_kde_setting:1
msgid "Add a KDE proxy setting value to data dictionary."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid ":obj:`get_certifi_file <linkcheck.configuration.get_certifi_file>`\\ \\(\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.get_certifi_file:1
msgid "Get the SSL certifications installed by the certifi package."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid ":obj:`get_gnome_proxy <linkcheck.configuration.get_gnome_proxy>`\\ \\(\\[protocol\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.get_gnome_proxy:1
msgid "Return host:port for a GNOME proxy if found, else None."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid ":obj:`get_kde_config_dir <linkcheck.configuration.get_kde_config_dir>`\\ \\(\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.get_kde_config_dir:1
msgid "Return KDE configuration directory or None if not found."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid ":obj:`get_kde_ftp_proxy <linkcheck.configuration.get_kde_ftp_proxy>`\\ \\(\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.get_kde_ftp_proxy:1
#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.get_kde_http_proxy:1
msgid "Return host:port for KDE HTTP proxy if found, else None."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid ":obj:`get_kde_http_proxy <linkcheck.configuration.get_kde_http_proxy>`\\ \\(\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid ":obj:`get_modules_info <linkcheck.configuration.get_modules_info>`\\ \\(\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.get_modules_info:1
msgid "Return unicode string with detected module info."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid ":obj:`get_plugin_folders <linkcheck.configuration.get_plugin_folders>`\\ \\(\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid "Get linkchecker plugin folders."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid ":obj:`get_share_dir <linkcheck.configuration.get_share_dir>`\\ \\(\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.get_share_dir:1
msgid "Return absolute path of LinkChecker example configuration."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid ":obj:`get_share_file <linkcheck.configuration.get_share_file>`\\ \\(filename\\[\\, devel\\_dir\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.get_share_file:1
msgid "Return a filename in the share directory."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid ":obj:`get_system_cert_file <linkcheck.configuration.get_system_cert_file>`\\ \\(\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid "Try to find a system-wide SSL certificate file."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid ":obj:`get_user_config <linkcheck.configuration.get_user_config>`\\ \\(\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid "Get the user configuration filename."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid ":obj:`get_user_data <linkcheck.configuration.get_user_data>`\\ \\(\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid "Get the user data folder."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid ":obj:`make_userdir <linkcheck.configuration.make_userdir>`\\ \\(child\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.make_userdir:1
msgid "Create a child directory."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid ":obj:`normpath <linkcheck.configuration.normpath>`\\ \\(path\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.normpath:1
msgid "Norm given system path with all available norm or expand functions in os.path."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid ":obj:`read_kioslaverc <linkcheck.configuration.read_kioslaverc>`\\ \\(\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.read_kioslaverc:1
msgid "Read kioslaverc into data dictionary."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid ":obj:`resolve_indirect <linkcheck.configuration.resolve_indirect>`\\ \\(data\\, key\\[\\, splithosts\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.resolve_indirect:1
msgid "Replace name of environment variable with its value."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid ":obj:`resolve_kde_settings <linkcheck.configuration.resolve_kde_settings>`\\ \\(data\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.resolve_kde_settings:1
msgid "Write final proxy configuration values in data dictionary."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
msgid ":obj:`split_hosts <linkcheck.configuration.split_hosts>`\\ \\(value\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:40:<autosummary>:1
#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.split_hosts:1
msgid "Split comma-separated host list."
msgstr ""

#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.Configuration:1:<autosummary>:1
msgid ":obj:`Configuration <linkcheck.configuration.Configuration>`\\ \\(\\)"
msgstr ""

#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.Configuration:1:<autosummary>:1
msgid "Storage for configuration options."
msgstr ""

#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.Configuration:1
#: ../../../linkcheck/containers.py:docstring of linkcheck.containers.LFUCache:1
#: ../../../linkcheck/plugins/viruscheck.py:docstring of linkcheck.plugins.viruscheck.ClamavConfig:1
msgid "Bases: :class:`dict`"
msgstr ""

#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.Configuration:1
msgid "Storage for configuration options. Options can both be given from the command line as well as from configuration files."
msgstr ""

#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.Configuration:4
msgid "Initialize the default options."
msgstr ""

#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.Configuration.add_auth:1
msgid "Add given authentication data."
msgstr ""

#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.Configuration.get_connectionlimits:1
msgid "Get dict with limit per connection type."
msgstr ""

#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.Configuration.get_user_password:1
msgid "Get tuple (user, password) from configured authentication that matches the given URL. Both user and password can be None if not specified, or no authentication matches the given URL."
msgstr ""

#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.Configuration.logger_add:1
msgid "Add a new logger type to the known loggers."
msgstr ""

#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.Configuration.logger_new:1
msgid "Instantiate new logger and return it."
msgstr ""

#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.Configuration.read:1
#: ../../../linkcheck/configuration/confparse.py:docstring of linkcheck.configuration.confparse.LCConfigParser.read:1
msgid "Read settings from given config files."
msgstr ""

#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.Configuration.read:3
#: ../../../linkcheck/configuration/confparse.py:docstring of linkcheck.configuration.confparse.LCConfigParser.read:3
msgid "LinkCheckerError on syntax errors in the config file(s)"
msgstr ""

#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.Configuration.sanitize:1
msgid "Make sure the configuration is consistent."
msgstr ""

#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.Configuration.sanitize_logger:1
msgid "Make logger configuration consistent."
msgstr ""

#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.Configuration.sanitize_loginurl:1
msgid "Make login configuration consistent."
msgstr ""

#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.Configuration.sanitize_plugins:1
msgid "Ensure each plugin is configurable."
msgstr ""

#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.Configuration.sanitize_proxies:1
msgid "Try to read additional proxy settings which urllib does not support."
msgstr ""

#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.Configuration.sanitize_ssl:1
msgid "Use local installed certificate file if available. Tries to get system, then certifi, then the own installed certificate file."
msgstr ""

#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.Configuration.set_status_logger:1
msgid "Set the status logger."
msgstr ""

#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.get_certifi_file:3
msgid "the filename to the cert file"
msgstr ""

#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.get_certifi_file:5
msgid "ImportError when certifi is not installed or ValueError when the file is not found"
msgstr ""

#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.get_plugin_folders:1
msgid "Get linkchecker plugin folders. Default is \"$XDG_DATA_HOME/linkchecker/plugins/\". \"~/.linkchecker/plugins/\" is also supported for backwards compatibility, and is used if both directories exist."
msgstr ""

#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.get_share_file:3
msgid "directory to search when developing"
msgstr ""

#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.get_share_file:5
msgid "filename to search for"
msgstr ""

#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.get_share_file:7
msgid "the found filename or None"
msgstr ""

#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.get_share_file:9
msgid "ValueError if not found"
msgstr ""

#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.get_system_cert_file:1
msgid "Try to find a system-wide SSL certificate file. :return: the filename to the cert file :raises: ValueError when no system cert file could be found"
msgstr ""

#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.get_user_config:1
msgid "Get the user configuration filename. If the user configuration file does not exist, copy it from the initial configuration file, but only if this is not a portable installation. Returns path to user config file (which might not exist due to copy failures or on portable systems). :return configuration filename :rtype string"
msgstr ""

#: ../../../linkcheck/configuration/__init__.py:docstring of linkcheck.configuration.get_user_data:1
msgid "Get the user data folder. Returns \"~/.linkchecker/\" if this folder exists,     \"$XDG_DATA_HOME/linkchecker\" if it does not. :rtype string"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:62:<autosummary>:1
msgid ":obj:`linkcheck.configuration.confparse <linkcheck.configuration.confparse>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.rst:62:<autosummary>:1
#: ../../../linkcheck/configuration/confparse.py:docstring of linkcheck.configuration.confparse:1
msgid "Parse configuration files"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.confparse.rst:2
msgid "linkcheck.configuration.confparse"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.confparse.rst:21:<autosummary>:1
msgid ":obj:`read_multiline <linkcheck.configuration.confparse.read_multiline>`\\ \\(value\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.configuration.confparse.rst:21:<autosummary>:1
#: ../../../linkcheck/configuration/confparse.py:docstring of linkcheck.configuration.confparse.read_multiline:1
msgid "Helper function reading multiline values."
msgstr ""

#: ../../../linkcheck/configuration/confparse.py:docstring of linkcheck.configuration.confparse.LCConfigParser:1:<autosummary>:1
msgid ":obj:`LCConfigParser <linkcheck.configuration.confparse.LCConfigParser>`\\ \\(config\\)"
msgstr ""

#: ../../../linkcheck/configuration/confparse.py:docstring of linkcheck.configuration.confparse.LCConfigParser:1:<autosummary>:1
#: ../../../linkcheck/configuration/confparse.py:docstring of linkcheck.configuration.confparse.LCConfigParser:1
msgid "Parse a LinkChecker configuration file."
msgstr ""

#: ../../../linkcheck/configuration/confparse.py:docstring of linkcheck.configuration.confparse.LCConfigParser:1
msgid "Bases: :class:`configparser.RawConfigParser`"
msgstr ""

#: ../../../linkcheck/configuration/confparse.py:docstring of linkcheck.configuration.confparse.LCConfigParser:3
#: ../../../linkcheck/plugins/httpheaderinfo.py:docstring of linkcheck.plugins.httpheaderinfo.HttpHeaderInfo:3
msgid "Initialize configuration."
msgstr ""

#: ../../../linkcheck/configuration/confparse.py:docstring of linkcheck.configuration.confparse.LCConfigParser.check_password_readable:1
msgid "Check if there is a readable configuration file and print a warning."
msgstr ""

#: ../../../linkcheck/configuration/confparse.py:docstring of linkcheck.configuration.confparse.LCConfigParser.read_authentication_config:1
msgid "Read configuration options in section \"authentication\"."
msgstr ""

#: ../../../linkcheck/configuration/confparse.py:docstring of linkcheck.configuration.confparse.LCConfigParser.read_boolean_option:1
msgid "Read a boolean option."
msgstr ""

#: ../../../linkcheck/configuration/confparse.py:docstring of linkcheck.configuration.confparse.LCConfigParser.read_checking_config:1
msgid "Read configuration options in section \"checking\"."
msgstr ""

#: ../../../linkcheck/configuration/confparse.py:docstring of linkcheck.configuration.confparse.LCConfigParser.read_filtering_config:1
msgid "Read configuration options in section \"filtering\"."
msgstr ""

#: ../../../linkcheck/configuration/confparse.py:docstring of linkcheck.configuration.confparse.LCConfigParser.read_int_option:1
msgid "Read an integer option."
msgstr ""

#: ../../../linkcheck/configuration/confparse.py:docstring of linkcheck.configuration.confparse.LCConfigParser.read_output_config:1
msgid "Read configuration options in section \"output\"."
msgstr ""

#: ../../../linkcheck/configuration/confparse.py:docstring of linkcheck.configuration.confparse.LCConfigParser.read_plugin_config:1
msgid "Read plugin-specific configuration values."
msgstr ""

#: ../../../linkcheck/configuration/confparse.py:docstring of linkcheck.configuration.confparse.LCConfigParser.read_string_option:1
msgid "Read a string option."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.containers.rst:2
msgid "linkcheck.containers"
msgstr ""

#: ../../../linkcheck/containers.py:docstring of linkcheck.containers.LFUCache:1:<autosummary>:1
msgid ":obj:`LFUCache <linkcheck.containers.LFUCache>`\\ \\(\\[size\\]\\)"
msgstr ""

#: ../../../linkcheck/containers.py:docstring of linkcheck.containers.LFUCache:1:<autosummary>:1
#: ../../../linkcheck/containers.py:docstring of linkcheck.containers.LFUCache:1
msgid "Limited cache which purges least frequently used items."
msgstr ""

#: ../../../linkcheck/containers.py:docstring of linkcheck.containers.LFUCache:3
msgid "Initialize internal LFU cache."
msgstr ""

#: ../../../linkcheck/containers.py:docstring of linkcheck.containers.LFUCache.get:1
msgid "Update key usage if found and return value, else return default."
msgstr ""

#: ../../../linkcheck/containers.py:docstring of linkcheck.containers.LFUCache.items:1
msgid "Return list of items, not updating usage count."
msgstr ""

#: ../../../linkcheck/containers.py:docstring of linkcheck.containers.LFUCache.iteritems:1
msgid "Return iterator of items, not updating usage count."
msgstr ""

#: ../../../linkcheck/containers.py:docstring of linkcheck.containers.LFUCache.itervalues:1
msgid "Return iterator of values, not updating usage count."
msgstr ""

#: ../../../linkcheck/containers.py:docstring of linkcheck.containers.LFUCache.pop:1
msgid "Remove and return a value."
msgstr ""

#: ../../../linkcheck/containers.py:docstring of linkcheck.containers.LFUCache.popitem:1
msgid "Remove and return an item."
msgstr ""

#: ../../../linkcheck/containers.py:docstring of linkcheck.containers.LFUCache.setdefault:1
msgid "Update key usage if found and return value, else set and return default."
msgstr ""

#: ../../../linkcheck/containers.py:docstring of linkcheck.containers.LFUCache.shrink:1
msgid "Shrink ca. 5% of entries."
msgstr ""

#: ../../../linkcheck/containers.py:docstring of linkcheck.containers.LFUCache.uses:1
msgid "Get number of uses for given key (without increasing the number of uses)"
msgstr ""

#: ../../../linkcheck/containers.py:docstring of linkcheck.containers.LFUCache.values:1
msgid "Return list of values, not updating usage count."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.cookies.rst:2
msgid "linkcheck.cookies"
msgstr ""

#: ../../../linkcheck/cookies.py:docstring of linkcheck.cookies.from_file:1:<autosummary>:1
msgid ":obj:`from_file <linkcheck.cookies.from_file>`\\ \\(filename\\)"
msgstr ""

#: ../../../linkcheck/cookies.py:docstring of linkcheck.cookies.from_file:1:<autosummary>:1
#: ../../../linkcheck/cookies.py:docstring of linkcheck.cookies.from_file:1
msgid "Parse cookie data from a text file in HTTP header format."
msgstr ""

#: ../../../linkcheck/cookies.py:docstring of linkcheck.cookies.from_file:1:<autosummary>:1
msgid ":obj:`from_headers <linkcheck.cookies.from_headers>`\\ \\(strheader\\)"
msgstr ""

#: ../../../linkcheck/cookies.py:docstring of linkcheck.cookies.from_file:1:<autosummary>:1
#: ../../../linkcheck/cookies.py:docstring of linkcheck.cookies.from_headers:1
msgid "Parse cookie data from a string in HTTP header (RFC 2616) format."
msgstr ""

#: ../../../linkcheck/cookies.py:docstring of linkcheck.cookies.from_file:3
msgid "list of tuples (headers, scheme, host, path)"
msgstr ""

#: ../../../linkcheck/cookies.py:docstring of linkcheck.cookies.from_headers:3
msgid "list of cookies"
msgstr ""

#: ../../../linkcheck/cookies.py:docstring of linkcheck.cookies.from_headers:4
msgid "ValueError for incomplete or invalid data"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.decorators.rst:2
msgid "linkcheck.decorators"
msgstr ""

#: ../../../linkcheck/decorators.py:docstring of linkcheck.decorators:3
msgid "Example::"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.decorators.rst:28:<autosummary>:1
msgid ":obj:`deprecated <linkcheck.decorators.deprecated>`\\ \\(func\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.decorators.rst:28:<autosummary>:1
msgid "A decorator which can be used to mark functions as deprecated."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.decorators.rst:28:<autosummary>:1
msgid ":obj:`notimplemented <linkcheck.decorators.notimplemented>`\\ \\(func\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.decorators.rst:28:<autosummary>:1
#: ../../../linkcheck/decorators.py:docstring of linkcheck.decorators.notimplemented:1
msgid "Raises a NotImplementedError if the function is called."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.decorators.rst:28:<autosummary>:1
msgid ":obj:`signal_handler <linkcheck.decorators.signal_handler>`\\ \\(signal\\_number\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.decorators.rst:28:<autosummary>:1
#: ../../../linkcheck/decorators.py:docstring of linkcheck.decorators.signal_handler:1
msgid "From http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/410666"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.decorators.rst:28:<autosummary>:1
msgid ":obj:`synchronize <linkcheck.decorators.synchronize>`\\ \\(lock\\, func\\[\\, log\\_duration\\_secs\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.decorators.rst:28:<autosummary>:1
#: ../../../linkcheck/decorators.py:docstring of linkcheck.decorators.synchronize:1
msgid "Return synchronized function acquiring the given lock."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.decorators.rst:28:<autosummary>:1
msgid ":obj:`synchronized <linkcheck.decorators.synchronized>`\\ \\(lock\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.decorators.rst:28:<autosummary>:1
#: ../../../linkcheck/decorators.py:docstring of linkcheck.decorators.synchronized:1
msgid "A decorator calling a function with aqcuired lock."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.decorators.rst:28:<autosummary>:1
msgid ":obj:`timed <linkcheck.decorators.timed>`\\ \\(\\[log\\, limit\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.decorators.rst:28:<autosummary>:1
#: ../../../linkcheck/decorators.py:docstring of linkcheck.decorators.timed:1
msgid "Decorator to run a function with timing info."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.decorators.rst:28:<autosummary>:1
msgid ":obj:`timeit <linkcheck.decorators.timeit>`\\ \\(func\\, log\\, limit\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.decorators.rst:28:<autosummary>:1
msgid "Print execution time of the function."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.decorators.rst:28:<autosummary>:1
msgid ":obj:`update_func_meta <linkcheck.decorators.update_func_meta>`\\ \\(fake\\_func\\, real\\_func\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.decorators.rst:28:<autosummary>:1
msgid "Set meta information (eg."
msgstr ""

#: ../../../linkcheck/decorators.py:docstring of linkcheck.decorators.curried:1:<autosummary>:1
msgid ":obj:`curried <linkcheck.decorators.curried>`\\ \\(func\\, \\*a\\)"
msgstr ""

#: ../../../linkcheck/decorators.py:docstring of linkcheck.decorators.curried:1:<autosummary>:1
#: ../../../linkcheck/decorators.py:docstring of linkcheck.decorators.curried:1
msgid "Decorator that returns a function that keeps returning functions until all arguments are supplied; then the original function is evaluated."
msgstr ""

#: ../../../linkcheck/decorators.py:docstring of linkcheck.decorators.curried:5
msgid "Store function and arguments."
msgstr ""

#: ../../../linkcheck/decorators.py:docstring of linkcheck.decorators.deprecated:1
msgid "A decorator which can be used to mark functions as deprecated. It emits a warning when the function is called."
msgstr ""

#: ../../../linkcheck/decorators.py:docstring of linkcheck.decorators.signal_handler:3
msgid "A decorator to set the specified function as handler for a signal. This function is the 'outer' decorator, called with only the (non-function) arguments. If signal_number is not a valid signal (for example signal.SIGN), no handler is set."
msgstr ""

#: ../../../linkcheck/decorators.py:docstring of linkcheck.decorators.timeit:1
msgid "Print execution time of the function. For quick'n'dirty profiling."
msgstr ""

#: ../../../linkcheck/decorators.py:docstring of linkcheck.decorators.update_func_meta:1
msgid "Set meta information (eg. __doc__) of fake function to that of the real function. :return fake_func"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.rst:2
msgid "linkcheck.director"
msgstr ""

#: ../../../linkcheck/director/__init__.py:docstring of linkcheck.director.abort:1:<autosummary>:1
msgid ":obj:`abort <linkcheck.director.abort>`\\ \\(aggregate\\)"
msgstr ""

#: ../../../linkcheck/director/__init__.py:docstring of linkcheck.director.abort:1:<autosummary>:1
#: ../../../linkcheck/director/__init__.py:docstring of linkcheck.director.abort:1
msgid "Helper function to ensure a clean shutdown."
msgstr ""

#: ../../../linkcheck/director/__init__.py:docstring of linkcheck.director.abort:1:<autosummary>:1
msgid ":obj:`abort_now <linkcheck.director.abort_now>`\\ \\(\\)"
msgstr ""

#: ../../../linkcheck/director/__init__.py:docstring of linkcheck.director.abort:1:<autosummary>:1
#: ../../../linkcheck/director/__init__.py:docstring of linkcheck.director.abort_now:1
msgid "Force exit of current process without cleanup."
msgstr ""

#: ../../../linkcheck/director/__init__.py:docstring of linkcheck.director.abort:1:<autosummary>:1
msgid ":obj:`check_url <linkcheck.director.check_url>`\\ \\(aggregate\\)"
msgstr ""

#: ../../../linkcheck/director/__init__.py:docstring of linkcheck.director.abort:1:<autosummary>:1
#: ../../../linkcheck/director/__init__.py:docstring of linkcheck.director.check_url:1
msgid "Helper function waiting for URL queue."
msgstr ""

#: ../../../linkcheck/director/__init__.py:docstring of linkcheck.director.abort:1:<autosummary>:1
msgid ":obj:`check_urls <linkcheck.director.check_urls>`\\ \\(aggregate\\)"
msgstr ""

#: ../../../linkcheck/director/__init__.py:docstring of linkcheck.director.abort:1:<autosummary>:1
#: ../../../linkcheck/director/__init__.py:docstring of linkcheck.director.check_urls:1
msgid "Main check function; checks all configured URLs until interrupted with Ctrl-C."
msgstr ""

#: ../../../linkcheck/director/__init__.py:docstring of linkcheck.director.abort:1:<autosummary>:1
msgid ":obj:`get_aggregate <linkcheck.director.get_aggregate>`\\ \\(config\\)"
msgstr ""

#: ../../../linkcheck/director/__init__.py:docstring of linkcheck.director.abort:1:<autosummary>:1
#: ../../../linkcheck/director/__init__.py:docstring of linkcheck.director.get_aggregate:1
msgid "Get an aggregator instance with given configuration."
msgstr ""

#: ../../../linkcheck/director/__init__.py:docstring of linkcheck.director.abort:1:<autosummary>:1
msgid ":obj:`interrupt <linkcheck.director.interrupt>`\\ \\(aggregate\\)"
msgstr ""

#: ../../../linkcheck/director/__init__.py:docstring of linkcheck.director.abort:1:<autosummary>:1
#: ../../../linkcheck/director/__init__.py:docstring of linkcheck.director.interrupt:1
msgid "Interrupt execution and shutdown, ignoring any subsequent interrupts."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.rst:48:<autosummary>:1
msgid ":obj:`linkcheck.director.aggregator <linkcheck.director.aggregator>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.rst:48:<autosummary>:1
#: ../../../linkcheck/director/aggregator.py:docstring of linkcheck.director.aggregator:1
msgid "Aggregate needed object instances for checker threads."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.rst:48:<autosummary>:1
msgid ":obj:`linkcheck.director.checker <linkcheck.director.checker>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.rst:48:<autosummary>:1
#: ../../../linkcheck/director/checker.py:docstring of linkcheck.director.checker:1
msgid "URL checking functions."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.rst:48:<autosummary>:1
msgid ":obj:`linkcheck.director.console <linkcheck.director.console>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.rst:48:<autosummary>:1
#: ../../../linkcheck/director/console.py:docstring of linkcheck.director.console:1
msgid "Helpers for console output."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.rst:48:<autosummary>:1
msgid ":obj:`linkcheck.director.interrupter <linkcheck.director.interrupter>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.rst:48:<autosummary>:1
#: ../../src/code/linkcheck/linkcheck.director.rst:48:<autosummary>:1
#: ../../../linkcheck/director/interrupter.py:docstring of linkcheck.director.interrupter:1
#: ../../../linkcheck/director/status.py:docstring of linkcheck.director.status:1
msgid "Status message handling"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.rst:48:<autosummary>:1
msgid ":obj:`linkcheck.director.logger <linkcheck.director.logger>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.rst:48:<autosummary>:1
#: ../../../linkcheck/director/logger.py:docstring of linkcheck.director.logger:1
msgid "Logger for aggregator instances"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.rst:48:<autosummary>:1
msgid ":obj:`linkcheck.director.status <linkcheck.director.status>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.rst:48:<autosummary>:1
msgid ":obj:`linkcheck.director.task <linkcheck.director.task>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.aggregator.rst:2
msgid "linkcheck.director.aggregator"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.aggregator.rst:21:<autosummary>:1
msgid ":obj:`new_request_session <linkcheck.director.aggregator.new_request_session>`\\ \\(config\\, cookies\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.aggregator.rst:21:<autosummary>:1
#: ../../../linkcheck/director/aggregator.py:docstring of linkcheck.director.aggregator.new_request_session:1
msgid "Create a new request session."
msgstr ""

#: ../../../linkcheck/director/aggregator.py:docstring of linkcheck.director.aggregator.Aggregate:1:<autosummary>:1
msgid ":obj:`Aggregate <linkcheck.director.aggregator.Aggregate>`\\ \\(config\\, urlqueue\\, robots\\_txt\\, ...\\)"
msgstr ""

#: ../../../linkcheck/director/aggregator.py:docstring of linkcheck.director.aggregator.Aggregate:1:<autosummary>:1
#: ../../../linkcheck/director/aggregator.py:docstring of linkcheck.director.aggregator.Aggregate:1
msgid "Store thread-safe data collections for checker threads."
msgstr ""

#: ../../../linkcheck/director/aggregator.py:docstring of linkcheck.director.aggregator.Aggregate:3
msgid "Store given link checking objects."
msgstr ""

#: ../../../linkcheck/director/aggregator.py:docstring of linkcheck.director.aggregator.Aggregate.abort:1
msgid "Print still-active URLs and empty the URL queue."
msgstr ""

#: ../../../linkcheck/director/aggregator.py:docstring of linkcheck.director.aggregator.Aggregate.add_downloaded_bytes:1
msgid "Add to number of downloaded bytes."
msgstr ""

#: ../../../linkcheck/director/aggregator.py:docstring of linkcheck.director.aggregator.Aggregate.add_request_session:1
msgid "Add a request session for current thread."
msgstr ""

#: ../../../linkcheck/director/aggregator.py:docstring of linkcheck.director.aggregator.Aggregate.cancel:1
msgid "Empty the URL queue."
msgstr ""

#: ../../../linkcheck/director/aggregator.py:docstring of linkcheck.director.aggregator.Aggregate.end_log_output:1
msgid "Print ending output to log."
msgstr ""

#: ../../../linkcheck/director/aggregator.py:docstring of linkcheck.director.aggregator.Aggregate.finish:1
msgid "Wait for checker threads to finish."
msgstr ""

#: ../../../linkcheck/director/aggregator.py:docstring of linkcheck.director.aggregator.Aggregate.get_check_threads:1
msgid "Return iterator of checker threads."
msgstr ""

#: ../../../linkcheck/director/aggregator.py:docstring of linkcheck.director.aggregator.Aggregate.get_request_session:1
msgid "Get the request session for current thread."
msgstr ""

#: ../../../linkcheck/director/aggregator.py:docstring of linkcheck.director.aggregator.Aggregate.is_finished:1
msgid "Determine if checking is finished."
msgstr ""

#: ../../../linkcheck/director/aggregator.py:docstring of linkcheck.director.aggregator.Aggregate.print_active_threads:1
msgid "Log all currently active threads."
msgstr ""

#: ../../../linkcheck/director/aggregator.py:docstring of linkcheck.director.aggregator.Aggregate.remove_stopped_threads:1
msgid "Remove the stopped threads from the internal thread list."
msgstr ""

#: ../../../linkcheck/director/aggregator.py:docstring of linkcheck.director.aggregator.Aggregate.start_threads:1
msgid "Spawn threads for URL checking and status printing."
msgstr ""

#: ../../../linkcheck/director/aggregator.py:docstring of linkcheck.director.aggregator.Aggregate.visit_loginurl:1
msgid "Check for a login URL and visit it."
msgstr ""

#: ../../../linkcheck/director/aggregator.py:docstring of linkcheck.director.aggregator.Aggregate.wait_for_host:1
msgid "Throttle requests to one host."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.checker.rst:2
msgid "linkcheck.director.checker"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.checker.rst:22:<autosummary>:1
msgid ":obj:`check_url <linkcheck.director.checker.check_url>`\\ \\(url\\_data\\, logger\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.checker.rst:22:<autosummary>:1
#: ../../../linkcheck/director/checker.py:docstring of linkcheck.director.checker.check_url:1
msgid "Check a single URL with logging."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.checker.rst:22:<autosummary>:1
msgid ":obj:`check_urls <linkcheck.director.checker.check_urls>`\\ \\(urlqueue\\, logger\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.checker.rst:22:<autosummary>:1
#: ../../../linkcheck/director/checker.py:docstring of linkcheck.director.checker.check_urls:1
msgid "Check URLs without threading."
msgstr ""

#: ../../../linkcheck/director/checker.py:docstring of linkcheck.director.checker.Checker:1:<autosummary>:1
msgid ":obj:`Checker <linkcheck.director.checker.Checker>`\\ \\(urlqueue\\, logger\\, add\\_request\\_session\\)"
msgstr ""

#: ../../../linkcheck/director/checker.py:docstring of linkcheck.director.checker.Checker:1:<autosummary>:1
#: ../../../linkcheck/director/checker.py:docstring of linkcheck.director.checker.Checker:1
msgid "URL check thread."
msgstr ""

#: ../../../linkcheck/director/checker.py:docstring of linkcheck.director.checker.Checker:1
#: ../../../linkcheck/director/status.py:docstring of linkcheck.director.status.Status:1
msgid "Bases: :class:`linkcheck.director.task.LoggedCheckedTask`"
msgstr ""

#: ../../../linkcheck/director/checker.py:docstring of linkcheck.director.checker.Checker:3
msgid "Store URL queue and logger."
msgstr ""

#: ../../../linkcheck/director/checker.py:docstring of linkcheck.director.checker.Checker.check_url:1
msgid "Try to get URL data from queue and check it."
msgstr ""

#: ../../../linkcheck/director/checker.py:docstring of linkcheck.director.checker.Checker.check_url_data:1
msgid "Check one URL data instance."
msgstr ""

#: ../../../linkcheck/director/checker.py:docstring of linkcheck.director.checker.Checker.run_checked:1
msgid "Check URLs in the queue."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.console.rst:2
msgid "linkcheck.director.console"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.console.rst:26:<autosummary>:1
msgid ":obj:`internal_error <linkcheck.director.console.internal_error>`\\ \\(\\[out\\, etype\\, evalue\\, tb\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.console.rst:26:<autosummary>:1
#: ../../../linkcheck/director/console.py:docstring of linkcheck.director.console.internal_error:1
msgid "Print internal error message (output defaults to stderr)."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.console.rst:26:<autosummary>:1
msgid ":obj:`print_app_info <linkcheck.director.console.print_app_info>`\\ \\(\\[out\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.console.rst:26:<autosummary>:1
#: ../../../linkcheck/director/console.py:docstring of linkcheck.director.console.print_app_info:1
msgid "Print system and application info (output defaults to stderr)."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.console.rst:26:<autosummary>:1
msgid ":obj:`print_env_info <linkcheck.director.console.print_env_info>`\\ \\(key\\[\\, out\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.console.rst:26:<autosummary>:1
#: ../../../linkcheck/director/console.py:docstring of linkcheck.director.console.print_env_info:1
msgid "If given environment key is defined, print it out."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.console.rst:26:<autosummary>:1
msgid ":obj:`print_locale_info <linkcheck.director.console.print_locale_info>`\\ \\(\\[out\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.console.rst:26:<autosummary>:1
#: ../../../linkcheck/director/console.py:docstring of linkcheck.director.console.print_locale_info:1
msgid "Print locale info."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.console.rst:26:<autosummary>:1
msgid ":obj:`print_proxy_info <linkcheck.director.console.print_proxy_info>`\\ \\(\\[out\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.console.rst:26:<autosummary>:1
#: ../../../linkcheck/director/console.py:docstring of linkcheck.director.console.print_proxy_info:1
msgid "Print proxy info."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.console.rst:26:<autosummary>:1
msgid ":obj:`print_version <linkcheck.director.console.print_version>`\\ \\(\\[out\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.console.rst:26:<autosummary>:1
#: ../../../linkcheck/director/console.py:docstring of linkcheck.director.console.print_version:1
msgid "Print the program version (output defaults to stdout)."
msgstr ""

#: ../../../linkcheck/director/console.py:docstring of linkcheck.director.console.StatusLogger:1:<autosummary>:1
msgid ":obj:`StatusLogger <linkcheck.director.console.StatusLogger>`\\ \\(\\[fd\\]\\)"
msgstr ""

#: ../../../linkcheck/director/console.py:docstring of linkcheck.director.console.StatusLogger:1:<autosummary>:1
msgid "Standard status logger."
msgstr ""

#: ../../../linkcheck/director/console.py:docstring of linkcheck.director.console.StatusLogger:1
msgid "Standard status logger. Default output is stderr."
msgstr ""

#: ../../../linkcheck/director/console.py:docstring of linkcheck.director.console.StatusLogger:3
msgid "Save file descriptor for logging."
msgstr ""

#: ../../../linkcheck/director/console.py:docstring of linkcheck.director.console.StatusLogger.flush:1
msgid "Flush file descriptor."
msgstr ""

#: ../../../linkcheck/director/console.py:docstring of linkcheck.director.console.StatusLogger.log_status:1
msgid "Write status message to file descriptor."
msgstr ""

#: ../../../linkcheck/director/console.py:docstring of linkcheck.director.console.StatusLogger.write:1
msgid "Write message to file descriptor."
msgstr ""

#: ../../../linkcheck/director/console.py:docstring of linkcheck.director.console.StatusLogger.writeln:1
msgid "Write status message and line break to file descriptor."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.interrupter.rst:2
msgid "linkcheck.director.interrupter"
msgstr ""

#: ../../../linkcheck/director/interrupter.py:docstring of linkcheck.director.interrupter.Interrupt:1:<autosummary>:1
msgid ":obj:`Interrupt <linkcheck.director.interrupter.Interrupt>`\\ \\(duration\\)"
msgstr ""

#: ../../../linkcheck/director/interrupter.py:docstring of linkcheck.director.interrupter.Interrupt:1:<autosummary>:1
msgid "Thread that raises KeyboardInterrupt after a specified duration."
msgstr ""

#: ../../../linkcheck/director/interrupter.py:docstring of linkcheck.director.interrupter.Interrupt:1
#: ../../../linkcheck/director/task.py:docstring of linkcheck.director.task.LoggedCheckedTask:1
msgid "Bases: :class:`linkcheck.director.task.CheckedTask`"
msgstr ""

#: ../../../linkcheck/director/interrupter.py:docstring of linkcheck.director.interrupter.Interrupt:1
msgid "Thread that raises KeyboardInterrupt after a specified duration. This gives us a portable SIGALRM implementation. The duration is checked every 5 seconds."
msgstr ""

#: ../../../linkcheck/director/interrupter.py:docstring of linkcheck.director.interrupter.Interrupt:5
msgid "Initialize the task."
msgstr ""

#: ../../../linkcheck/director/interrupter.py:docstring of linkcheck.director.interrupter.Interrupt:7
msgid "raise KeyboardInterrupt after given number of seconds"
msgstr ""

#: ../../../linkcheck/director/interrupter.py:docstring of linkcheck.director.interrupter.Interrupt.run_checked:1
msgid "Wait and raise KeyboardInterrupt after."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.logger.rst:2
msgid "linkcheck.director.logger"
msgstr ""

#: ../../../linkcheck/director/logger.py:docstring of linkcheck.director.logger.Logger:1:<autosummary>:1
msgid ":obj:`Logger <linkcheck.director.logger.Logger>`\\ \\(config\\)"
msgstr ""

#: ../../../linkcheck/director/logger.py:docstring of linkcheck.director.logger.Logger:1:<autosummary>:1
#: ../../../linkcheck/director/logger.py:docstring of linkcheck.director.logger.Logger:1
msgid "Thread safe multi-logger class used by aggregator instances."
msgstr ""

#: ../../../linkcheck/director/logger.py:docstring of linkcheck.director.logger.Logger:3
msgid "Initialize basic logging variables."
msgstr ""

#: ../../../linkcheck/director/logger.py:docstring of linkcheck.director.logger.Logger.check_active_loggers:1
msgid "Check if all loggers are deactivated due to I/O errors."
msgstr ""

#: ../../../linkcheck/director/logger.py:docstring of linkcheck.director.logger.Logger.do_print:1
msgid "Determine if URL entry should be logged or not."
msgstr ""

#: ../../../linkcheck/director/logger.py:docstring of linkcheck.director.logger.Logger.end_log_output:1
msgid "End output of all configured loggers."
msgstr ""

#: ../../../linkcheck/director/logger.py:docstring of linkcheck.director.logger.Logger.log_internal_error:1
msgid "Document that an internal error occurred."
msgstr ""

#: ../../../linkcheck/director/logger.py:docstring of linkcheck.director.logger.Logger.log_url:1
msgid "Send new url to all configured loggers."
msgstr ""

#: ../../../linkcheck/director/logger.py:docstring of linkcheck.director.logger.Logger.start_log_output:1
msgid "Start output of all configured loggers."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.status.rst:2
msgid "linkcheck.director.status"
msgstr ""

#: ../../../linkcheck/director/status.py:docstring of linkcheck.director.status.Status:1:<autosummary>:1
msgid ":obj:`Status <linkcheck.director.status.Status>`\\ \\(aggregator\\, wait\\_seconds\\)"
msgstr ""

#: ../../../linkcheck/director/status.py:docstring of linkcheck.director.status.Status:1:<autosummary>:1
#: ../../../linkcheck/director/status.py:docstring of linkcheck.director.status.Status:1
msgid "Thread that gathers and logs the status periodically."
msgstr ""

#: ../../../linkcheck/director/status.py:docstring of linkcheck.director.status.Status:3
msgid "Initialize the status logger task."
msgstr ""

#: ../../../linkcheck/director/status.py:docstring of linkcheck.director.status.Status:5
msgid "the URL queue"
msgstr ""

#: ../../../linkcheck/director/status.py:docstring of linkcheck.director.status.Status:7
msgid "the logger object to inform about status"
msgstr ""

#: ../../../linkcheck/director/status.py:docstring of linkcheck.director.status.Status:9
msgid "interval in seconds to report status"
msgstr ""

#: ../../../linkcheck/director/status.py:docstring of linkcheck.director.status.Status.log_status:1
msgid "Log a status message."
msgstr ""

#: ../../../linkcheck/director/status.py:docstring of linkcheck.director.status.Status.run_checked:1
msgid "Print periodic status messages."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.director.task.rst:2
msgid "linkcheck.director.task"
msgstr ""

#: ../../../linkcheck/director/task.py:docstring of linkcheck.director.task.CheckedTask:1:<autosummary>:1
msgid ":obj:`CheckedTask <linkcheck.director.task.CheckedTask>`\\ \\(\\)"
msgstr ""

#: ../../../linkcheck/director/task.py:docstring of linkcheck.director.task.CheckedTask:1:<autosummary>:1
#: ../../../linkcheck/director/task.py:docstring of linkcheck.director.task.CheckedTask:1
msgid "Stoppable URL check task, handling error conditions while running."
msgstr ""

#: ../../../linkcheck/director/task.py:docstring of linkcheck.director.task.CheckedTask:1:<autosummary>:1
msgid ":obj:`LoggedCheckedTask <linkcheck.director.task.LoggedCheckedTask>`\\ \\(logger\\)"
msgstr ""

#: ../../../linkcheck/director/task.py:docstring of linkcheck.director.task.CheckedTask:1:<autosummary>:1
#: ../../../linkcheck/director/task.py:docstring of linkcheck.director.task.LoggedCheckedTask:1
msgid "URL check task with a logger instance and internal error handling."
msgstr ""

#: ../../../linkcheck/director/task.py:docstring of linkcheck.director.task.CheckedTask:1
msgid "Bases: :class:`linkcheck.threader.StoppableThread`"
msgstr ""

#: ../../../linkcheck/director/task.py:docstring of linkcheck.director.task.CheckedTask:3
#: ../../../linkcheck/threader.py:docstring of linkcheck.threader.StoppableThread:4
msgid "Store stop event."
msgstr ""

#: ../../../linkcheck/director/task.py:docstring of linkcheck.director.task.CheckedTask.internal_error:1
#: ../../../linkcheck/director/task.py:docstring of linkcheck.director.task.CheckedTask.run_checked:1
msgid "Overload in subclass."
msgstr ""

#: ../../../linkcheck/director/task.py:docstring of linkcheck.director.task.CheckedTask.run:1
msgid "Handle keyboard interrupt and other errors."
msgstr ""

#: ../../../linkcheck/director/task.py:docstring of linkcheck.director.task.LoggedCheckedTask:3
msgid "Initialize super instance and store given logger."
msgstr ""

#: ../../../linkcheck/director/task.py:docstring of linkcheck.director.task.LoggedCheckedTask.internal_error:1
msgid "Log an internal error on console and the logger."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.dummy.rst:2
msgid "linkcheck.dummy"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.dummy.rst:21:<autosummary>:1
msgid ":obj:`dummy <linkcheck.dummy.dummy>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.dummy.rst:21:<autosummary>:1
#: ../../../linkcheck/dummy.py:docstring of linkcheck.dummy.dummy:1
msgid "Ignore any positional or keyword arguments, return None."
msgstr ""

#: ../../../linkcheck/dummy.py:docstring of linkcheck.dummy.Dummy:1:<autosummary>:1
msgid ":obj:`Dummy <linkcheck.dummy.Dummy>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../../linkcheck/dummy.py:docstring of linkcheck.dummy.Dummy:1:<autosummary>:1
msgid "A dummy object ignores all access to it."
msgstr ""

#: ../../../linkcheck/dummy.py:docstring of linkcheck.dummy.Dummy:1
msgid "A dummy object ignores all access to it. Useful for testing."
msgstr ""

#: ../../../linkcheck/dummy.py:docstring of linkcheck.dummy.Dummy:3
msgid "Return None"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.fileutil.rst:2
msgid "linkcheck.fileutil"
msgstr ""

#: ../../../linkcheck/fileutil.py:docstring of linkcheck.fileutil.get_mtime:1:<autosummary>:1
msgid ":obj:`get_mtime <linkcheck.fileutil.get_mtime>`\\ \\(filename\\)"
msgstr ""

#: ../../../linkcheck/fileutil.py:docstring of linkcheck.fileutil.get_mtime:1:<autosummary>:1
#: ../../../linkcheck/fileutil.py:docstring of linkcheck.fileutil.get_mtime:1
msgid "Return modification time of filename or zero on errors."
msgstr ""

#: ../../../linkcheck/fileutil.py:docstring of linkcheck.fileutil.get_mtime:1:<autosummary>:1
msgid ":obj:`get_size <linkcheck.fileutil.get_size>`\\ \\(filename\\)"
msgstr ""

#: ../../../linkcheck/fileutil.py:docstring of linkcheck.fileutil.get_mtime:1:<autosummary>:1
#: ../../../linkcheck/fileutil.py:docstring of linkcheck.fileutil.get_size:1
msgid "Return file size in Bytes, or -1 on error."
msgstr ""

#: ../../../linkcheck/fileutil.py:docstring of linkcheck.fileutil.get_mtime:1:<autosummary>:1
msgid ":obj:`get_temp_file <linkcheck.fileutil.get_temp_file>`\\ \\(\\[mode\\]\\)"
msgstr ""

#: ../../../linkcheck/fileutil.py:docstring of linkcheck.fileutil.get_mtime:1:<autosummary>:1
#: ../../../linkcheck/fileutil.py:docstring of linkcheck.fileutil.get_temp_file:1
msgid "Return tuple (open file object, filename) pointing to a temporary file."
msgstr ""

#: ../../../linkcheck/fileutil.py:docstring of linkcheck.fileutil.get_mtime:1:<autosummary>:1
msgid ":obj:`has_module <linkcheck.fileutil.has_module>`\\ \\(name\\[\\, without\\_error\\]\\)"
msgstr ""

#: ../../../linkcheck/fileutil.py:docstring of linkcheck.fileutil.get_mtime:1:<autosummary>:1
msgid "Test if given module can be imported."
msgstr ""

#: ../../../linkcheck/fileutil.py:docstring of linkcheck.fileutil.get_mtime:1:<autosummary>:1
msgid ":obj:`is_accessable_by_others <linkcheck.fileutil.is_accessable_by_others>`\\ \\(filename\\)"
msgstr ""

#: ../../../linkcheck/fileutil.py:docstring of linkcheck.fileutil.get_mtime:1:<autosummary>:1
#: ../../../linkcheck/fileutil.py:docstring of linkcheck.fileutil.is_accessable_by_others:1
msgid "Check if file is group or world accessable."
msgstr ""

#: ../../../linkcheck/fileutil.py:docstring of linkcheck.fileutil.get_mtime:1:<autosummary>:1
msgid ":obj:`is_readable <linkcheck.fileutil.is_readable>`\\ \\(filename\\)"
msgstr ""

#: ../../../linkcheck/fileutil.py:docstring of linkcheck.fileutil.get_mtime:1:<autosummary>:1
#: ../../../linkcheck/fileutil.py:docstring of linkcheck.fileutil.is_readable:1
msgid "Check if file is a regular file and is readable."
msgstr ""

#: ../../../linkcheck/fileutil.py:docstring of linkcheck.fileutil.get_mtime:1:<autosummary>:1
msgid ":obj:`is_tty <linkcheck.fileutil.is_tty>`\\ \\(fp\\)"
msgstr ""

#: ../../../linkcheck/fileutil.py:docstring of linkcheck.fileutil.get_mtime:1:<autosummary>:1
#: ../../../linkcheck/fileutil.py:docstring of linkcheck.fileutil.is_tty:1
msgid "Check if is a file object pointing to a TTY."
msgstr ""

#: ../../../linkcheck/fileutil.py:docstring of linkcheck.fileutil.get_mtime:1:<autosummary>:1
msgid ":obj:`is_writable_by_others <linkcheck.fileutil.is_writable_by_others>`\\ \\(filename\\)"
msgstr ""

#: ../../../linkcheck/fileutil.py:docstring of linkcheck.fileutil.get_mtime:1:<autosummary>:1
#: ../../../linkcheck/fileutil.py:docstring of linkcheck.fileutil.is_writable_by_others:1
msgid "Check if file or directory is world writable."
msgstr ""

#: ../../../linkcheck/fileutil.py:docstring of linkcheck.fileutil.get_mtime:1:<autosummary>:1
msgid ":obj:`path_safe <linkcheck.fileutil.path_safe>`\\ \\(path\\)"
msgstr ""

#: ../../../linkcheck/fileutil.py:docstring of linkcheck.fileutil.get_mtime:1:<autosummary>:1
#: ../../../linkcheck/fileutil.py:docstring of linkcheck.fileutil.path_safe:1
msgid "Ensure path string is compatible with the platform file system encoding."
msgstr ""

#: ../../../linkcheck/fileutil.py:docstring of linkcheck.fileutil.has_module:1
msgid "Test if given module can be imported. :param without_error: True if module must not throw any errors when importing :return: flag if import is successful :rtype: bool"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.ftpparse.rst:2
msgid "linkcheck.ftpparse"
msgstr ""

#: ../../../linkcheck/ftpparse.py:docstring of linkcheck.ftpparse:3
msgid "See also http://cr.yp.to/ftpparse.html"
msgstr ""

#: ../../../linkcheck/ftpparse.py:docstring of linkcheck.ftpparse.ftpparse:1:<autosummary>:1
msgid ":obj:`ftpparse <linkcheck.ftpparse.ftpparse>`\\ \\(line\\)"
msgstr ""

#: ../../../linkcheck/ftpparse.py:docstring of linkcheck.ftpparse.ftpparse:1:<autosummary>:1
#: ../../../linkcheck/ftpparse.py:docstring of linkcheck.ftpparse.ftpparse:1
msgid "Parse a FTP list line into a dictionary with attributes: name - name of file (string) trycwd - False if cwd is definitely pointless, True otherwise tryretr - False if retr is definitely pointless, True otherwise"
msgstr ""

#: ../../../linkcheck/ftpparse.py:docstring of linkcheck.ftpparse.ftpparse:1:<autosummary>:1
msgid ":obj:`ismonth <linkcheck.ftpparse.ismonth>`\\ \\(txt\\)"
msgstr ""

#: ../../../linkcheck/ftpparse.py:docstring of linkcheck.ftpparse.ftpparse:1:<autosummary>:1
#: ../../../linkcheck/ftpparse.py:docstring of linkcheck.ftpparse.ismonth:1
msgid "Check if given text is a month name."
msgstr ""

#: ../../../linkcheck/ftpparse.py:docstring of linkcheck.ftpparse.ftpparse:6
msgid "If the line has no file information, None is returned"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.htmlutil.rst:2
msgid "linkcheck.htmlutil"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.htmlutil.rst:33:<autosummary>:1
msgid ":obj:`linkcheck.htmlutil.htmlsoup <linkcheck.htmlutil.htmlsoup>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.htmlutil.rst:33:<autosummary>:1
#: ../../../linkcheck/htmlutil/htmlsoup.py:docstring of linkcheck.htmlutil.htmlsoup:1
msgid "HTML parser implemented using Beautiful Soup and html.parser."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.htmlutil.rst:33:<autosummary>:1
msgid ":obj:`linkcheck.htmlutil.linkparse <linkcheck.htmlutil.linkparse>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.htmlutil.rst:33:<autosummary>:1
#: ../../../linkcheck/htmlutil/linkparse.py:docstring of linkcheck.htmlutil.linkparse:1
msgid "Find link tags in HTML text."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.htmlutil.rst:33:<autosummary>:1
msgid ":obj:`linkcheck.htmlutil.loginformsearch <linkcheck.htmlutil.loginformsearch>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.htmlutil.rst:33:<autosummary>:1
#: ../../../linkcheck/htmlutil/loginformsearch.py:docstring of linkcheck.htmlutil.loginformsearch:1
msgid "HTML form utils"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.htmlutil.htmlsoup.rst:2
msgid "linkcheck.htmlutil.htmlsoup"
msgstr ""

#: ../../../linkcheck/htmlutil/htmlsoup.py:docstring of linkcheck.htmlutil.htmlsoup.make_soup:1:<autosummary>:1
msgid ":obj:`make_soup <linkcheck.htmlutil.htmlsoup.make_soup>`\\ \\(markup\\[\\, from\\_encoding\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.htmlutil.linkparse.rst:2
msgid "linkcheck.htmlutil.linkparse"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.htmlutil.linkparse.rst:24:<autosummary>:1
msgid ":obj:`find_links <linkcheck.htmlutil.linkparse.find_links>`\\ \\(soup\\, callback\\, tags\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.htmlutil.linkparse.rst:24:<autosummary>:1
msgid "Parse into content and search for URLs to check."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.htmlutil.linkparse.rst:24:<autosummary>:1
msgid ":obj:`is_form_get <linkcheck.htmlutil.linkparse.is_form_get>`\\ \\(attr\\, attrs\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.htmlutil.linkparse.rst:24:<autosummary>:1
#: ../../../linkcheck/htmlutil/linkparse.py:docstring of linkcheck.htmlutil.linkparse.is_form_get:1
msgid "Check if this is a GET form action URL."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.htmlutil.linkparse.rst:24:<autosummary>:1
msgid ":obj:`is_meta_url <linkcheck.htmlutil.linkparse.is_meta_url>`\\ \\(attr\\, attrs\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.htmlutil.linkparse.rst:24:<autosummary>:1
#: ../../../linkcheck/htmlutil/linkparse.py:docstring of linkcheck.htmlutil.linkparse.is_meta_url:1
msgid "Check if the meta attributes contain a URL."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.htmlutil.linkparse.rst:24:<autosummary>:1
msgid ":obj:`strip_c_comments <linkcheck.htmlutil.linkparse.strip_c_comments>`\\ \\(text\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.htmlutil.linkparse.rst:24:<autosummary>:1
msgid "Remove C/CSS-style comments from text."
msgstr ""

#: ../../../linkcheck/htmlutil/linkparse.py:docstring of linkcheck.htmlutil.linkparse.LinkFinder:1:<autosummary>:1
msgid ":obj:`LinkFinder <linkcheck.htmlutil.linkparse.LinkFinder>`\\ \\(callback\\, tags\\)"
msgstr ""

#: ../../../linkcheck/htmlutil/linkparse.py:docstring of linkcheck.htmlutil.linkparse.LinkFinder:1:<autosummary>:1
#: ../../../linkcheck/htmlutil/linkparse.py:docstring of linkcheck.htmlutil.linkparse.LinkFinder:1
msgid "Find HTML links, and apply them to the callback function with the format (url, lineno, column, name, codebase)."
msgstr ""

#: ../../../linkcheck/htmlutil/linkparse.py:docstring of linkcheck.htmlutil.linkparse.LinkFinder:4
msgid "Store content in buffer and initialize URL list."
msgstr ""

#: ../../../linkcheck/htmlutil/linkparse.py:docstring of linkcheck.htmlutil.linkparse.LinkFinder.found_url:1
msgid "Add newly found URL to queue."
msgstr ""

#: ../../../linkcheck/htmlutil/linkparse.py:docstring of linkcheck.htmlutil.linkparse.LinkFinder.get_link_name:1
msgid "Parse attrs for link name. Return name of link."
msgstr ""

#: ../../../linkcheck/htmlutil/linkparse.py:docstring of linkcheck.htmlutil.linkparse.LinkFinder.html_element:1
msgid "Search for links and store found URLs in a list."
msgstr ""

#: ../../../linkcheck/htmlutil/linkparse.py:docstring of linkcheck.htmlutil.linkparse.LinkFinder.parse_tag:1
msgid "Add given url data to url list."
msgstr ""

#: ../../../linkcheck/htmlutil/linkparse.py:docstring of linkcheck.htmlutil.linkparse.find_links:1
msgid "Parse into content and search for URLs to check. When a URL is found it is passed to the supplied callback."
msgstr ""

#: ../../../linkcheck/htmlutil/linkparse.py:docstring of linkcheck.htmlutil.linkparse.strip_c_comments:1
msgid "Remove C/CSS-style comments from text. Note that this method also deliberately removes comments inside of strings."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.htmlutil.loginformsearch.rst:2
msgid "linkcheck.htmlutil.loginformsearch"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.htmlutil.loginformsearch.rst:21:<autosummary>:1
msgid ":obj:`search_form <linkcheck.htmlutil.loginformsearch.search_form>`\\ \\(content\\, cgiuser\\, cgipassword\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.htmlutil.loginformsearch.rst:21:<autosummary>:1
msgid "Search for a HTML form in the given HTML content that has input elements with name attributes that match cgiuser and/or cgipassword."
msgstr ""

#: ../../../linkcheck/htmlutil/loginformsearch.py:docstring of linkcheck.htmlutil.loginformsearch.Form:1:<autosummary>:1
msgid ":obj:`Form <linkcheck.htmlutil.loginformsearch.Form>`\\ \\(url\\)"
msgstr ""

#: ../../../linkcheck/htmlutil/loginformsearch.py:docstring of linkcheck.htmlutil.loginformsearch.Form:1:<autosummary>:1
#: ../../../linkcheck/htmlutil/loginformsearch.py:docstring of linkcheck.htmlutil.loginformsearch.Form:1
msgid "Store HTML form URL and form data."
msgstr ""

#: ../../../linkcheck/htmlutil/loginformsearch.py:docstring of linkcheck.htmlutil.loginformsearch.Form:3
msgid "Set URL and empty form data."
msgstr ""

#: ../../../linkcheck/htmlutil/loginformsearch.py:docstring of linkcheck.htmlutil.loginformsearch.Form.add_value:1
msgid "Add a form value."
msgstr ""

#: ../../../linkcheck/htmlutil/loginformsearch.py:docstring of linkcheck.htmlutil.loginformsearch.search_form:1
msgid "Search for a HTML form in the given HTML content that has input elements with name attributes that match cgiuser and/or cgipassword. If no such form is found return None."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.httputil.rst:2
msgid "linkcheck.httputil"
msgstr ""

#: ../../../linkcheck/httputil.py:docstring of linkcheck.httputil.asn1_generaltime_to_seconds:1:<autosummary>:1
msgid ":obj:`asn1_generaltime_to_seconds <linkcheck.httputil.asn1_generaltime_to_seconds>`\\ \\(timestr\\)"
msgstr ""

#: ../../../linkcheck/httputil.py:docstring of linkcheck.httputil.asn1_generaltime_to_seconds:1:<autosummary>:1
#: ../../../linkcheck/httputil.py:docstring of linkcheck.httputil.asn1_generaltime_to_seconds:1
msgid "The given string has one of the following formats YYYYMMDDhhmmssZ YYYYMMDDhhmmss+hhmm YYYYMMDDhhmmss-hhmm"
msgstr ""

#: ../../../linkcheck/httputil.py:docstring of linkcheck.httputil.asn1_generaltime_to_seconds:1:<autosummary>:1
msgid ":obj:`encode_base64 <linkcheck.httputil.encode_base64>`\\ \\(s\\)"
msgstr ""

#: ../../../linkcheck/httputil.py:docstring of linkcheck.httputil.asn1_generaltime_to_seconds:1:<autosummary>:1
#: ../../../linkcheck/httputil.py:docstring of linkcheck.httputil.encode_base64:1
msgid "Encode given string in base64, excluding trailing newlines."
msgstr ""

#: ../../../linkcheck/httputil.py:docstring of linkcheck.httputil.asn1_generaltime_to_seconds:1:<autosummary>:1
msgid ":obj:`get_content_type <linkcheck.httputil.get_content_type>`\\ \\(headers\\)"
msgstr ""

#: ../../../linkcheck/httputil.py:docstring of linkcheck.httputil.asn1_generaltime_to_seconds:1:<autosummary>:1
#: ../../../linkcheck/httputil.py:docstring of linkcheck.httputil.get_content_type:1
msgid "Get the MIME type from the Content-Type header value, or 'application/octet-stream' if not found."
msgstr ""

#: ../../../linkcheck/httputil.py:docstring of linkcheck.httputil.asn1_generaltime_to_seconds:1:<autosummary>:1
msgid ":obj:`x509_to_dict <linkcheck.httputil.x509_to_dict>`\\ \\(x509\\)"
msgstr ""

#: ../../../linkcheck/httputil.py:docstring of linkcheck.httputil.asn1_generaltime_to_seconds:1:<autosummary>:1
#: ../../../linkcheck/httputil.py:docstring of linkcheck.httputil.x509_to_dict:1
msgid "Parse a x509 pyopenssl object to a dictionary with keys subject, subjectAltName and optional notAfter."
msgstr ""

#: ../../../linkcheck/httputil.py:docstring of linkcheck.httputil.asn1_generaltime_to_seconds:6
msgid "a datetime object or None on error"
msgstr ""

#: ../../../linkcheck/httputil.py:docstring of linkcheck.httputil.get_content_type:4
msgid "MIME type"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:2
msgid "linkcheck.i18n"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:31:<autosummary>:1
msgid ":obj:`get_encoded_writer <linkcheck.i18n.get_encoded_writer>`\\ \\(\\[out\\, encoding\\, errors\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:31:<autosummary>:1
#: ../../../linkcheck/i18n.py:docstring of linkcheck.i18n.get_encoded_writer:1
msgid "Get wrapped output writer with given encoding and error handling."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:31:<autosummary>:1
msgid ":obj:`get_headers_lang <linkcheck.i18n.get_headers_lang>`\\ \\(headers\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:31:<autosummary>:1
#: ../../../linkcheck/i18n.py:docstring of linkcheck.i18n.get_headers_lang:1
msgid "Return preferred supported language in given HTTP headers."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:31:<autosummary>:1
msgid ":obj:`get_lang <linkcheck.i18n.get_lang>`\\ \\(lang\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:31:<autosummary>:1
#: ../../../linkcheck/i18n.py:docstring of linkcheck.i18n.get_lang:1
msgid "Return lang if it is supported, or the default language."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:31:<autosummary>:1
msgid ":obj:`get_locale <linkcheck.i18n.get_locale>`\\ \\(\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:31:<autosummary>:1
msgid "Search the default platform locale and norm it."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:31:<autosummary>:1
msgid ":obj:`get_translator <linkcheck.i18n.get_translator>`\\ \\(domain\\, directory\\[\\, ...\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:31:<autosummary>:1
#: ../../../linkcheck/i18n.py:docstring of linkcheck.i18n.get_translator:1
msgid "Search the appropriate GNUTranslations class."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:31:<autosummary>:1
msgid ":obj:`init <linkcheck.i18n.init>`\\ \\(domain\\, directory\\[\\, loc\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:31:<autosummary>:1
msgid "Initialize this gettext i18n module."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:31:<autosummary>:1
msgid ":obj:`install_builtin <linkcheck.i18n.install_builtin>`\\ \\(translator\\, do\\_unicode\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:31:<autosummary>:1
#: ../../../linkcheck/i18n.py:docstring of linkcheck.i18n.install_builtin:1
msgid "Install _() and _n() gettext methods into default namespace."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:31:<autosummary>:1
msgid ":obj:`install_language <linkcheck.i18n.install_language>`\\ \\(language\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:31:<autosummary>:1
#: ../../../linkcheck/i18n.py:docstring of linkcheck.i18n.install_language:1
msgid "Install translation service routines into default namespace."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:31:<autosummary>:1
msgid ":obj:`lang_name <linkcheck.i18n.lang_name>`\\ \\(lang\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:31:<autosummary>:1
#: ../../../linkcheck/i18n.py:docstring of linkcheck.i18n.lang_name:1
msgid "Return full name of given language."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:31:<autosummary>:1
msgid ":obj:`lang_trans <linkcheck.i18n.lang_trans>`\\ \\(lang\\, curlang\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:31:<autosummary>:1
#: ../../../linkcheck/i18n.py:docstring of linkcheck.i18n.lang_trans:1
msgid "Return translated full name of given language."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:31:<autosummary>:1
msgid ":obj:`norm_locale <linkcheck.i18n.norm_locale>`\\ \\(loc\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.i18n.rst:31:<autosummary>:1
#: ../../../linkcheck/i18n.py:docstring of linkcheck.i18n.norm_locale:1
msgid "Normalize a locale."
msgstr ""

#: ../../../linkcheck/i18n.py:docstring of linkcheck.i18n.NullTranslator:1:<autosummary>:1
msgid ":obj:`NullTranslator <linkcheck.i18n.NullTranslator>`\\ \\(\\[fp\\]\\)"
msgstr ""

#: ../../../linkcheck/i18n.py:docstring of linkcheck.i18n.NullTranslator:1:<autosummary>:1
#: ../../../linkcheck/i18n.py:docstring of linkcheck.i18n.NullTranslator:1
msgid "A dummy translation class always installing its gettext methods into the default namespace."
msgstr ""

#: ../../../linkcheck/i18n.py:docstring of linkcheck.i18n.NullTranslator:1:<autosummary>:1
msgid ":obj:`Translator <linkcheck.i18n.Translator>`\\ \\(\\[fp\\]\\)"
msgstr ""

#: ../../../linkcheck/i18n.py:docstring of linkcheck.i18n.NullTranslator:1:<autosummary>:1
#: ../../../linkcheck/i18n.py:docstring of linkcheck.i18n.Translator:1
msgid "A translation class always installing its gettext methods into the default namespace."
msgstr ""

#: ../../../linkcheck/i18n.py:docstring of linkcheck.i18n.NullTranslator:1
msgid "Bases: :class:`gettext.NullTranslations`"
msgstr ""

#: ../../../linkcheck/i18n.py:docstring of linkcheck.i18n.NullTranslator.install:1
#: ../../../linkcheck/i18n.py:docstring of linkcheck.i18n.Translator.install:1
msgid "Install gettext methods into the default namespace."
msgstr ""

#: ../../../linkcheck/i18n.py:docstring of linkcheck.i18n.Translator:1
msgid "Bases: :class:`gettext.GNUTranslations`"
msgstr ""

#: ../../../linkcheck/i18n.py:docstring of linkcheck.i18n.get_locale:1
msgid "Search the default platform locale and norm it. :returns (locale, encoding) :rtype (string, string)"
msgstr ""

#: ../../../linkcheck/i18n.py:docstring of linkcheck.i18n.init:1
msgid "Initialize this gettext i18n module. Searches for supported languages and installs the gettext translator class."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:2
msgid "linkcheck.lc\\_cgi"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
msgid ":obj:`application <linkcheck.lc_cgi.application>`\\ \\(environ\\, start\\_response\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
#: ../../../linkcheck/lc_cgi.py:docstring of linkcheck.lc_cgi.application:1
msgid "WSGI interface: start an URL check."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
msgid ":obj:`checkform <linkcheck.lc_cgi.checkform>`\\ \\(form\\, env\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
msgid "Check form data."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
msgid ":obj:`checklink <linkcheck.lc_cgi.checklink>`\\ \\(form\\, env\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
#: ../../../linkcheck/lc_cgi.py:docstring of linkcheck.lc_cgi.checklink:1
msgid "Validates the CGI form and checks the given links."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
msgid ":obj:`dump <linkcheck.lc_cgi.dump>`\\ \\(env\\, form\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
#: ../../../linkcheck/lc_cgi.py:docstring of linkcheck.lc_cgi.dump:1
msgid "Log environment and form."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
msgid ":obj:`encode <linkcheck.lc_cgi.encode>`\\ \\(s\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
#: ../../../linkcheck/lc_cgi.py:docstring of linkcheck.lc_cgi.encode:1
msgid "Encode given string in HTML encoding."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
msgid ":obj:`format_error <linkcheck.lc_cgi.format_error>`\\ \\(why\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
#: ../../../linkcheck/lc_cgi.py:docstring of linkcheck.lc_cgi.format_error:1
msgid "Format standard error page."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
msgid ":obj:`formvalue <linkcheck.lc_cgi.formvalue>`\\ \\(form\\, key\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
#: ../../../linkcheck/lc_cgi.py:docstring of linkcheck.lc_cgi.formvalue:1
msgid "Get value with given key from WSGI form."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
msgid ":obj:`get_configuration <linkcheck.lc_cgi.get_configuration>`\\ \\(form\\, out\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
#: ../../../linkcheck/lc_cgi.py:docstring of linkcheck.lc_cgi.get_configuration:1
msgid "Initialize a CGI configuration."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
msgid ":obj:`get_host_name <linkcheck.lc_cgi.get_host_name>`\\ \\(form\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
#: ../../../linkcheck/lc_cgi.py:docstring of linkcheck.lc_cgi.get_host_name:1
msgid "Return host name of given URL."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
msgid ":obj:`get_response_headers <linkcheck.lc_cgi.get_response_headers>`\\ \\(\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
#: ../../../linkcheck/lc_cgi.py:docstring of linkcheck.lc_cgi.get_response_headers:1
msgid "Get list of response headers in key-value form."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
msgid ":obj:`log <linkcheck.lc_cgi.log>`\\ \\(env\\, msg\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
#: ../../../linkcheck/lc_cgi.py:docstring of linkcheck.lc_cgi.log:1
msgid "Log message to WSGI error output."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
msgid ":obj:`start_check <linkcheck.lc_cgi.start_check>`\\ \\(aggregate\\, out\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:32:<autosummary>:1
#: ../../../linkcheck/lc_cgi.py:docstring of linkcheck.lc_cgi.start_check:1
msgid "Start checking in background and write encoded output to out."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:42:<autosummary>:1
msgid ":obj:`ThreadsafeIO <linkcheck.lc_cgi.ThreadsafeIO>`\\ \\(\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lc_cgi.rst:42:<autosummary>:1
#: ../../../linkcheck/lc_cgi.py:docstring of linkcheck.lc_cgi.ThreadsafeIO:1
msgid "Thread-safe unicode I/O class."
msgstr ""

#: ../../../linkcheck/lc_cgi.py:docstring of linkcheck.lc_cgi.LCFormError:1:<autosummary>:1
msgid ":obj:`LCFormError <linkcheck.lc_cgi.LCFormError>`\\"
msgstr ""

#: ../../../linkcheck/lc_cgi.py:docstring of linkcheck.lc_cgi.LCFormError:1:<autosummary>:1
#: ../../../linkcheck/lc_cgi.py:docstring of linkcheck.lc_cgi.LCFormError:1
msgid "Form related errors."
msgstr ""

#: ../../../linkcheck/lc_cgi.py:docstring of linkcheck.lc_cgi.ThreadsafeIO:3
msgid "Initialize buffer."
msgstr ""

#: ../../../linkcheck/lc_cgi.py:docstring of linkcheck.lc_cgi.ThreadsafeIO.close:1
msgid "Reset buffer and close this I/O object."
msgstr ""

#: ../../../linkcheck/lc_cgi.py:docstring of linkcheck.lc_cgi.ThreadsafeIO.get_data:1
msgid "Get bufferd unicode data."
msgstr ""

#: ../../../linkcheck/lc_cgi.py:docstring of linkcheck.lc_cgi.ThreadsafeIO.write:1
msgid "Write given unicode data to buffer."
msgstr ""

#: ../../../linkcheck/lc_cgi.py:docstring of linkcheck.lc_cgi.checkform:1
msgid "Check form data. throw exception on error Be sure to NOT print out any user-given data as HTML code, so use only plain strings as exception text."
msgstr ""

#: ../../../linkcheck/lc_cgi.py:docstring of linkcheck.lc_cgi.format_error:3
msgid "error message"
msgstr ""

#: ../../../linkcheck/lc_cgi.py:docstring of linkcheck.lc_cgi.format_error:5
msgid "HTML page content"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.loader.rst:2
msgid "linkcheck.loader"
msgstr ""

#: ../../../linkcheck/loader.py:docstring of linkcheck.loader:3
msgid "Example usage::"
msgstr ""

#: ../../../linkcheck/loader.py:docstring of linkcheck.loader.check_writable_by_others:1:<autosummary>:1
msgid ":obj:`check_writable_by_others <linkcheck.loader.check_writable_by_others>`\\ \\(filename\\)"
msgstr ""

#: ../../../linkcheck/loader.py:docstring of linkcheck.loader.check_writable_by_others:1:<autosummary>:1
msgid "Check if file is writable by others on POSIX systems."
msgstr ""

#: ../../../linkcheck/loader.py:docstring of linkcheck.loader.check_writable_by_others:1:<autosummary>:1
msgid ":obj:`get_folder_modules <linkcheck.loader.get_folder_modules>`\\ \\(folder\\, parentpackage\\)"
msgstr ""

#: ../../../linkcheck/loader.py:docstring of linkcheck.loader.check_writable_by_others:1:<autosummary>:1
#: ../../../linkcheck/loader.py:docstring of linkcheck.loader.get_folder_modules:1
msgid "."
msgstr ""

#: ../../../linkcheck/loader.py:docstring of linkcheck.loader.check_writable_by_others:1:<autosummary>:1
msgid ":obj:`get_importable_files <linkcheck.loader.get_importable_files>`\\ \\(folder\\)"
msgstr ""

#: ../../../linkcheck/loader.py:docstring of linkcheck.loader.check_writable_by_others:1:<autosummary>:1
#: ../../../linkcheck/loader.py:docstring of linkcheck.loader.get_importable_files:1
msgid "Find all module files in the given folder that end with '.py' and don't start with an underscore."
msgstr ""

#: ../../../linkcheck/loader.py:docstring of linkcheck.loader.check_writable_by_others:1:<autosummary>:1
msgid ":obj:`get_module_plugins <linkcheck.loader.get_module_plugins>`\\ \\(module\\, classes\\)"
msgstr ""

#: ../../../linkcheck/loader.py:docstring of linkcheck.loader.check_writable_by_others:1:<autosummary>:1
msgid "Return all subclasses of a class in the module."
msgstr ""

#: ../../../linkcheck/loader.py:docstring of linkcheck.loader.check_writable_by_others:1:<autosummary>:1
msgid ":obj:`get_package_modules <linkcheck.loader.get_package_modules>`\\ \\(packagename\\)"
msgstr ""

#: ../../../linkcheck/loader.py:docstring of linkcheck.loader.check_writable_by_others:1:<autosummary>:1
msgid "Find all valid modules in the given package which must be a folder in the same directory as this loader.py module."
msgstr ""

#: ../../../linkcheck/loader.py:docstring of linkcheck.loader.check_writable_by_others:1:<autosummary>:1
msgid ":obj:`get_plugins <linkcheck.loader.get_plugins>`\\ \\(modules\\, classes\\)"
msgstr ""

#: ../../../linkcheck/loader.py:docstring of linkcheck.loader.check_writable_by_others:1:<autosummary>:1
#: ../../../linkcheck/loader.py:docstring of linkcheck.loader.get_plugins:1
msgid "Find all given (sub-)classes in all modules."
msgstr ""

#: ../../../linkcheck/loader.py:docstring of linkcheck.loader.check_writable_by_others:1:<autosummary>:1
msgid ":obj:`is_frozen <linkcheck.loader.is_frozen>`\\ \\(\\)"
msgstr ""

#: ../../../linkcheck/loader.py:docstring of linkcheck.loader.check_writable_by_others:1:<autosummary>:1
#: ../../../linkcheck/loader.py:docstring of linkcheck.loader.is_frozen:1
msgid "Return True if running inside a py2exe- or py2app-generated executable."
msgstr ""

#: ../../../linkcheck/loader.py:docstring of linkcheck.loader.check_writable_by_others:1
msgid "Check if file is writable by others on POSIX systems. On non-POSIX systems the check is ignored."
msgstr ""

#: ../../../linkcheck/loader.py:docstring of linkcheck.loader.get_importable_files:4
msgid "module names"
msgstr ""

#: ../../../linkcheck/loader.py:docstring of linkcheck.loader.get_module_plugins:1
msgid "Return all subclasses of a class in the module. If the module defines __all__, only those entries will be searched, otherwise all objects not starting with '_' will be searched."
msgstr ""

#: ../../../linkcheck/loader.py:docstring of linkcheck.loader.get_package_modules:1
msgid "Find all valid modules in the given package which must be a folder in the same directory as this loader.py module. A valid module has a .py extension, and is importable."
msgstr ""

#: ../../../linkcheck/loader.py:docstring of linkcheck.loader.get_package_modules:5
msgid "all loaded valid modules"
msgstr ""

#: ../../../linkcheck/loader.py:docstring of linkcheck.loader.get_plugins:3
msgid "the modules to search"
msgstr ""

#: ../../../linkcheck/loader.py:docstring of linkcheck.loader.get_plugins:5
msgid "found classes"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lock.rst:2
msgid "linkcheck.lock"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lock.rst:22:<autosummary>:1
msgid ":obj:`get_lock <linkcheck.lock.get_lock>`\\ \\(name\\[\\, debug\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lock.rst:22:<autosummary>:1
#: ../../../linkcheck/lock.py:docstring of linkcheck.lock.get_lock:1
msgid "Get a new lock."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lock.rst:22:<autosummary>:1
msgid ":obj:`get_semaphore <linkcheck.lock.get_semaphore>`\\ \\(name\\[\\, value\\, debug\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.lock.rst:22:<autosummary>:1
#: ../../../linkcheck/lock.py:docstring of linkcheck.lock.get_semaphore:1
msgid "Get a new semaphore."
msgstr ""

#: ../../../linkcheck/lock.py:docstring of linkcheck.lock.DebugLock:1:<autosummary>:1
msgid ":obj:`DebugLock <linkcheck.lock.DebugLock>`\\ \\(lock\\, name\\)"
msgstr ""

#: ../../../linkcheck/lock.py:docstring of linkcheck.lock.DebugLock:1:<autosummary>:1
#: ../../../linkcheck/lock.py:docstring of linkcheck.lock.DebugLock:1
msgid "Debugging lock class."
msgstr ""

#: ../../../linkcheck/lock.py:docstring of linkcheck.lock.DebugLock:3
msgid "Store lock and name parameters."
msgstr ""

#: ../../../linkcheck/lock.py:docstring of linkcheck.lock.DebugLock.acquire:1
msgid "Acquire lock."
msgstr ""

#: ../../../linkcheck/lock.py:docstring of linkcheck.lock.DebugLock.release:1
msgid "Release lock."
msgstr ""

#: ../../../linkcheck/lock.py:docstring of linkcheck.lock.get_lock:3
#: ../../../linkcheck/lock.py:docstring of linkcheck.lock.get_semaphore:5
msgid "if True, acquire() and release() will have debug messages"
msgstr ""

#: ../../../linkcheck/lock.py:docstring of linkcheck.lock.get_lock:5
msgid "a lock object"
msgstr ""

#: ../../../linkcheck/lock.py:docstring of linkcheck.lock.get_semaphore:3
msgid "if not None, a BoundedSemaphore will be used"
msgstr ""

#: ../../../linkcheck/lock.py:docstring of linkcheck.lock.get_semaphore:7
msgid "a semaphore object"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.log.rst:2
msgid "linkcheck.log"
msgstr ""

#: ../../../linkcheck/log.py:docstring of linkcheck.log.critical:1:<autosummary>:1
msgid ":obj:`critical <linkcheck.log.critical>`\\ \\(logname\\, msg\\, \\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../../linkcheck/log.py:docstring of linkcheck.log.critical:1:<autosummary>:1
#: ../../../linkcheck/log.py:docstring of linkcheck.log.critical:1
msgid "Log a critical error."
msgstr ""

#: ../../../linkcheck/log.py:docstring of linkcheck.log.critical:1:<autosummary>:1
msgid ":obj:`debug <linkcheck.log.debug>`\\ \\(logname\\, msg\\, \\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../../linkcheck/log.py:docstring of linkcheck.log.critical:1:<autosummary>:1
#: ../../../linkcheck/log.py:docstring of linkcheck.log.debug:1
msgid "Log a debug message."
msgstr ""

#: ../../../linkcheck/log.py:docstring of linkcheck.log.critical:1:<autosummary>:1
msgid ":obj:`error <linkcheck.log.error>`\\ \\(logname\\, msg\\, \\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../../linkcheck/log.py:docstring of linkcheck.log.critical:1:<autosummary>:1
#: ../../../linkcheck/log.py:docstring of linkcheck.log.error:1
msgid "Log an error."
msgstr ""

#: ../../../linkcheck/log.py:docstring of linkcheck.log.critical:1:<autosummary>:1
msgid ":obj:`exception <linkcheck.log.exception>`\\ \\(logname\\, msg\\, \\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../../linkcheck/log.py:docstring of linkcheck.log.critical:1:<autosummary>:1
#: ../../../linkcheck/log.py:docstring of linkcheck.log.exception:1
msgid "Log an exception."
msgstr ""

#: ../../../linkcheck/log.py:docstring of linkcheck.log.critical:1:<autosummary>:1
msgid ":obj:`info <linkcheck.log.info>`\\ \\(logname\\, msg\\, \\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../../linkcheck/log.py:docstring of linkcheck.log.critical:1:<autosummary>:1
#: ../../../linkcheck/log.py:docstring of linkcheck.log.info:1
msgid "Log an informational message."
msgstr ""

#: ../../../linkcheck/log.py:docstring of linkcheck.log.critical:1:<autosummary>:1
msgid ":obj:`is_debug <linkcheck.log.is_debug>`\\ \\(logname\\)"
msgstr ""

#: ../../../linkcheck/log.py:docstring of linkcheck.log.critical:1:<autosummary>:1
#: ../../../linkcheck/log.py:docstring of linkcheck.log.is_debug:1
msgid "See if logger is on debug level."
msgstr ""

#: ../../../linkcheck/log.py:docstring of linkcheck.log.critical:1:<autosummary>:1
msgid ":obj:`shutdown <linkcheck.log.shutdown>`\\ \\(\\)"
msgstr ""

#: ../../../linkcheck/log.py:docstring of linkcheck.log.critical:1:<autosummary>:1
#: ../../../linkcheck/log.py:docstring of linkcheck.log.shutdown:1
msgid "Flush and close all log handlers."
msgstr ""

#: ../../../linkcheck/log.py:docstring of linkcheck.log.critical:1:<autosummary>:1
msgid ":obj:`warn <linkcheck.log.warn>`\\ \\(logname\\, msg\\, \\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../../linkcheck/log.py:docstring of linkcheck.log.critical:1:<autosummary>:1
#: ../../../linkcheck/log.py:docstring of linkcheck.log.warn:1
msgid "Log a warning."
msgstr ""

#: ../../../linkcheck/log.py:docstring of linkcheck.log.critical:3
#: ../../../linkcheck/log.py:docstring of linkcheck.log.debug:3
#: ../../../linkcheck/log.py:docstring of linkcheck.log.error:3
#: ../../../linkcheck/log.py:docstring of linkcheck.log.exception:3
#: ../../../linkcheck/log.py:docstring of linkcheck.log.info:3
#: ../../../linkcheck/log.py:docstring of linkcheck.log.warn:3
msgid "return: None"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logconf.rst:2
msgid "linkcheck.logconf"
msgstr ""

#: ../../../linkcheck/logconf.py:docstring of linkcheck.logconf.add_loghandler:1:<autosummary>:1
msgid ":obj:`add_loghandler <linkcheck.logconf.add_loghandler>`\\ \\(handler\\)"
msgstr ""

#: ../../../linkcheck/logconf.py:docstring of linkcheck.logconf.add_loghandler:1:<autosummary>:1
#: ../../../linkcheck/logconf.py:docstring of linkcheck.logconf.add_loghandler:1
msgid "Add log handler to root logger and LOG_ROOT and set formatting."
msgstr ""

#: ../../../linkcheck/logconf.py:docstring of linkcheck.logconf.add_loghandler:1:<autosummary>:1
msgid ":obj:`init_log_config <linkcheck.logconf.init_log_config>`\\ \\(\\[handler\\]\\)"
msgstr ""

#: ../../../linkcheck/logconf.py:docstring of linkcheck.logconf.add_loghandler:1:<autosummary>:1
#: ../../../linkcheck/logconf.py:docstring of linkcheck.logconf.init_log_config:1
msgid "Set up the application logging (not to be confused with check loggers)."
msgstr ""

#: ../../../linkcheck/logconf.py:docstring of linkcheck.logconf.add_loghandler:1:<autosummary>:1
msgid ":obj:`remove_loghandler <linkcheck.logconf.remove_loghandler>`\\ \\(handler\\)"
msgstr ""

#: ../../../linkcheck/logconf.py:docstring of linkcheck.logconf.add_loghandler:1:<autosummary>:1
#: ../../../linkcheck/logconf.py:docstring of linkcheck.logconf.remove_loghandler:1
msgid "Remove log handler from root logger and LOG_ROOT."
msgstr ""

#: ../../../linkcheck/logconf.py:docstring of linkcheck.logconf.add_loghandler:1:<autosummary>:1
msgid ":obj:`reset_loglevel <linkcheck.logconf.reset_loglevel>`\\ \\(\\)"
msgstr ""

#: ../../../linkcheck/logconf.py:docstring of linkcheck.logconf.add_loghandler:1:<autosummary>:1
#: ../../../linkcheck/logconf.py:docstring of linkcheck.logconf.reset_loglevel:1
msgid "Reset log level to display only warnings and errors."
msgstr ""

#: ../../../linkcheck/logconf.py:docstring of linkcheck.logconf.add_loghandler:1:<autosummary>:1
msgid ":obj:`set_debug <linkcheck.logconf.set_debug>`\\ \\(loggers\\)"
msgstr ""

#: ../../../linkcheck/logconf.py:docstring of linkcheck.logconf.add_loghandler:1:<autosummary>:1
#: ../../../linkcheck/logconf.py:docstring of linkcheck.logconf.set_debug:1
msgid "Set debugging log level."
msgstr ""

#: ../../../linkcheck/logconf.py:docstring of linkcheck.logconf.add_loghandler:1:<autosummary>:1
msgid ":obj:`set_loglevel <linkcheck.logconf.set_loglevel>`\\ \\(loggers\\, level\\)"
msgstr ""

#: ../../../linkcheck/logconf.py:docstring of linkcheck.logconf.add_loghandler:1:<autosummary>:1
#: ../../../linkcheck/logconf.py:docstring of linkcheck.logconf.set_loglevel:1
msgid "Set logging levels for given loggers."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:2
msgid "linkcheck.logger"
msgstr ""

#: ../../../linkcheck/logger/__init__.py:docstring of linkcheck.logger.LogStatistics:1:<autosummary>:1
msgid ":obj:`LogStatistics <linkcheck.logger.LogStatistics>`\\ \\(\\)"
msgstr ""

#: ../../../linkcheck/logger/__init__.py:docstring of linkcheck.logger.LogStatistics:1:<autosummary>:1
#: ../../../linkcheck/logger/__init__.py:docstring of linkcheck.logger.LogStatistics:1
msgid "Gather log statistics: - number of errors, warnings and valid links - type of contents (image, video, audio, text, ...) - URL lengths"
msgstr ""

#: ../../../linkcheck/logger/__init__.py:docstring of linkcheck.logger.LogStatistics:6
msgid "Initialize log statistics."
msgstr ""

#: ../../../linkcheck/logger/__init__.py:docstring of linkcheck.logger.LogStatistics.log_internal_error:1
msgid "Increase internal error count."
msgstr ""

#: ../../../linkcheck/logger/__init__.py:docstring of linkcheck.logger.LogStatistics.log_url:1
msgid "Log URL statistics."
msgstr ""

#: ../../../linkcheck/logger/__init__.py:docstring of linkcheck.logger.LogStatistics.reset:1
msgid "Reset all log statistics to default values."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
msgid ":obj:`linkcheck.logger.blacklist <linkcheck.logger.blacklist>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
#: ../../../linkcheck/logger/blacklist.py:docstring of linkcheck.logger.blacklist:1
msgid "A blacklist logger."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
msgid ":obj:`linkcheck.logger.csvlog <linkcheck.logger.csvlog>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
#: ../../../linkcheck/logger/csvlog.py:docstring of linkcheck.logger.csvlog:1
msgid "A CSV logger."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
msgid ":obj:`linkcheck.logger.customxml <linkcheck.logger.customxml>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
#: ../../../linkcheck/logger/customxml.py:docstring of linkcheck.logger.customxml:1
msgid "An XML logger."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
msgid ":obj:`linkcheck.logger.dot <linkcheck.logger.dot>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
msgid "A DOT graph format logger."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
msgid ":obj:`linkcheck.logger.gml <linkcheck.logger.gml>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
#: ../../../linkcheck/logger/gml.py:docstring of linkcheck.logger.gml:1
msgid "A gml logger."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
msgid ":obj:`linkcheck.logger.graph <linkcheck.logger.graph>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
#: ../../../linkcheck/logger/graph.py:docstring of linkcheck.logger.graph:1
msgid "Base class for graph loggers."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
msgid ":obj:`linkcheck.logger.gxml <linkcheck.logger.gxml>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
#: ../../../linkcheck/logger/gxml.py:docstring of linkcheck.logger.gxml:1
msgid "A GraphXML logger."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
msgid ":obj:`linkcheck.logger.html <linkcheck.logger.html>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
#: ../../../linkcheck/logger/html.py:docstring of linkcheck.logger.html:1
msgid "A HTML logger."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
msgid ":obj:`linkcheck.logger.none <linkcheck.logger.none>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
#: ../../../linkcheck/logger/none.py:docstring of linkcheck.logger.none:1
msgid "A dummy logger."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
msgid ":obj:`linkcheck.logger.sitemapxml <linkcheck.logger.sitemapxml>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
#: ../../../linkcheck/logger/sitemapxml.py:docstring of linkcheck.logger.sitemapxml:1
msgid "A sitemap XML logger."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
msgid ":obj:`linkcheck.logger.sql <linkcheck.logger.sql>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
#: ../../../linkcheck/logger/sql.py:docstring of linkcheck.logger.sql:1
msgid "A SQL logger."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
msgid ":obj:`linkcheck.logger.text <linkcheck.logger.text>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
#: ../../../linkcheck/logger/text.py:docstring of linkcheck.logger.text:1
msgid "The default text logger."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
msgid ":obj:`linkcheck.logger.xmllog <linkcheck.logger.xmllog>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.rst:49:<autosummary>:1
#: ../../../linkcheck/logger/xmllog.py:docstring of linkcheck.logger.xmllog:1
msgid "Base class for XML loggers."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.blacklist.rst:2
msgid "linkcheck.logger.blacklist"
msgstr ""

#: ../../../linkcheck/logger/blacklist.py:docstring of linkcheck.logger.blacklist.BlacklistLogger:1:<autosummary>:1
msgid ":obj:`BlacklistLogger <linkcheck.logger.blacklist.BlacklistLogger>`\\ \\(\\*\\*kwargs\\)"
msgstr ""

#: ../../../linkcheck/logger/blacklist.py:docstring of linkcheck.logger.blacklist.BlacklistLogger:1:<autosummary>:1
msgid "Updates a blacklist of wrong links."
msgstr ""

#: ../../../linkcheck/logger/blacklist.py:docstring of linkcheck.logger.blacklist.BlacklistLogger:1
#: ../../../linkcheck/logger/csvlog.py:docstring of linkcheck.logger.csvlog.CSVLogger:1
#: ../../../linkcheck/logger/html.py:docstring of linkcheck.logger.html.HtmlLogger:1
#: ../../../linkcheck/logger/none.py:docstring of linkcheck.logger.none.NoneLogger:1
#: ../../../linkcheck/logger/sql.py:docstring of linkcheck.logger.sql.SQLLogger:1
#: ../../../linkcheck/logger/text.py:docstring of linkcheck.logger.text.TextLogger:1
msgid "Bases: :class:`linkcheck.logger._Logger`"
msgstr ""

#: ../../../linkcheck/logger/blacklist.py:docstring of linkcheck.logger.blacklist.BlacklistLogger:1
msgid "Updates a blacklist of wrong links. If a link on the blacklist is working (again), it is removed from the list. So after n days we have only links on the list which failed for n days."
msgstr ""

#: ../../../linkcheck/logger/blacklist.py:docstring of linkcheck.logger.blacklist.BlacklistLogger:5
msgid "Intialize with old blacklist data (if found, else not)."
msgstr ""

#: ../../../linkcheck/logger/blacklist.py:docstring of linkcheck.logger.blacklist.BlacklistLogger.comment:1
msgid "Write nothing."
msgstr ""

#: ../../../linkcheck/logger/blacklist.py:docstring of linkcheck.logger.blacklist.BlacklistLogger.end_output:1
msgid "Write blacklist file."
msgstr ""

#: ../../../linkcheck/logger/blacklist.py:docstring of linkcheck.logger.blacklist.BlacklistLogger.log_url:1
msgid "Put invalid url in blacklist, delete valid url from blacklist."
msgstr ""

#: ../../../linkcheck/logger/blacklist.py:docstring of linkcheck.logger.blacklist.BlacklistLogger.read_blacklist:1
msgid "Read a previously stored blacklist from file fd."
msgstr ""

#: ../../../linkcheck/logger/blacklist.py:docstring of linkcheck.logger.blacklist.BlacklistLogger.write_blacklist:1
msgid "Write the blacklist."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.csvlog.rst:2
msgid "linkcheck.logger.csvlog"
msgstr ""

#: ../../../linkcheck/logger/csvlog.py:docstring of linkcheck.logger.csvlog.CSVLogger:1:<autosummary>:1
msgid ":obj:`CSVLogger <linkcheck.logger.csvlog.CSVLogger>`\\ \\(\\*\\*kwargs\\)"
msgstr ""

#: ../../../linkcheck/logger/csvlog.py:docstring of linkcheck.logger.csvlog.CSVLogger:1:<autosummary>:1
msgid "CSV output, consisting of one line per entry."
msgstr ""

#: ../../../linkcheck/logger/csvlog.py:docstring of linkcheck.logger.csvlog.CSVLogger:1
msgid "CSV output, consisting of one line per entry. Entries are separated by a separator (a semicolon per default)."
msgstr ""

#: ../../../linkcheck/logger/csvlog.py:docstring of linkcheck.logger.csvlog.CSVLogger:4
msgid "Store default separator and (os dependent) line terminator."
msgstr ""

#: ../../../linkcheck/logger/csvlog.py:docstring of linkcheck.logger.csvlog.CSVLogger.comment:1
msgid "Write CSV comment."
msgstr ""

#: ../../../linkcheck/logger/csvlog.py:docstring of linkcheck.logger.csvlog.CSVLogger.end_output:1
msgid "Write end of checking info as csv comment."
msgstr ""

#: ../../../linkcheck/logger/csvlog.py:docstring of linkcheck.logger.csvlog.CSVLogger.log_url:1
msgid "Write csv formatted url check info."
msgstr ""

#: ../../../linkcheck/logger/csvlog.py:docstring of linkcheck.logger.csvlog.CSVLogger.start_output:1
msgid "Write checking start info as csv comment."
msgstr ""

#: ../../../linkcheck/logger/csvlog.py:docstring of linkcheck.logger.csvlog.CSVLogger.writerow:1
msgid "Write one row in CSV format."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.customxml.rst:2
msgid "linkcheck.logger.customxml"
msgstr ""

#: ../../../linkcheck/logger/customxml.py:docstring of linkcheck.logger.customxml.CustomXMLLogger:1:<autosummary>:1
msgid ":obj:`CustomXMLLogger <linkcheck.logger.customxml.CustomXMLLogger>`\\ \\(\\*\\*kwargs\\)"
msgstr ""

#: ../../../linkcheck/logger/customxml.py:docstring of linkcheck.logger.customxml.CustomXMLLogger:1:<autosummary>:1
#: ../../../linkcheck/logger/customxml.py:docstring of linkcheck.logger.customxml.CustomXMLLogger:1
msgid "XML custom output for easy post-processing."
msgstr ""

#: ../../../linkcheck/logger/customxml.py:docstring of linkcheck.logger.customxml.CustomXMLLogger:1
#: ../../../linkcheck/logger/sitemapxml.py:docstring of linkcheck.logger.sitemapxml.SitemapXmlLogger:1
msgid "Bases: :class:`linkcheck.logger.xmllog._XMLLogger`"
msgstr ""

#: ../../../linkcheck/logger/customxml.py:docstring of linkcheck.logger.customxml.CustomXMLLogger:3
#: ../../../linkcheck/logger/dot.py:docstring of linkcheck.logger.dot.DOTLogger:3
#: ../../../linkcheck/logger/gml.py:docstring of linkcheck.logger.gml.GMLLogger:4
#: ../../../linkcheck/logger/gxml.py:docstring of linkcheck.logger.gxml.GraphXMLLogger:4
#: ../../../linkcheck/logger/sitemapxml.py:docstring of linkcheck.logger.sitemapxml.SitemapXmlLogger:4
msgid "Initialize graph node list and internal id counter."
msgstr ""

#: ../../../linkcheck/logger/customxml.py:docstring of linkcheck.logger.customxml.CustomXMLLogger.end_output:1
#: ../../../linkcheck/logger/sitemapxml.py:docstring of linkcheck.logger.sitemapxml.SitemapXmlLogger.end_output:1
msgid "Write XML end tag."
msgstr ""

#: ../../../linkcheck/logger/customxml.py:docstring of linkcheck.logger.customxml.CustomXMLLogger.log_url:1
msgid "Log URL data in custom XML format."
msgstr ""

#: ../../../linkcheck/logger/customxml.py:docstring of linkcheck.logger.customxml.CustomXMLLogger.start_output:1
#: ../../../linkcheck/logger/gxml.py:docstring of linkcheck.logger.gxml.GraphXMLLogger.start_output:1
#: ../../../linkcheck/logger/sitemapxml.py:docstring of linkcheck.logger.sitemapxml.SitemapXmlLogger.start_output:1
msgid "Write start of checking info as xml comment."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.dot.rst:2
msgid "linkcheck.logger.dot"
msgstr ""

#: ../../../linkcheck/logger/dot.py:docstring of linkcheck.logger.dot:1
msgid "A DOT graph format logger. The specification has been taken from https://www.graphviz.org/doc/info/lang.html"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.dot.rst:21:<autosummary>:1
msgid ":obj:`dotquote <linkcheck.logger.dot.dotquote>`\\ \\(s\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.dot.rst:21:<autosummary>:1
#: ../../../linkcheck/logger/dot.py:docstring of linkcheck.logger.dot.dotquote:1
msgid "Quote string for usage in DOT output format."
msgstr ""

#: ../../../linkcheck/logger/dot.py:docstring of linkcheck.logger.dot.DOTLogger:1:<autosummary>:1
msgid ":obj:`DOTLogger <linkcheck.logger.dot.DOTLogger>`\\ \\(\\*\\*kwargs\\)"
msgstr ""

#: ../../../linkcheck/logger/dot.py:docstring of linkcheck.logger.dot.DOTLogger:1:<autosummary>:1
msgid "Generates .dot sitemap graphs."
msgstr ""

#: ../../../linkcheck/logger/dot.py:docstring of linkcheck.logger.dot.DOTLogger:1
#: ../../../linkcheck/logger/gml.py:docstring of linkcheck.logger.gml.GMLLogger:1
msgid "Bases: :class:`linkcheck.logger.graph._GraphLogger`"
msgstr ""

#: ../../../linkcheck/logger/dot.py:docstring of linkcheck.logger.dot.DOTLogger:1
msgid "Generates .dot sitemap graphs. Use graphviz to see the sitemap graph."
msgstr ""

#: ../../../linkcheck/logger/dot.py:docstring of linkcheck.logger.dot.DOTLogger.comment:1
msgid "Write DOT comment."
msgstr ""

#: ../../../linkcheck/logger/dot.py:docstring of linkcheck.logger.dot.DOTLogger.end_graph:1
#: ../../../linkcheck/logger/gml.py:docstring of linkcheck.logger.gml.GMLLogger.end_graph:1
msgid "Write end of graph marker."
msgstr ""

#: ../../../linkcheck/logger/dot.py:docstring of linkcheck.logger.dot.DOTLogger.log_url:1
#: ../../../linkcheck/logger/gml.py:docstring of linkcheck.logger.gml.GMLLogger.log_url:1
msgid "Write one node."
msgstr ""

#: ../../../linkcheck/logger/dot.py:docstring of linkcheck.logger.dot.DOTLogger.start_output:1
msgid "Write start of checking info as DOT comment."
msgstr ""

#: ../../../linkcheck/logger/dot.py:docstring of linkcheck.logger.dot.DOTLogger.write_edge:1
msgid "Write edge from parent to node."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.gml.rst:2
msgid "linkcheck.logger.gml"
msgstr ""

#: ../../../linkcheck/logger/gml.py:docstring of linkcheck.logger.gml.GMLLogger:1:<autosummary>:1
msgid ":obj:`GMLLogger <linkcheck.logger.gml.GMLLogger>`\\ \\(\\*\\*kwargs\\)"
msgstr ""

#: ../../../linkcheck/logger/gml.py:docstring of linkcheck.logger.gml.GMLLogger:1:<autosummary>:1
msgid "GML means Graph Modeling Language."
msgstr ""

#: ../../../linkcheck/logger/gml.py:docstring of linkcheck.logger.gml.GMLLogger:1
msgid "GML means Graph Modeling Language. Use a GML tool to see the sitemap graph."
msgstr ""

#: ../../../linkcheck/logger/gml.py:docstring of linkcheck.logger.gml.GMLLogger.comment:1
msgid "Write GML comment."
msgstr ""

#: ../../../linkcheck/logger/gml.py:docstring of linkcheck.logger.gml.GMLLogger.start_output:1
msgid "Write start of checking info as gml comment."
msgstr ""

#: ../../../linkcheck/logger/gml.py:docstring of linkcheck.logger.gml.GMLLogger.write_edge:1
#: ../../../linkcheck/logger/gxml.py:docstring of linkcheck.logger.gxml.GraphXMLLogger.write_edge:1
msgid "Write one edge."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.graph.rst:2
msgid "linkcheck.logger.graph"
msgstr ""

#: ../../../linkcheck/logger/graph.py:docstring of linkcheck.logger.graph.quote:1:<autosummary>:1
msgid ":obj:`quote <linkcheck.logger.graph.quote>`\\ \\(s\\)"
msgstr ""

#: ../../../linkcheck/logger/graph.py:docstring of linkcheck.logger.graph.quote:1:<autosummary>:1
msgid "Replace disallowed characters in node or edge labels."
msgstr ""

#: ../../../linkcheck/logger/graph.py:docstring of linkcheck.logger.graph.quote:1
msgid "Replace disallowed characters in node or edge labels. Also remove whitespace from beginning or end of label."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.gxml.rst:2
msgid "linkcheck.logger.gxml"
msgstr ""

#: ../../../linkcheck/logger/gxml.py:docstring of linkcheck.logger.gxml.GraphXMLLogger:1:<autosummary>:1
msgid ":obj:`GraphXMLLogger <linkcheck.logger.gxml.GraphXMLLogger>`\\ \\(\\*\\*kwargs\\)"
msgstr ""

#: ../../../linkcheck/logger/gxml.py:docstring of linkcheck.logger.gxml.GraphXMLLogger:1:<autosummary>:1
msgid "XML output mirroring the GML structure."
msgstr ""

#: ../../../linkcheck/logger/gxml.py:docstring of linkcheck.logger.gxml.GraphXMLLogger:1
msgid "Bases: :class:`linkcheck.logger.xmllog._XMLLogger`, :class:`linkcheck.logger.graph._GraphLogger`"
msgstr ""

#: ../../../linkcheck/logger/gxml.py:docstring of linkcheck.logger.gxml.GraphXMLLogger:1
msgid "XML output mirroring the GML structure. Easy to parse with any XML tool."
msgstr ""

#: ../../../linkcheck/logger/gxml.py:docstring of linkcheck.logger.gxml.GraphXMLLogger.end_output:1
msgid "Finish graph output, and print end of checking info as xml comment."
msgstr ""

#: ../../../linkcheck/logger/gxml.py:docstring of linkcheck.logger.gxml.GraphXMLLogger.log_url:1
msgid "Write one node and all possible edges."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.html.rst:2
msgid "linkcheck.logger.html"
msgstr ""

#: ../../../linkcheck/logger/html.py:docstring of linkcheck.logger.html.HtmlLogger:1:<autosummary>:1
msgid ":obj:`HtmlLogger <linkcheck.logger.html.HtmlLogger>`\\ \\(\\*\\*kwargs\\)"
msgstr ""

#: ../../../linkcheck/logger/html.py:docstring of linkcheck.logger.html.HtmlLogger:1:<autosummary>:1
#: ../../../linkcheck/logger/html.py:docstring of linkcheck.logger.html.HtmlLogger:1
msgid "Logger with HTML output."
msgstr ""

#: ../../../linkcheck/logger/html.py:docstring of linkcheck.logger.html.HtmlLogger:3
msgid "Initialize default HTML color values."
msgstr ""

#: ../../../linkcheck/logger/html.py:docstring of linkcheck.logger.html.HtmlLogger.comment:1
msgid "Write HTML comment."
msgstr ""

#: ../../../linkcheck/logger/html.py:docstring of linkcheck.logger.html.HtmlLogger.end_output:1
msgid "Write end of checking info as HTML."
msgstr ""

#: ../../../linkcheck/logger/html.py:docstring of linkcheck.logger.html.HtmlLogger.log_url:1
msgid "Write url checking info as HTML."
msgstr ""

#: ../../../linkcheck/logger/html.py:docstring of linkcheck.logger.html.HtmlLogger.part:1
msgid "Return non-space-breakable part name."
msgstr ""

#: ../../../linkcheck/logger/html.py:docstring of linkcheck.logger.html.HtmlLogger.start_output:1
msgid "Write start of checking info."
msgstr ""

#: ../../../linkcheck/logger/html.py:docstring of linkcheck.logger.html.HtmlLogger.write_base:1
#: ../../../linkcheck/logger/text.py:docstring of linkcheck.logger.text.TextLogger.write_base:1
msgid "Write url_data.base_ref."
msgstr ""

#: ../../../linkcheck/logger/html.py:docstring of linkcheck.logger.html.HtmlLogger.write_checktime:1
#: ../../../linkcheck/logger/text.py:docstring of linkcheck.logger.text.TextLogger.write_checktime:1
msgid "Write url_data.checktime."
msgstr ""

#: ../../../linkcheck/logger/html.py:docstring of linkcheck.logger.html.HtmlLogger.write_dltime:1
#: ../../../linkcheck/logger/text.py:docstring of linkcheck.logger.text.TextLogger.write_dltime:1
msgid "Write url_data.dltime."
msgstr ""

#: ../../../linkcheck/logger/html.py:docstring of linkcheck.logger.html.HtmlLogger.write_id:1
msgid "Write ID for current URL."
msgstr ""

#: ../../../linkcheck/logger/html.py:docstring of linkcheck.logger.html.HtmlLogger.write_info:1
#: ../../../linkcheck/logger/text.py:docstring of linkcheck.logger.text.TextLogger.write_info:1
msgid "Write url_data.info."
msgstr ""

#: ../../../linkcheck/logger/html.py:docstring of linkcheck.logger.html.HtmlLogger.write_modified:1
#: ../../../linkcheck/logger/text.py:docstring of linkcheck.logger.text.TextLogger.write_modified:1
msgid "Write url_data.modified."
msgstr ""

#: ../../../linkcheck/logger/html.py:docstring of linkcheck.logger.html.HtmlLogger.write_name:1
#: ../../../linkcheck/logger/text.py:docstring of linkcheck.logger.text.TextLogger.write_name:1
msgid "Write url_data.name."
msgstr ""

#: ../../../linkcheck/logger/html.py:docstring of linkcheck.logger.html.HtmlLogger.write_outro:1
msgid "Write end of check message."
msgstr ""

#: ../../../linkcheck/logger/html.py:docstring of linkcheck.logger.html.HtmlLogger.write_parent:1
#: ../../../linkcheck/logger/text.py:docstring of linkcheck.logger.text.TextLogger.write_parent:1
msgid "Write url_data.parent_url."
msgstr ""

#: ../../../linkcheck/logger/html.py:docstring of linkcheck.logger.html.HtmlLogger.write_real:1
#: ../../../linkcheck/logger/text.py:docstring of linkcheck.logger.text.TextLogger.write_real:1
msgid "Write url_data.url."
msgstr ""

#: ../../../linkcheck/logger/html.py:docstring of linkcheck.logger.html.HtmlLogger.write_result:1
#: ../../../linkcheck/logger/text.py:docstring of linkcheck.logger.text.TextLogger.write_result:1
msgid "Write url_data.result."
msgstr ""

#: ../../../linkcheck/logger/html.py:docstring of linkcheck.logger.html.HtmlLogger.write_size:1
#: ../../../linkcheck/logger/text.py:docstring of linkcheck.logger.text.TextLogger.write_size:1
msgid "Write url_data.size."
msgstr ""

#: ../../../linkcheck/logger/html.py:docstring of linkcheck.logger.html.HtmlLogger.write_stats:1
msgid "Write check statistic infos."
msgstr ""

#: ../../../linkcheck/logger/html.py:docstring of linkcheck.logger.html.HtmlLogger.write_table_end:1
msgid "End html table."
msgstr ""

#: ../../../linkcheck/logger/html.py:docstring of linkcheck.logger.html.HtmlLogger.write_table_start:1
msgid "Start html table."
msgstr ""

#: ../../../linkcheck/logger/html.py:docstring of linkcheck.logger.html.HtmlLogger.write_url:1
#: ../../../linkcheck/logger/text.py:docstring of linkcheck.logger.text.TextLogger.write_url:1
msgid "Write url_data.base_url."
msgstr ""

#: ../../../linkcheck/logger/html.py:docstring of linkcheck.logger.html.HtmlLogger.write_warning:1
msgid "Write url_data.warnings."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.none.rst:2
msgid "linkcheck.logger.none"
msgstr ""

#: ../../../linkcheck/logger/none.py:docstring of linkcheck.logger.none.NoneLogger:1:<autosummary>:1
msgid ":obj:`NoneLogger <linkcheck.logger.none.NoneLogger>`\\ \\(\\*\\*args\\)"
msgstr ""

#: ../../../linkcheck/logger/none.py:docstring of linkcheck.logger.none.NoneLogger:1:<autosummary>:1
#: ../../../linkcheck/logger/none.py:docstring of linkcheck.logger.none.NoneLogger:1
msgid "Dummy logger printing nothing."
msgstr ""

#: ../../../linkcheck/logger/none.py:docstring of linkcheck.logger.none.NoneLogger:3
msgid "Initialize a logger, looking for part restrictions in kwargs."
msgstr ""

#: ../../../linkcheck/logger/none.py:docstring of linkcheck.logger.none.NoneLogger.comment:1
#: ../../../linkcheck/logger/none.py:docstring of linkcheck.logger.none.NoneLogger.end_output:1
#: ../../../linkcheck/logger/none.py:docstring of linkcheck.logger.none.NoneLogger.log_url:1
#: ../../../linkcheck/logger/none.py:docstring of linkcheck.logger.none.NoneLogger.start_output:1
msgid "Do nothing."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.sitemapxml.rst:2
msgid "linkcheck.logger.sitemapxml"
msgstr ""

#: ../../../linkcheck/logger/sitemapxml.py:docstring of linkcheck.logger.sitemapxml.SitemapXmlLogger:1:<autosummary>:1
msgid ":obj:`SitemapXmlLogger <linkcheck.logger.sitemapxml.SitemapXmlLogger>`\\ \\(\\*\\*kwargs\\)"
msgstr ""

#: ../../../linkcheck/logger/sitemapxml.py:docstring of linkcheck.logger.sitemapxml.SitemapXmlLogger:1:<autosummary>:1
#: ../../../linkcheck/logger/sitemapxml.py:docstring of linkcheck.logger.sitemapxml.SitemapXmlLogger:1
msgid "Sitemap XML output according to https://www.sitemaps.org/protocol.html"
msgstr ""

#: ../../../linkcheck/logger/sitemapxml.py:docstring of linkcheck.logger.sitemapxml.SitemapXmlLogger.log_filter_url:1
msgid "Update accounting data and determine if URL should be included in the sitemap."
msgstr ""

#: ../../../linkcheck/logger/sitemapxml.py:docstring of linkcheck.logger.sitemapxml.SitemapXmlLogger.log_url:1
msgid "Log URL data in sitemap format."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.sql.rst:2
msgid "linkcheck.logger.sql"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.sql.rst:22:<autosummary>:1
msgid ":obj:`intify <linkcheck.logger.sql.intify>`\\ \\(s\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.sql.rst:22:<autosummary>:1
#: ../../../linkcheck/logger/sql.py:docstring of linkcheck.logger.sql.intify:1
msgid "Coerce a truth value to 0/1."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.sql.rst:22:<autosummary>:1
msgid ":obj:`sqlify <linkcheck.logger.sql.sqlify>`\\ \\(s\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.sql.rst:22:<autosummary>:1
#: ../../../linkcheck/logger/sql.py:docstring of linkcheck.logger.sql.sqlify:1
msgid "Escape special SQL chars and strings."
msgstr ""

#: ../../../linkcheck/logger/sql.py:docstring of linkcheck.logger.sql.SQLLogger:1:<autosummary>:1
msgid ":obj:`SQLLogger <linkcheck.logger.sql.SQLLogger>`\\ \\(\\*\\*kwargs\\)"
msgstr ""

#: ../../../linkcheck/logger/sql.py:docstring of linkcheck.logger.sql.SQLLogger:1:<autosummary>:1
#: ../../../linkcheck/logger/sql.py:docstring of linkcheck.logger.sql.SQLLogger:1
msgid "SQL output, should work with any SQL database (not tested)."
msgstr ""

#: ../../../linkcheck/logger/sql.py:docstring of linkcheck.logger.sql.SQLLogger:3
msgid "Initialize database access data."
msgstr ""

#: ../../../linkcheck/logger/sql.py:docstring of linkcheck.logger.sql.SQLLogger.comment:1
msgid "Write SQL comment."
msgstr ""

#: ../../../linkcheck/logger/sql.py:docstring of linkcheck.logger.sql.SQLLogger.end_output:1
msgid "Write end of checking info as sql comment."
msgstr ""

#: ../../../linkcheck/logger/sql.py:docstring of linkcheck.logger.sql.SQLLogger.log_url:1
msgid "Store url check info into the database."
msgstr ""

#: ../../../linkcheck/logger/sql.py:docstring of linkcheck.logger.sql.SQLLogger.start_output:1
msgid "Write start of checking info as sql comment."
msgstr ""

#: ../../../linkcheck/logger/sql.py:docstring of linkcheck.logger.sql.intify:3
msgid "an object (usually a string)"
msgstr ""

#: ../../../linkcheck/logger/sql.py:docstring of linkcheck.logger.sql.intify:5
msgid "1 if object truth value is True, else 0"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.text.rst:2
msgid "linkcheck.logger.text"
msgstr ""

#: ../../../linkcheck/logger/text.py:docstring of linkcheck.logger.text.TextLogger:1:<autosummary>:1
msgid ":obj:`TextLogger <linkcheck.logger.text.TextLogger>`\\ \\(\\*\\*kwargs\\)"
msgstr ""

#: ../../../linkcheck/logger/text.py:docstring of linkcheck.logger.text.TextLogger:1:<autosummary>:1
#: ../../../linkcheck/logger/text.py:docstring of linkcheck.logger.text.TextLogger:1
msgid "A text logger, colorizing the output if possible."
msgstr ""

#: ../../../linkcheck/logger/text.py:docstring of linkcheck.logger.text.TextLogger:3
msgid "Informal text output format spec: Output consists of a set of URL logs separated by one or more blank lines. A URL log consists of two or more lines. Each line consists of keyword and data, separated by whitespace. Unknown keywords will be ignored."
msgstr ""

#: ../../../linkcheck/logger/text.py:docstring of linkcheck.logger.text.TextLogger:10
msgid "Initialize error counter and optional file output."
msgstr ""

#: ../../../linkcheck/logger/text.py:docstring of linkcheck.logger.text.TextLogger.end_output:1
msgid "Write end of output info, and flush all output buffers."
msgstr ""

#: ../../../linkcheck/logger/text.py:docstring of linkcheck.logger.text.TextLogger.init_fileoutput:1
msgid "Colorize file output if possible."
msgstr ""

#: ../../../linkcheck/logger/text.py:docstring of linkcheck.logger.text.TextLogger.log_url:1
msgid "Write url checking info."
msgstr ""

#: ../../../linkcheck/logger/text.py:docstring of linkcheck.logger.text.TextLogger.start_fileoutput:1
msgid "Needed to make file descriptor color aware."
msgstr ""

#: ../../../linkcheck/logger/text.py:docstring of linkcheck.logger.text.TextLogger.start_output:1
msgid "Write generic start checking info."
msgstr ""

#: ../../../linkcheck/logger/text.py:docstring of linkcheck.logger.text.TextLogger.write_id:1
msgid "Write unique ID of url_data."
msgstr ""

#: ../../../linkcheck/logger/text.py:docstring of linkcheck.logger.text.TextLogger.write_intro:1
msgid "Log introduction text."
msgstr ""

#: ../../../linkcheck/logger/text.py:docstring of linkcheck.logger.text.TextLogger.write_outro:1
msgid "Write end of checking message."
msgstr ""

#: ../../../linkcheck/logger/text.py:docstring of linkcheck.logger.text.TextLogger.write_stats:1
msgid "Write check statistic info."
msgstr ""

#: ../../../linkcheck/logger/text.py:docstring of linkcheck.logger.text.TextLogger.write_warning:1
msgid "Write url_data.warning."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.logger.xmllog.rst:2
msgid "linkcheck.logger.xmllog"
msgstr ""

#: ../../../linkcheck/logger/xmllog.py:docstring of linkcheck.logger.xmllog.xmlquote:1:<autosummary>:1
msgid ":obj:`xmlquote <linkcheck.logger.xmllog.xmlquote>`\\ \\(s\\)"
msgstr ""

#: ../../../linkcheck/logger/xmllog.py:docstring of linkcheck.logger.xmllog.xmlquote:1:<autosummary>:1
#: ../../../linkcheck/logger/xmllog.py:docstring of linkcheck.logger.xmllog.xmlquote:1
msgid "Quote characters for XML."
msgstr ""

#: ../../../linkcheck/logger/xmllog.py:docstring of linkcheck.logger.xmllog.xmlquote:1:<autosummary>:1
msgid ":obj:`xmlquoteattr <linkcheck.logger.xmllog.xmlquoteattr>`\\ \\(s\\)"
msgstr ""

#: ../../../linkcheck/logger/xmllog.py:docstring of linkcheck.logger.xmllog.xmlquote:1:<autosummary>:1
#: ../../../linkcheck/logger/xmllog.py:docstring of linkcheck.logger.xmllog.xmlquoteattr:1
msgid "Quote XML attribute, ready for inclusion with double quotes."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.memoryutil.rst:2
msgid "linkcheck.memoryutil"
msgstr ""

#: ../../../linkcheck/memoryutil.py:docstring of linkcheck.memoryutil.write_memory_dump:1:<autosummary>:1
msgid ":obj:`write_memory_dump <linkcheck.memoryutil.write_memory_dump>`\\ \\(\\)"
msgstr ""

#: ../../../linkcheck/memoryutil.py:docstring of linkcheck.memoryutil.write_memory_dump:1:<autosummary>:1
#: ../../../linkcheck/memoryutil.py:docstring of linkcheck.memoryutil.write_memory_dump:1
msgid "Dump memory to a temporary filename with the meliae package."
msgstr ""

#: ../../../linkcheck/memoryutil.py:docstring of linkcheck.memoryutil.write_memory_dump:3
msgid "JSON filename where memory dump has been written to"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.mimeutil.rst:2
msgid "linkcheck.mimeutil"
msgstr ""

#: ../../../linkcheck/mimeutil.py:docstring of linkcheck.mimeutil.add_mimetype:1:<autosummary>:1
msgid ":obj:`add_mimetype <linkcheck.mimeutil.add_mimetype>`\\ \\(mimedb\\, mimetype\\, extension\\)"
msgstr ""

#: ../../../linkcheck/mimeutil.py:docstring of linkcheck.mimeutil.add_mimetype:1:<autosummary>:1
#: ../../../linkcheck/mimeutil.py:docstring of linkcheck.mimeutil.add_mimetype:1
msgid "Add or replace a mimetype to be used with the given extension."
msgstr ""

#: ../../../linkcheck/mimeutil.py:docstring of linkcheck.mimeutil.add_mimetype:1:<autosummary>:1
msgid ":obj:`guess_mimetype <linkcheck.mimeutil.guess_mimetype>`\\ \\(filename\\[\\, read\\]\\)"
msgstr ""

#: ../../../linkcheck/mimeutil.py:docstring of linkcheck.mimeutil.add_mimetype:1:<autosummary>:1
#: ../../../linkcheck/mimeutil.py:docstring of linkcheck.mimeutil.guess_mimetype:1
msgid "Return MIME type of file, or 'application/octet-stream' if it could not be determined."
msgstr ""

#: ../../../linkcheck/mimeutil.py:docstring of linkcheck.mimeutil.add_mimetype:1:<autosummary>:1
msgid ":obj:`guess_mimetype_read <linkcheck.mimeutil.guess_mimetype_read>`\\ \\(read\\)"
msgstr ""

#: ../../../linkcheck/mimeutil.py:docstring of linkcheck.mimeutil.add_mimetype:1:<autosummary>:1
#: ../../../linkcheck/mimeutil.py:docstring of linkcheck.mimeutil.guess_mimetype_read:1
msgid "Try to read some content and do a poor man's file(1)."
msgstr ""

#: ../../../linkcheck/mimeutil.py:docstring of linkcheck.mimeutil.add_mimetype:1:<autosummary>:1
msgid ":obj:`init_mimedb <linkcheck.mimeutil.init_mimedb>`\\ \\(\\)"
msgstr ""

#: ../../../linkcheck/mimeutil.py:docstring of linkcheck.mimeutil.add_mimetype:1:<autosummary>:1
#: ../../../linkcheck/mimeutil.py:docstring of linkcheck.mimeutil.init_mimedb:1
msgid "Initialize the local MIME database."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.network.rst:2
msgid "linkcheck.network"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.network.rst:31:<autosummary>:1
msgid ":obj:`linkcheck.network.iputil <linkcheck.network.iputil>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.network.rst:31:<autosummary>:1
#: ../../../linkcheck/network/iputil.py:docstring of linkcheck.network.iputil:1
msgid "Ip number related utility functions."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.network.iputil.rst:2
msgid "linkcheck.network.iputil"
msgstr ""

#: ../../../linkcheck/network/iputil.py:docstring of linkcheck.network.iputil.is_obfuscated_ip:1:<autosummary>:1
msgid ":obj:`is_valid_ip <linkcheck.network.iputil.is_valid_ip>`\\ \\(ip\\)"
msgstr ""

#: ../../../linkcheck/network/iputil.py:docstring of linkcheck.network.iputil.is_obfuscated_ip:1:<autosummary>:1
#: ../../../linkcheck/network/iputil.py:docstring of linkcheck.network.iputil.is_valid_ip:1
msgid "Return True if given ip is a valid IPv4 or IPv6 address."
msgstr ""

#: ../../../linkcheck/network/iputil.py:docstring of linkcheck.network.iputil.is_obfuscated_ip:1:<autosummary>:1
msgid ":obj:`resolve_host <linkcheck.network.iputil.resolve_host>`\\ \\(host\\)"
msgstr ""

#: ../../../linkcheck/network/iputil.py:docstring of linkcheck.network.iputil.is_obfuscated_ip:1:<autosummary>:1
#: ../../../linkcheck/network/iputil.py:docstring of linkcheck.network.iputil.resolve_host:1
msgid "Return list of ip numbers for given host."
msgstr ""

#: ../../../linkcheck/network/iputil.py:docstring of linkcheck.network.iputil.resolve_host:3
msgid "hostname or IP address"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.parser.rst:2
msgid "linkcheck.parser"
msgstr ""

#: ../../../linkcheck/parser/__init__.py:docstring of linkcheck.parser.parse_chromium:1:<autosummary>:1
msgid ":obj:`parse_chromium <linkcheck.parser.parse_chromium>`\\ \\(url\\_data\\)"
msgstr ""

#: ../../../linkcheck/parser/__init__.py:docstring of linkcheck.parser.parse_chromium:1:<autosummary>:1
#: ../../../linkcheck/parser/__init__.py:docstring of linkcheck.parser.parse_chromium:1
msgid "Parse a Chromium or Google Chrome bookmark file."
msgstr ""

#: ../../../linkcheck/parser/__init__.py:docstring of linkcheck.parser.parse_chromium:1:<autosummary>:1
msgid ":obj:`parse_css <linkcheck.parser.parse_css>`\\ \\(url\\_data\\)"
msgstr ""

#: ../../../linkcheck/parser/__init__.py:docstring of linkcheck.parser.parse_chromium:1:<autosummary>:1
#: ../../../linkcheck/parser/__init__.py:docstring of linkcheck.parser.parse_css:1
msgid "Parse a CSS file for url() patterns."
msgstr ""

#: ../../../linkcheck/parser/__init__.py:docstring of linkcheck.parser.parse_chromium:1:<autosummary>:1
msgid ":obj:`parse_firefox <linkcheck.parser.parse_firefox>`\\ \\(url\\_data\\)"
msgstr ""

#: ../../../linkcheck/parser/__init__.py:docstring of linkcheck.parser.parse_chromium:1:<autosummary>:1
#: ../../../linkcheck/parser/__init__.py:docstring of linkcheck.parser.parse_firefox:1
msgid "Parse a Firefox3 bookmark file."
msgstr ""

#: ../../../linkcheck/parser/__init__.py:docstring of linkcheck.parser.parse_chromium:1:<autosummary>:1
msgid ":obj:`parse_html <linkcheck.parser.parse_html>`\\ \\(url\\_data\\)"
msgstr ""

#: ../../../linkcheck/parser/__init__.py:docstring of linkcheck.parser.parse_chromium:1:<autosummary>:1
msgid "Parse into HTML content and search for URLs to check."
msgstr ""

#: ../../../linkcheck/parser/__init__.py:docstring of linkcheck.parser.parse_chromium:1:<autosummary>:1
msgid ":obj:`parse_itms_services <linkcheck.parser.parse_itms_services>`\\ \\(url\\_data\\)"
msgstr ""

#: ../../../linkcheck/parser/__init__.py:docstring of linkcheck.parser.parse_chromium:1:<autosummary>:1
#: ../../../linkcheck/parser/__init__.py:docstring of linkcheck.parser.parse_itms_services:1
msgid "Get \"url\" CGI parameter value as child URL."
msgstr ""

#: ../../../linkcheck/parser/__init__.py:docstring of linkcheck.parser.parse_chromium:1:<autosummary>:1
msgid ":obj:`parse_opera <linkcheck.parser.parse_opera>`\\ \\(url\\_data\\)"
msgstr ""

#: ../../../linkcheck/parser/__init__.py:docstring of linkcheck.parser.parse_chromium:1:<autosummary>:1
#: ../../../linkcheck/parser/__init__.py:docstring of linkcheck.parser.parse_opera:1
msgid "Parse an opera bookmark file."
msgstr ""

#: ../../../linkcheck/parser/__init__.py:docstring of linkcheck.parser.parse_chromium:1:<autosummary>:1
msgid ":obj:`parse_safari <linkcheck.parser.parse_safari>`\\ \\(url\\_data\\)"
msgstr ""

#: ../../../linkcheck/parser/__init__.py:docstring of linkcheck.parser.parse_chromium:1:<autosummary>:1
#: ../../../linkcheck/parser/__init__.py:docstring of linkcheck.parser.parse_safari:1
msgid "Parse a Safari bookmark file."
msgstr ""

#: ../../../linkcheck/parser/__init__.py:docstring of linkcheck.parser.parse_chromium:1:<autosummary>:1
msgid ":obj:`parse_swf <linkcheck.parser.parse_swf>`\\ \\(url\\_data\\)"
msgstr ""

#: ../../../linkcheck/parser/__init__.py:docstring of linkcheck.parser.parse_chromium:1:<autosummary>:1
#: ../../../linkcheck/parser/__init__.py:docstring of linkcheck.parser.parse_swf:1
msgid "Parse a SWF file for URLs."
msgstr ""

#: ../../../linkcheck/parser/__init__.py:docstring of linkcheck.parser.parse_chromium:1:<autosummary>:1
msgid ":obj:`parse_text <linkcheck.parser.parse_text>`\\ \\(url\\_data\\)"
msgstr ""

#: ../../../linkcheck/parser/__init__.py:docstring of linkcheck.parser.parse_chromium:1:<autosummary>:1
#: ../../../linkcheck/parser/__init__.py:docstring of linkcheck.parser.parse_text:1
msgid "Parse a text file with one url per line; comment and blank lines are ignored."
msgstr ""

#: ../../../linkcheck/parser/__init__.py:docstring of linkcheck.parser.parse_chromium:1:<autosummary>:1
msgid ":obj:`parse_url <linkcheck.parser.parse_url>`\\ \\(url\\_data\\)"
msgstr ""

#: ../../../linkcheck/parser/__init__.py:docstring of linkcheck.parser.parse_chromium:1:<autosummary>:1
#: ../../../linkcheck/parser/__init__.py:docstring of linkcheck.parser.parse_url:1
msgid "Parse a URL."
msgstr ""

#: ../../../linkcheck/parser/__init__.py:docstring of linkcheck.parser.parse_chromium:1:<autosummary>:1
msgid ":obj:`parse_wml <linkcheck.parser.parse_wml>`\\ \\(url\\_data\\)"
msgstr ""

#: ../../../linkcheck/parser/__init__.py:docstring of linkcheck.parser.parse_chromium:1:<autosummary>:1
msgid "Parse into WML content and search for URLs to check."
msgstr ""

#: ../../../linkcheck/parser/__init__.py:docstring of linkcheck.parser.parse_html:1
msgid "Parse into HTML content and search for URLs to check. Found URLs are added to the URL queue."
msgstr ""

#: ../../../linkcheck/parser/__init__.py:docstring of linkcheck.parser.parse_wml:1
msgid "Parse into WML content and search for URLs to check. Found URLs are added to the URL queue."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.parser.rst:47:<autosummary>:1
msgid ":obj:`linkcheck.parser.sitemap <linkcheck.parser.sitemap>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.parser.sitemap.rst:2
msgid "linkcheck.parser.sitemap"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.parser.sitemap.rst:22:<autosummary>:1
msgid ":obj:`parse_sitemap <linkcheck.parser.sitemap.parse_sitemap>`\\ \\(url\\_data\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.parser.sitemap.rst:22:<autosummary>:1
#: ../../../linkcheck/parser/sitemap.py:docstring of linkcheck.parser.sitemap.parse_sitemap:1
msgid "Parse XML sitemap data."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.parser.sitemap.rst:22:<autosummary>:1
msgid ":obj:`parse_sitemapindex <linkcheck.parser.sitemap.parse_sitemapindex>`\\ \\(url\\_data\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.parser.sitemap.rst:22:<autosummary>:1
#: ../../../linkcheck/parser/sitemap.py:docstring of linkcheck.parser.sitemap.parse_sitemapindex:1
msgid "Parse XML sitemap index data."
msgstr ""

#: ../../../linkcheck/parser/sitemap.py:docstring of linkcheck.parser.sitemap.XmlTagUrlParser:1:<autosummary>:1
msgid ":obj:`XmlTagUrlParser <linkcheck.parser.sitemap.XmlTagUrlParser>`\\ \\(tag\\)"
msgstr ""

#: ../../../linkcheck/parser/sitemap.py:docstring of linkcheck.parser.sitemap.XmlTagUrlParser:1:<autosummary>:1
#: ../../../linkcheck/parser/sitemap.py:docstring of linkcheck.parser.sitemap.XmlTagUrlParser:1
msgid "Parse XML files and find URLs in text content of a tag name."
msgstr ""

#: ../../../linkcheck/parser/sitemap.py:docstring of linkcheck.parser.sitemap.XmlTagUrlParser:3
msgid "Initialize the parser."
msgstr ""

#: ../../../linkcheck/parser/sitemap.py:docstring of linkcheck.parser.sitemap.XmlTagUrlParser.add_url:1
msgid "Add non-empty URLs to the queue."
msgstr ""

#: ../../../linkcheck/parser/sitemap.py:docstring of linkcheck.parser.sitemap.XmlTagUrlParser.char_data:1
msgid "If inside the wanted tag, append data to URL."
msgstr ""

#: ../../../linkcheck/parser/sitemap.py:docstring of linkcheck.parser.sitemap.XmlTagUrlParser.end_element:1
msgid "If end tag is our tag, call add_url()."
msgstr ""

#: ../../../linkcheck/parser/sitemap.py:docstring of linkcheck.parser.sitemap.XmlTagUrlParser.parse:1
msgid "Parse XML URL data."
msgstr ""

#: ../../../linkcheck/parser/sitemap.py:docstring of linkcheck.parser.sitemap.XmlTagUrlParser.start_element:1
msgid "Set tag status for start element."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:2
msgid "linkcheck.plugins"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:23:<autosummary>:1
msgid ":obj:`get_plugin_classes <linkcheck.plugins.get_plugin_classes>`\\ \\(modules\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:23:<autosummary>:1
#: ../../../linkcheck/plugins/__init__.py:docstring of linkcheck.plugins.get_plugin_classes:1
msgid "Get plugin classes for given modules."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:23:<autosummary>:1
msgid ":obj:`get_plugin_modules <linkcheck.plugins.get_plugin_modules>`\\ \\(folders\\[\\, package\\, ...\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:23:<autosummary>:1
#: ../../../linkcheck/plugins/__init__.py:docstring of linkcheck.plugins.get_plugin_modules:1
msgid "Get plugin modules for given folders."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:23:<autosummary>:1
msgid ":obj:`run_plugins <linkcheck.plugins.run_plugins>`\\ \\(plugins\\, url\\_data\\[\\, ...\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:23:<autosummary>:1
#: ../../../linkcheck/plugins/__init__.py:docstring of linkcheck.plugins.run_plugins:1
msgid "Run the check(url_data) method of given plugins."
msgstr ""

#: ../../../linkcheck/plugins/__init__.py:docstring of linkcheck.plugins.PluginManager:1:<autosummary>:1
msgid ":obj:`PluginManager <linkcheck.plugins.PluginManager>`\\ \\(config\\)"
msgstr ""

#: ../../../linkcheck/plugins/__init__.py:docstring of linkcheck.plugins.PluginManager:1:<autosummary>:1
#: ../../../linkcheck/plugins/__init__.py:docstring of linkcheck.plugins.PluginManager:1
msgid "Manage all connection and content plugins."
msgstr ""

#: ../../../linkcheck/plugins/__init__.py:docstring of linkcheck.plugins.PluginManager:3
msgid "Load enabled plugins."
msgstr ""

#: ../../../linkcheck/plugins/__init__.py:docstring of linkcheck.plugins.PluginManager.load_modules:1
msgid "Load plugin modules."
msgstr ""

#: ../../../linkcheck/plugins/__init__.py:docstring of linkcheck.plugins.PluginManager.run_connection_plugins:1
msgid "Run all connection plugins."
msgstr ""

#: ../../../linkcheck/plugins/__init__.py:docstring of linkcheck.plugins.PluginManager.run_content_plugins:1
msgid "Run all content plugins."
msgstr ""

#: ../../../linkcheck/plugins/__init__.py:docstring of linkcheck.plugins.PluginManager.run_parser_plugins:1
msgid "Run parser plugins for given pagetype."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.plugins.anchorcheck <linkcheck.plugins.anchorcheck>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:54:<autosummary>:1
#: ../../../linkcheck/plugins/anchorcheck.py:docstring of linkcheck.plugins.anchorcheck:1
msgid "Check HTML anchors"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.plugins.httpheaderinfo <linkcheck.plugins.httpheaderinfo>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:54:<autosummary>:1
#: ../../../linkcheck/plugins/httpheaderinfo.py:docstring of linkcheck.plugins.httpheaderinfo:1
msgid "Add HTTP server name information"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.plugins.locationinfo <linkcheck.plugins.locationinfo>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:54:<autosummary>:1
#: ../../../linkcheck/plugins/locationinfo.py:docstring of linkcheck.plugins.locationinfo:1
msgid "Store and retrieve country names for IPs."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.plugins.markdowncheck <linkcheck.plugins.markdowncheck>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:54:<autosummary>:1
#: ../../../linkcheck/plugins/markdowncheck.py:docstring of linkcheck.plugins.markdowncheck:1
msgid "Parse links in Markdown files."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.plugins.parsepdf <linkcheck.plugins.parsepdf>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:54:<autosummary>:1
#: ../../../linkcheck/plugins/parsepdf.py:docstring of linkcheck.plugins.parsepdf:1
msgid "Parse links in PDF files with pdfminer."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.plugins.parseword <linkcheck.plugins.parseword>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:54:<autosummary>:1
#: ../../../linkcheck/plugins/parseword.py:docstring of linkcheck.plugins.parseword:1
msgid "Parse hyperlinks in Word files."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.plugins.regexcheck <linkcheck.plugins.regexcheck>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:54:<autosummary>:1
#: ../../../linkcheck/plugins/regexcheck.py:docstring of linkcheck.plugins.regexcheck:1
msgid "Check page content with regular expression."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.plugins.sslcertcheck <linkcheck.plugins.sslcertcheck>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:54:<autosummary>:1
#: ../../../linkcheck/plugins/sslcertcheck.py:docstring of linkcheck.plugins.sslcertcheck:1
msgid "Handle https links."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.plugins.syntaxchecks <linkcheck.plugins.syntaxchecks>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:54:<autosummary>:1
msgid ":obj:`linkcheck.plugins.viruscheck <linkcheck.plugins.viruscheck>`\\"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.rst:54:<autosummary>:1
#: ../../../linkcheck/plugins/viruscheck.py:docstring of linkcheck.plugins.viruscheck:1
msgid "Check page content for virus infection with clamav."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.anchorcheck.rst:2
msgid "linkcheck.plugins.anchorcheck"
msgstr ""

#: ../../../linkcheck/plugins/anchorcheck.py:docstring of linkcheck.plugins.anchorcheck.AnchorCheck:1:<autosummary>:1
msgid ":obj:`AnchorCheck <linkcheck.plugins.anchorcheck.AnchorCheck>`\\ \\(config\\)"
msgstr ""

#: ../../../linkcheck/plugins/anchorcheck.py:docstring of linkcheck.plugins.anchorcheck.AnchorCheck:1:<autosummary>:1
#: ../../../linkcheck/plugins/anchorcheck.py:docstring of linkcheck.plugins.anchorcheck.AnchorCheck:1
msgid "Checks validity of HTML anchors."
msgstr ""

#: ../../../linkcheck/plugins/anchorcheck.py:docstring of linkcheck.plugins.anchorcheck.AnchorCheck:1
#: ../../../linkcheck/plugins/markdowncheck.py:docstring of linkcheck.plugins.markdowncheck.MarkdownCheck:1
#: ../../../linkcheck/plugins/regexcheck.py:docstring of linkcheck.plugins.regexcheck.RegexCheck:1
#: ../../../linkcheck/plugins/syntaxchecks.py:docstring of linkcheck.plugins.syntaxchecks.CssSyntaxCheck:1
#: ../../../linkcheck/plugins/syntaxchecks.py:docstring of linkcheck.plugins.syntaxchecks.HtmlSyntaxCheck:1
#: ../../../linkcheck/plugins/viruscheck.py:docstring of linkcheck.plugins.viruscheck.VirusCheck:1
msgid "Bases: :class:`linkcheck.plugins._ContentPlugin`"
msgstr ""

#: ../../../linkcheck/plugins/anchorcheck.py:docstring of linkcheck.plugins.anchorcheck.AnchorCheck:3
#: ../../../linkcheck/plugins/markdowncheck.py:docstring of linkcheck.plugins.markdowncheck.MarkdownCheck:3
msgid "Add plugin-specific configuration."
msgstr ""

#: ../../../linkcheck/plugins/anchorcheck.py:docstring of linkcheck.plugins.anchorcheck.AnchorCheck.add_anchor:1
msgid "Add anchor URL."
msgstr ""

#: ../../../linkcheck/plugins/anchorcheck.py:docstring of linkcheck.plugins.anchorcheck.AnchorCheck.applies_to:1
msgid "Check for HTML anchor existence."
msgstr ""

#: ../../../linkcheck/plugins/anchorcheck.py:docstring of linkcheck.plugins.anchorcheck.AnchorCheck.check:1
#: ../../../linkcheck/plugins/httpheaderinfo.py:docstring of linkcheck.plugins.httpheaderinfo.HttpHeaderInfo.check:1
msgid "Check content for invalid anchors."
msgstr ""

#: ../../../linkcheck/plugins/anchorcheck.py:docstring of linkcheck.plugins.anchorcheck.AnchorCheck.check_anchor:1
msgid "If URL is valid, parseable and has an anchor, check it. A warning is logged and True is returned if the anchor is not found."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.httpheaderinfo.rst:2
msgid "linkcheck.plugins.httpheaderinfo"
msgstr ""

#: ../../../linkcheck/plugins/httpheaderinfo.py:docstring of linkcheck.plugins.httpheaderinfo.HttpHeaderInfo:1:<autosummary>:1
msgid ":obj:`HttpHeaderInfo <linkcheck.plugins.httpheaderinfo.HttpHeaderInfo>`\\ \\(config\\)"
msgstr ""

#: ../../../linkcheck/plugins/httpheaderinfo.py:docstring of linkcheck.plugins.httpheaderinfo.HttpHeaderInfo:1:<autosummary>:1
#: ../../../linkcheck/plugins/httpheaderinfo.py:docstring of linkcheck.plugins.httpheaderinfo.HttpHeaderInfo:1
msgid "Add HTTP header info for each URL"
msgstr ""

#: ../../../linkcheck/plugins/httpheaderinfo.py:docstring of linkcheck.plugins.httpheaderinfo.HttpHeaderInfo:1
#: ../../../linkcheck/plugins/locationinfo.py:docstring of linkcheck.plugins.locationinfo.LocationInfo:1
#: ../../../linkcheck/plugins/sslcertcheck.py:docstring of linkcheck.plugins.sslcertcheck.SslCertificateCheck:1
msgid "Bases: :class:`linkcheck.plugins._ConnectionPlugin`"
msgstr ""

#: ../../../linkcheck/plugins/httpheaderinfo.py:docstring of linkcheck.plugins.httpheaderinfo.HttpHeaderInfo.applies_to:1
msgid "Check for HTTP and prefix config."
msgstr ""

#: ../../../linkcheck/plugins/httpheaderinfo.py:docstring of linkcheck.plugins.httpheaderinfo.HttpHeaderInfo.read_config:1
#: ../../../linkcheck/plugins/markdowncheck.py:docstring of linkcheck.plugins.markdowncheck.MarkdownCheck.read_config:1
#: ../../../linkcheck/plugins/regexcheck.py:docstring of linkcheck.plugins.regexcheck.RegexCheck.read_config:1
#: ../../../linkcheck/plugins/sslcertcheck.py:docstring of linkcheck.plugins.sslcertcheck.SslCertificateCheck.read_config:1
#: ../../../linkcheck/plugins/viruscheck.py:docstring of linkcheck.plugins.viruscheck.VirusCheck.read_config:1
msgid "Read configuration file options."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.locationinfo.rst:2
msgid "linkcheck.plugins.locationinfo"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.locationinfo.rst:23:<autosummary>:1
msgid ":obj:`get_geoip_dat <linkcheck.plugins.locationinfo.get_geoip_dat>`\\ \\(\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.locationinfo.rst:23:<autosummary>:1
#: ../../../linkcheck/plugins/locationinfo.py:docstring of linkcheck.plugins.locationinfo.get_geoip_dat:1
msgid "Find a GeoIP database, preferring city over country lookup."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.locationinfo.rst:23:<autosummary>:1
msgid ":obj:`get_geoip_record <linkcheck.plugins.locationinfo.get_geoip_record>`\\ \\(host\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.locationinfo.rst:23:<autosummary>:1
msgid ":obj:`get_location <linkcheck.plugins.locationinfo.get_location>`\\ \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.locationinfo.rst:23:<autosummary>:1
#: ../../../linkcheck/plugins/locationinfo.py:docstring of linkcheck.plugins.locationinfo.get_location:1
msgid "Get translated country and optional city name."
msgstr ""

#: ../../../linkcheck/plugins/locationinfo.py:docstring of linkcheck.plugins.locationinfo.LocationInfo:1:<autosummary>:1
msgid ":obj:`LocationInfo <linkcheck.plugins.locationinfo.LocationInfo>`\\ \\(config\\)"
msgstr ""

#: ../../../linkcheck/plugins/locationinfo.py:docstring of linkcheck.plugins.locationinfo.LocationInfo:1:<autosummary>:1
msgid "Adds the country and if possible city name of the URL host as info."
msgstr ""

#: ../../../linkcheck/plugins/locationinfo.py:docstring of linkcheck.plugins.locationinfo.LocationInfo:1
msgid "Adds the country and if possible city name of the URL host as info. Needs GeoIP or pygeoip and a local country or city lookup DB installed."
msgstr ""

#: ../../../linkcheck/plugins/locationinfo.py:docstring of linkcheck.plugins.locationinfo.LocationInfo:4
msgid "Check for geoip module."
msgstr ""

#: ../../../linkcheck/plugins/locationinfo.py:docstring of linkcheck.plugins.locationinfo.LocationInfo.applies_to:1
msgid "Check for validity, host existence and geoip module."
msgstr ""

#: ../../../linkcheck/plugins/locationinfo.py:docstring of linkcheck.plugins.locationinfo.LocationInfo.check:1
#: ../../../linkcheck/plugins/viruscheck.py:docstring of linkcheck.plugins.viruscheck.VirusCheck.check:1
msgid "Try to ask GeoIP database for country info."
msgstr ""

#: ../../../linkcheck/plugins/locationinfo.py:docstring of linkcheck.plugins.locationinfo.get_location:3
msgid "country with optional city or an boolean False if not found"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.markdowncheck.rst:2
msgid "linkcheck.plugins.markdowncheck"
msgstr ""

#: ../../../linkcheck/plugins/markdowncheck.py:docstring of linkcheck.plugins.markdowncheck:6
msgid "Supported links are:"
msgstr ""

#: ../../../linkcheck/plugins/markdowncheck.py:docstring of linkcheck.plugins.markdowncheck:4
msgid "<http://autolink.com> [name](http://link.com \"Optional title\") [id]: http://link.com \"Optional title\""
msgstr ""

#: ../../../linkcheck/plugins/markdowncheck.py:docstring of linkcheck.plugins.markdowncheck.MarkdownCheck:1:<autosummary>:1
msgid ":obj:`MarkdownCheck <linkcheck.plugins.markdowncheck.MarkdownCheck>`\\ \\(config\\)"
msgstr ""

#: ../../../linkcheck/plugins/markdowncheck.py:docstring of linkcheck.plugins.markdowncheck.MarkdownCheck:1:<autosummary>:1
#: ../../../linkcheck/plugins/markdowncheck.py:docstring of linkcheck.plugins.markdowncheck.MarkdownCheck:1
msgid "Markdown parsing plugin."
msgstr ""

#: ../../../linkcheck/plugins/markdowncheck.py:docstring of linkcheck.plugins.markdowncheck.MarkdownCheck.applies_to:1
msgid "Check for Markdown file."
msgstr ""

#: ../../../linkcheck/plugins/markdowncheck.py:docstring of linkcheck.plugins.markdowncheck.MarkdownCheck.check:1
msgid "Extracts urls from the file."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.parsepdf.rst:2
msgid "linkcheck.plugins.parsepdf"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.parsepdf.rst:21:<autosummary>:1
msgid ":obj:`search_url <linkcheck.plugins.parsepdf.search_url>`\\ \\(obj\\, url\\_data\\, pageno\\, seen\\_objs\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.parsepdf.rst:21:<autosummary>:1
#: ../../../linkcheck/plugins/parsepdf.py:docstring of linkcheck.plugins.parsepdf.search_url:1
msgid "Recurse through a PDF object, searching for URLs."
msgstr ""

#: ../../../linkcheck/plugins/parsepdf.py:docstring of linkcheck.plugins.parsepdf.PdfParser:1:<autosummary>:1
msgid ":obj:`PdfParser <linkcheck.plugins.parsepdf.PdfParser>`\\ \\(config\\)"
msgstr ""

#: ../../../linkcheck/plugins/parsepdf.py:docstring of linkcheck.plugins.parsepdf.PdfParser:1:<autosummary>:1
#: ../../../linkcheck/plugins/parsepdf.py:docstring of linkcheck.plugins.parsepdf.PdfParser:1
msgid "PDF parsing plugin."
msgstr ""

#: ../../../linkcheck/plugins/parsepdf.py:docstring of linkcheck.plugins.parsepdf.PdfParser:1
#: ../../../linkcheck/plugins/parseword.py:docstring of linkcheck.plugins.parseword.WordParser:1
msgid "Bases: :class:`linkcheck.plugins._ParserPlugin`"
msgstr ""

#: ../../../linkcheck/plugins/parsepdf.py:docstring of linkcheck.plugins.parsepdf.PdfParser:3
#: ../../../linkcheck/plugins/parseword.py:docstring of linkcheck.plugins.parseword.WordParser:3
msgid "Check for pdfminer."
msgstr ""

#: ../../../linkcheck/plugins/parsepdf.py:docstring of linkcheck.plugins.parsepdf.PdfParser.applies_to:1
msgid "Check for PDF pagetype."
msgstr ""

#: ../../../linkcheck/plugins/parsepdf.py:docstring of linkcheck.plugins.parsepdf.PdfParser.check:1
msgid "Parse PDF data."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.parseword.rst:2
msgid "linkcheck.plugins.parseword"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.parseword.rst:29:<autosummary>:1
msgid ":obj:`close_word_app <linkcheck.plugins.parseword.close_word_app>`\\ \\(app\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.parseword.rst:29:<autosummary>:1
#: ../../../linkcheck/plugins/parseword.py:docstring of linkcheck.plugins.parseword.close_word_app:1
msgid "Close Word application object."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.parseword.rst:29:<autosummary>:1
msgid ":obj:`close_wordfile <linkcheck.plugins.parseword.close_wordfile>`\\ \\(doc\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.parseword.rst:29:<autosummary>:1
#: ../../../linkcheck/plugins/parseword.py:docstring of linkcheck.plugins.parseword.close_wordfile:1
msgid "Close word file."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.parseword.rst:29:<autosummary>:1
msgid ":obj:`constants <linkcheck.plugins.parseword.constants>`\\ \\(name\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.parseword.rst:29:<autosummary>:1
msgid "Helper to return constants."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.parseword.rst:29:<autosummary>:1
msgid ":obj:`get_line_number <linkcheck.plugins.parseword.get_line_number>`\\ \\(doc\\, wrange\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.parseword.rst:29:<autosummary>:1
#: ../../../linkcheck/plugins/parseword.py:docstring of linkcheck.plugins.parseword.get_line_number:1
msgid "Get line number for given range object."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.parseword.rst:29:<autosummary>:1
msgid ":obj:`get_temp_filename <linkcheck.plugins.parseword.get_temp_filename>`\\ \\(content\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.parseword.rst:29:<autosummary>:1
#: ../../../linkcheck/plugins/parseword.py:docstring of linkcheck.plugins.parseword.get_temp_filename:1
msgid "Get temporary filename for content to parse."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.parseword.rst:29:<autosummary>:1
msgid ":obj:`get_word_app <linkcheck.plugins.parseword.get_word_app>`\\ \\(\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.parseword.rst:29:<autosummary>:1
#: ../../../linkcheck/plugins/parseword.py:docstring of linkcheck.plugins.parseword.get_word_app:1
msgid "Return open Word.Application handle, or None if Word is not available on this system."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.parseword.rst:29:<autosummary>:1
msgid ":obj:`has_word <linkcheck.plugins.parseword.has_word>`\\ \\(\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.parseword.rst:29:<autosummary>:1
#: ../../../linkcheck/plugins/parseword.py:docstring of linkcheck.plugins.parseword.has_word:1
msgid "Determine if Word is available on the current system."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.parseword.rst:29:<autosummary>:1
msgid ":obj:`init_win32com <linkcheck.plugins.parseword.init_win32com>`\\ \\(\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.parseword.rst:29:<autosummary>:1
#: ../../../linkcheck/plugins/parseword.py:docstring of linkcheck.plugins.parseword.init_win32com:1
msgid "Initialize the win32com.client cache."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.parseword.rst:29:<autosummary>:1
msgid ":obj:`open_wordfile <linkcheck.plugins.parseword.open_wordfile>`\\ \\(app\\, filename\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.parseword.rst:29:<autosummary>:1
#: ../../../linkcheck/plugins/parseword.py:docstring of linkcheck.plugins.parseword.open_wordfile:1
msgid "Open given Word file with application object."
msgstr ""

#: ../../../linkcheck/plugins/parseword.py:docstring of linkcheck.plugins.parseword.WordParser:1:<autosummary>:1
msgid ":obj:`WordParser <linkcheck.plugins.parseword.WordParser>`\\ \\(config\\)"
msgstr ""

#: ../../../linkcheck/plugins/parseword.py:docstring of linkcheck.plugins.parseword.WordParser:1:<autosummary>:1
#: ../../../linkcheck/plugins/parseword.py:docstring of linkcheck.plugins.parseword.WordParser:1
msgid "Word parsing plugin."
msgstr ""

#: ../../../linkcheck/plugins/parseword.py:docstring of linkcheck.plugins.parseword.WordParser.applies_to:1
msgid "Check for Word pagetype."
msgstr ""

#: ../../../linkcheck/plugins/parseword.py:docstring of linkcheck.plugins.parseword.WordParser.check:1
msgid "Parse Word data."
msgstr ""

#: ../../../linkcheck/plugins/parseword.py:docstring of linkcheck.plugins.parseword.constants:1
msgid "Helper to return constants. Avoids importing win32com.client in other modules."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.regexcheck.rst:2
msgid "linkcheck.plugins.regexcheck"
msgstr ""

#: ../../../linkcheck/plugins/regexcheck.py:docstring of linkcheck.plugins.regexcheck.RegexCheck:1:<autosummary>:1
msgid ":obj:`RegexCheck <linkcheck.plugins.regexcheck.RegexCheck>`\\ \\(config\\)"
msgstr ""

#: ../../../linkcheck/plugins/regexcheck.py:docstring of linkcheck.plugins.regexcheck.RegexCheck:1:<autosummary>:1
msgid "Define a regular expression which prints a warning if it matches any content of the checked link."
msgstr ""

#: ../../../linkcheck/plugins/regexcheck.py:docstring of linkcheck.plugins.regexcheck.RegexCheck:1
msgid "Define a regular expression which prints a warning if it matches any content of the checked link. This applies only to valid pages, so we can get their content."
msgstr ""

#: ../../../linkcheck/plugins/regexcheck.py:docstring of linkcheck.plugins.regexcheck.RegexCheck:5
msgid "Use this to check for pages that contain some form of error message, for example 'This page has moved' or 'Oracle Application error'."
msgstr ""

#: ../../../linkcheck/plugins/regexcheck.py:docstring of linkcheck.plugins.regexcheck.RegexCheck:9
msgid "Note that multiple values can be combined in the regular expression, for example \"(This page has moved|Oracle Application error)\"."
msgstr ""

#: ../../../linkcheck/plugins/regexcheck.py:docstring of linkcheck.plugins.regexcheck.RegexCheck:12
msgid "Set warning regex from config."
msgstr ""

#: ../../../linkcheck/plugins/regexcheck.py:docstring of linkcheck.plugins.regexcheck.RegexCheck.applies_to:1
msgid "Check for warningregex, extern flag and parseability."
msgstr ""

#: ../../../linkcheck/plugins/regexcheck.py:docstring of linkcheck.plugins.regexcheck.RegexCheck.check:1
msgid "Check content."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.sslcertcheck.rst:2
msgid "linkcheck.plugins.sslcertcheck"
msgstr ""

#: ../../../linkcheck/plugins/sslcertcheck.py:docstring of linkcheck.plugins.sslcertcheck.SslCertificateCheck:1:<autosummary>:1
msgid ":obj:`SslCertificateCheck <linkcheck.plugins.sslcertcheck.SslCertificateCheck>`\\ \\(config\\)"
msgstr ""

#: ../../../linkcheck/plugins/sslcertcheck.py:docstring of linkcheck.plugins.sslcertcheck.SslCertificateCheck:1:<autosummary>:1
msgid "Check SSL certificate expiration date."
msgstr ""

#: ../../../linkcheck/plugins/sslcertcheck.py:docstring of linkcheck.plugins.sslcertcheck.SslCertificateCheck:1
msgid "Check SSL certificate expiration date. Only internal https: links will be checked. A domain will only be checked once to avoid duplicate warnings. The expiration warning time can be configured with the sslcertwarndays option."
msgstr ""

#: ../../../linkcheck/plugins/sslcertcheck.py:docstring of linkcheck.plugins.sslcertcheck.SslCertificateCheck:7
#: ../../src/code/linkcheck/linkcheck.plugins.viruscheck.rst:24:<autosummary>:1
#: ../../../linkcheck/plugins/viruscheck.py:docstring of linkcheck.plugins.viruscheck.VirusCheck:4
#: ../../../linkcheck/plugins/viruscheck.py:docstring of linkcheck.plugins.viruscheck.get_clamav_conf:1
msgid "Initialize clamav configuration."
msgstr ""

#: ../../../linkcheck/plugins/sslcertcheck.py:docstring of linkcheck.plugins.sslcertcheck.SslCertificateCheck.applies_to:1
msgid "Check validity, scheme, extern and url_connection."
msgstr ""

#: ../../../linkcheck/plugins/sslcertcheck.py:docstring of linkcheck.plugins.sslcertcheck.SslCertificateCheck.check:1
msgid "Run all SSL certificate checks that have not yet been done. OpenSSL already checked the SSL notBefore and notAfter dates."
msgstr ""

#: ../../../linkcheck/plugins/sslcertcheck.py:docstring of linkcheck.plugins.sslcertcheck.SslCertificateCheck.check_ssl_valid_date:1
msgid "Check if the certificate is still valid, or if configured check if it's at least a number of days valid."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.syntaxchecks.rst:2
msgid "linkcheck.plugins.syntaxchecks"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.syntaxchecks.rst:22:<autosummary>:1
msgid ":obj:`check_w3_errors <linkcheck.plugins.syntaxchecks.check_w3_errors>`\\ \\(url\\_data\\, xml\\, w3type\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.syntaxchecks.rst:22:<autosummary>:1
msgid "Add warnings for W3C HTML or CSS errors in xml format."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.syntaxchecks.rst:22:<autosummary>:1
msgid ":obj:`getXmlText <linkcheck.plugins.syntaxchecks.getXmlText>`\\ \\(parent\\, tag\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.syntaxchecks.rst:22:<autosummary>:1
#: ../../../linkcheck/plugins/syntaxchecks.py:docstring of linkcheck.plugins.syntaxchecks.getXmlText:1
msgid "Return XML content of given tag in parent element."
msgstr ""

#: ../../../linkcheck/plugins/syntaxchecks.py:docstring of linkcheck.plugins.syntaxchecks.CssSyntaxCheck:1:<autosummary>:1
msgid ":obj:`CssSyntaxCheck <linkcheck.plugins.syntaxchecks.CssSyntaxCheck>`\\ \\(config\\)"
msgstr ""

#: ../../../linkcheck/plugins/syntaxchecks.py:docstring of linkcheck.plugins.syntaxchecks.CssSyntaxCheck:1:<autosummary>:1
msgid "Check the syntax of HTML pages with the online W3C CSS validator."
msgstr ""

#: ../../../linkcheck/plugins/syntaxchecks.py:docstring of linkcheck.plugins.syntaxchecks.CssSyntaxCheck:1:<autosummary>:1
msgid ":obj:`HtmlSyntaxCheck <linkcheck.plugins.syntaxchecks.HtmlSyntaxCheck>`\\ \\(config\\)"
msgstr ""

#: ../../../linkcheck/plugins/syntaxchecks.py:docstring of linkcheck.plugins.syntaxchecks.CssSyntaxCheck:1:<autosummary>:1
msgid "Check the syntax of HTML pages with the online W3C HTML validator."
msgstr ""

#: ../../../linkcheck/plugins/syntaxchecks.py:docstring of linkcheck.plugins.syntaxchecks.CssSyntaxCheck:1:<autosummary>:1
msgid ":obj:`W3Timer <linkcheck.plugins.syntaxchecks.W3Timer>`\\ \\(\\)"
msgstr ""

#: ../../../linkcheck/plugins/syntaxchecks.py:docstring of linkcheck.plugins.syntaxchecks.CssSyntaxCheck:1:<autosummary>:1
#: ../../../linkcheck/plugins/syntaxchecks.py:docstring of linkcheck.plugins.syntaxchecks.W3Timer:1
msgid "Ensure W3C apis are not hammered."
msgstr ""

#: ../../../linkcheck/plugins/syntaxchecks.py:docstring of linkcheck.plugins.syntaxchecks.CssSyntaxCheck:1
msgid "Check the syntax of HTML pages with the online W3C CSS validator. See https://jigsaw.w3.org/css-validator/manual.html#expert."
msgstr ""

#: ../../../linkcheck/plugins/syntaxchecks.py:docstring of linkcheck.plugins.syntaxchecks.CssSyntaxCheck:4
#: ../../../linkcheck/plugins/syntaxchecks.py:docstring of linkcheck.plugins.syntaxchecks.HtmlSyntaxCheck:4
msgid "Initialize plugin."
msgstr ""

#: ../../../linkcheck/plugins/syntaxchecks.py:docstring of linkcheck.plugins.syntaxchecks.CssSyntaxCheck.applies_to:1
msgid "Check for CSS and extern."
msgstr ""

#: ../../../linkcheck/plugins/syntaxchecks.py:docstring of linkcheck.plugins.syntaxchecks.CssSyntaxCheck.check:1
msgid "Check CSS syntax of given URL."
msgstr ""

#: ../../../linkcheck/plugins/syntaxchecks.py:docstring of linkcheck.plugins.syntaxchecks.HtmlSyntaxCheck:1
msgid "Check the syntax of HTML pages with the online W3C HTML validator. See https://validator.w3.org/docs/api.html."
msgstr ""

#: ../../../linkcheck/plugins/syntaxchecks.py:docstring of linkcheck.plugins.syntaxchecks.HtmlSyntaxCheck.applies_to:1
msgid "Check for HTML and extern."
msgstr ""

#: ../../../linkcheck/plugins/syntaxchecks.py:docstring of linkcheck.plugins.syntaxchecks.HtmlSyntaxCheck.check:1
msgid "Check HTML syntax of given URL."
msgstr ""

#: ../../../linkcheck/plugins/syntaxchecks.py:docstring of linkcheck.plugins.syntaxchecks.W3Timer:3
msgid "Remember last API call."
msgstr ""

#: ../../../linkcheck/plugins/syntaxchecks.py:docstring of linkcheck.plugins.syntaxchecks.W3Timer.check_w3_time:1
msgid "Make sure the W3C validators are at most called once a second."
msgstr ""

#: ../../../linkcheck/plugins/syntaxchecks.py:docstring of linkcheck.plugins.syntaxchecks.check_w3_errors:1
msgid "Add warnings for W3C HTML or CSS errors in xml format. w3type is either \"W3C HTML\" or \"W3C CSS\"."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.viruscheck.rst:2
msgid "linkcheck.plugins.viruscheck"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.viruscheck.rst:24:<autosummary>:1
msgid ":obj:`canonical_clamav_conf <linkcheck.plugins.viruscheck.canonical_clamav_conf>`\\ \\(\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.viruscheck.rst:24:<autosummary>:1
#: ../../../linkcheck/plugins/viruscheck.py:docstring of linkcheck.plugins.viruscheck.canonical_clamav_conf:1
msgid "Default clamav configs for various platforms."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.viruscheck.rst:24:<autosummary>:1
msgid ":obj:`get_clamav_conf <linkcheck.plugins.viruscheck.get_clamav_conf>`\\ \\(filename\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.viruscheck.rst:24:<autosummary>:1
msgid ":obj:`get_sockinfo <linkcheck.plugins.viruscheck.get_sockinfo>`\\ \\(host\\[\\, port\\]\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.viruscheck.rst:24:<autosummary>:1
#: ../../../linkcheck/plugins/viruscheck.py:docstring of linkcheck.plugins.viruscheck.get_sockinfo:1
msgid "Return socket.getaddrinfo for given host and port."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.viruscheck.rst:24:<autosummary>:1
msgid ":obj:`scan <linkcheck.plugins.viruscheck.scan>`\\ \\(data\\, clamconf\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.viruscheck.rst:24:<autosummary>:1
#: ../../../linkcheck/plugins/viruscheck.py:docstring of linkcheck.plugins.viruscheck.scan:1
msgid "Scan data for viruses."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.viruscheck.rst:36:<autosummary>:1
msgid ":obj:`ClamavConfig <linkcheck.plugins.viruscheck.ClamavConfig>`\\ \\(filename\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.viruscheck.rst:36:<autosummary>:1
#: ../../../linkcheck/plugins/viruscheck.py:docstring of linkcheck.plugins.viruscheck.ClamavConfig:1
msgid "Clamav configuration wrapper, with clamd connection method."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.viruscheck.rst:36:<autosummary>:1
msgid ":obj:`ClamdScanner <linkcheck.plugins.viruscheck.ClamdScanner>`\\ \\(clamav\\_conf\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.viruscheck.rst:36:<autosummary>:1
#: ../../../linkcheck/plugins/viruscheck.py:docstring of linkcheck.plugins.viruscheck.ClamdScanner:1
msgid "Virus scanner using a clamd daemon process."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.viruscheck.rst:36:<autosummary>:1
msgid ":obj:`VirusCheck <linkcheck.plugins.viruscheck.VirusCheck>`\\ \\(config\\)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.plugins.viruscheck.rst:36:<autosummary>:1
msgid "Checks the page content for virus infections with clamav."
msgstr ""

#: ../../../linkcheck/plugins/viruscheck.py:docstring of linkcheck.plugins.viruscheck.ClamavError:1:<autosummary>:1
msgid ":obj:`ClamavError <linkcheck.plugins.viruscheck.ClamavError>`\\"
msgstr ""

#: ../../../linkcheck/plugins/viruscheck.py:docstring of linkcheck.plugins.viruscheck.ClamavError:1:<autosummary>:1
#: ../../../linkcheck/plugins/viruscheck.py:docstring of linkcheck.plugins.viruscheck.ClamavError:1
msgid "Raised on clamav errors."
msgstr ""

#: ../../../linkcheck/plugins/viruscheck.py:docstring of linkcheck.plugins.viruscheck.ClamavConfig:3
msgid "Parse clamav configuration file."
msgstr ""

#: ../../../linkcheck/plugins/viruscheck.py:docstring of linkcheck.plugins.viruscheck.ClamavConfig.create_local_socket:1
msgid "Create local socket, connect to it and return socket object."
msgstr ""

#: ../../../linkcheck/plugins/viruscheck.py:docstring of linkcheck.plugins.viruscheck.ClamavConfig.create_tcp_socket:1
msgid "Create tcp socket, connect to it and return socket object."
msgstr ""

#: ../../../linkcheck/plugins/viruscheck.py:docstring of linkcheck.plugins.viruscheck.ClamavConfig.new_connection:1
msgid "Connect to clamd for stream scanning."
msgstr ""

#: ../../../linkcheck/plugins/viruscheck.py:docstring of linkcheck.plugins.viruscheck.ClamavConfig.new_connection:3
msgid "tuple (connected socket, host)"
msgstr ""

#: ../../../linkcheck/plugins/viruscheck.py:docstring of linkcheck.plugins.viruscheck.ClamavConfig.parseconf:1
msgid "Parse clamav configuration from given file."
msgstr ""

#: ../../../linkcheck/plugins/viruscheck.py:docstring of linkcheck.plugins.viruscheck.ClamdScanner:3
msgid "Initialize clamd daemon process sockets."
msgstr ""

#: ../../../linkcheck/plugins/viruscheck.py:docstring of linkcheck.plugins.viruscheck.ClamdScanner.close:1
msgid "Get results and close clamd daemon sockets."
msgstr ""

#: ../../../linkcheck/plugins/viruscheck.py:docstring of linkcheck.plugins.viruscheck.ClamdScanner.new_scansock:1
msgid "Return a connected socket for sending scan data to it."
msgstr ""

#: ../../../linkcheck/plugins/viruscheck.py:docstring of linkcheck.plugins.viruscheck.ClamdScanner.scan:1
msgid "Scan given data for viruses."
msgstr ""

#: ../../../linkcheck/plugins/viruscheck.py:docstring of linkcheck.plugins.viruscheck.VirusCheck:1
msgid "Checks the page content for virus infections with clamav. A local clamav daemon must be installed."
msgstr ""

#: ../../../linkcheck/plugins/viruscheck.py:docstring of linkcheck.plugins.viruscheck.VirusCheck.applies_to:1
msgid "Check for clamav and extern."
msgstr ""

#: ../../../linkcheck/plugins/viruscheck.py:docstring of linkcheck.plugins.viruscheck.scan:3
msgid "(infection msgs, errors)"
msgstr ""

#: ../../src/code/linkcheck/linkcheck.robotparser2.rst:2
msgid "linkcheck.robotparser2"
msgstr ""

#: ../../../linkcheck/robotparser2.py:docstring of linkcheck.robotparser2:3
msgid "The robots.txt Exclusion Protocol is implemented as specified in http://www.robotstxt.org/wc/norobots-rfc.html"
msgstr ""

#: ../../../linkcheck/robotparser2.py:docstring of linkcheck.robotparser2.RobotFileParser:1:<autosummary>:1
msgid ":obj:`Entry <linkcheck.robotparser2.Entry>`\\ \\(\\)"
msgstr ""

#: ../../../linkcheck/robotparser2.py:docstring of linkcheck.robotparser2.RobotFileParser:1:<autosummary>:1
msgid "An entry has one or more user-agents and zero or more rulelines."
msgstr ""

#: ../../../linkcheck/robotparser2.py:docstring of linkcheck.robotparser2.RobotFileParser:1:<autosummary>:1
msgid ":obj:`RobotFileParser <linkcheck.robotparser2.RobotFileParser>`\\ \\(\\[url\\, session\\, proxies\\, ...\\]\\)"
msgstr ""

#: ../../../linkcheck/robotparser2.py:docstring of linkcheck.robotparser2.RobotFileParser:1:<autosummary>:1
#: ../../../linkcheck/robotparser2.py:docstring of linkcheck.robotparser2.RobotFileParser:1
msgid "This class provides a set of methods to read, parse and answer questions about a single robots.txt file."
msgstr ""

#: ../../../linkcheck/robotparser2.py:docstring of linkcheck.robotparser2.RobotFileParser:1:<autosummary>:1
msgid ":obj:`RuleLine <linkcheck.robotparser2.RuleLine>`\\ \\(path\\, allowance\\)"
msgstr ""

#: ../../../linkcheck/robotparser2.py:docstring of linkcheck.robotparser2.RobotFileParser:1:<autosummary>:1
msgid "A rule line is a single \"Allow:\" (allowance==1) or \"Disallow:\" (allowance==0) followed by a path."
msgstr ""

#: ../../../linkcheck/robotparser2.py:docstring of linkcheck.robotparser2.RobotFileParser:4
msgid "Initialize internal entry lists and store given url and credentials."
msgstr ""

#: ../../../linkcheck/robotparser2.py:docstring of linkcheck.robotparser2.RobotFileParser.can_fetch:1
msgid "Using the parsed robots.txt decide if useragent can fetch url."
msgstr ""

#: ../../../linkcheck/robotparser2.py:docstring of linkcheck.robotparser2.RobotFileParser.can_fetch:3
msgid "True if agent can fetch url, else False"
msgstr ""

#: ../../../linkcheck/robotparser2.py:docstring of linkcheck.robotparser2.RobotFileParser.get_crawldelay:1
msgid "Look for a configured crawl delay."
msgstr ""

#: ../../../linkcheck/robotparser2.py:docstring of linkcheck.robotparser2.RobotFileParser.get_crawldelay:3
msgid "crawl delay in seconds or zero"
msgstr ""

#: ../../../linkcheck/robotparser2.py:docstring of linkcheck.robotparser2.RobotFileParser.modified:1
msgid "Set the time the robots.txt file was last fetched to the current time."
msgstr ""

#: ../../../linkcheck/robotparser2.py:docstring of linkcheck.robotparser2.RobotFileParser.mtime:1
msgid "Returns the time the robots.txt file was last fetched."
msgstr ""

#: ../../../linkcheck/robotparser2.py:docstring of linkcheck.robotparser2.RobotFileParser.mtime:3
msgid "This is useful for long-running web spiders that need to check for new robots.txt files periodically."
msgstr ""

#: ../../../linkcheck/robotparser2.py:docstring of linkcheck.robotparser2.RobotFileParser.mtime:6
msgid "last modified in time.time() format"
msgstr ""

#: ../../../linkcheck/robotparser2.py:docstring of linkcheck.robotparser2.RobotFileParser.parse:1
msgid "Parse the input lines from a robot.txt file. We allow that a user-agent: line is not preceded by one or more blank lines."
msgstr ""

#: ../../../linkcheck/robotparser2.py:docstring of linkcheck.robotparser2.RobotFileParser.read:1
msgid "Read the robots.txt URL and feeds it to the parser."
msgstr ""

#: ../../../linkcheck/robotparser2.py:docstring of linkcheck.robotparser2.RobotFileParser.set_url:1
msgid "Set the URL referring to a robots.txt file."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.socketutil.rst:2
msgid "linkcheck.socketutil"
msgstr ""

#: ../../../linkcheck/socketutil.py:docstring of linkcheck.socketutil.create_socket:1:<autosummary>:1
msgid ":obj:`create_socket <linkcheck.socketutil.create_socket>`\\ \\(family\\, socktype\\[\\, proto\\, timeout\\]\\)"
msgstr ""

#: ../../../linkcheck/socketutil.py:docstring of linkcheck.socketutil.create_socket:1:<autosummary>:1
msgid "Create a socket with given family and type."
msgstr ""

#: ../../../linkcheck/socketutil.py:docstring of linkcheck.socketutil.create_socket:1
msgid "Create a socket with given family and type. If SSL context is given an SSL socket is created."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.strformat.rst:2
msgid "linkcheck.strformat"
msgstr ""

#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat:1
msgid "Various string utility functions. Note that these functions are not necessarily optimised for large strings, so use with care."
msgstr ""

#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.ascii_safe:1:<autosummary>:1
msgid ":obj:`ascii_safe <linkcheck.strformat.ascii_safe>`\\ \\(s\\)"
msgstr ""

#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.ascii_safe:1:<autosummary>:1
msgid "Get ASCII string without raising encoding errors."
msgstr ""

#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.ascii_safe:1:<autosummary>:1
msgid ":obj:`format_feature_warning <linkcheck.strformat.format_feature_warning>`\\ \\(\\*\\*kwargs\\)"
msgstr ""

#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.ascii_safe:1:<autosummary>:1
#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.format_feature_warning:1
msgid "Format warning that a module could not be imported and that it should be installed for a certain URL."
msgstr ""

#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.ascii_safe:1:<autosummary>:1
msgid ":obj:`get_paragraphs <linkcheck.strformat.get_paragraphs>`\\ \\(text\\)"
msgstr ""

#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.ascii_safe:1:<autosummary>:1
msgid "A new paragraph is considered to start at a line which follows one or more blank lines (lines containing nothing or just spaces)."
msgstr ""

#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.ascii_safe:1:<autosummary>:1
msgid ":obj:`indent <linkcheck.strformat.indent>`\\ \\(text\\[\\, indent\\_string\\]\\)"
msgstr ""

#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.ascii_safe:1:<autosummary>:1
#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.indent:1
msgid "Indent each line of text with the given indent string."
msgstr ""

#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.ascii_safe:1:<autosummary>:1
msgid ":obj:`limit <linkcheck.strformat.limit>`\\ \\(s\\[\\, length\\]\\)"
msgstr ""

#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.ascii_safe:1:<autosummary>:1
#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.limit:1
msgid "If the length of the string exceeds the given limit, it will be cut off and three dots will be appended."
msgstr ""

#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.ascii_safe:1:<autosummary>:1
msgid ":obj:`paginate <linkcheck.strformat.paginate>`\\ \\(text\\)"
msgstr ""

#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.ascii_safe:1:<autosummary>:1
#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.paginate:1
msgid "Print text in pages of lines."
msgstr ""

#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.ascii_safe:1:<autosummary>:1
msgid ":obj:`strduration_long <linkcheck.strformat.strduration_long>`\\ \\(duration\\[\\, do\\_translate\\]\\)"
msgstr ""

#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.ascii_safe:1:<autosummary>:1
#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.strduration_long:1
msgid "Turn a time value in seconds into x hours, x minutes, etc."
msgstr ""

#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.ascii_safe:1:<autosummary>:1
msgid ":obj:`strip_control_chars <linkcheck.strformat.strip_control_chars>`\\ \\(text\\)"
msgstr ""

#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.ascii_safe:1:<autosummary>:1
#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.strip_control_chars:1
msgid "Remove console control characters from text."
msgstr ""

#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.ascii_safe:1:<autosummary>:1
msgid ":obj:`stripurl <linkcheck.strformat.stripurl>`\\ \\(s\\)"
msgstr ""

#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.ascii_safe:1:<autosummary>:1
msgid "Remove any lines from string after the first line."
msgstr ""

#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.ascii_safe:1:<autosummary>:1
msgid ":obj:`strline <linkcheck.strformat.strline>`\\ \\(s\\)"
msgstr ""

#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.ascii_safe:1:<autosummary>:1
#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.strline:1
msgid "Display string representation on one line."
msgstr ""

#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.ascii_safe:1:<autosummary>:1
msgid ":obj:`strsize <linkcheck.strformat.strsize>`\\ \\(b\\[\\, grouping\\]\\)"
msgstr ""

#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.ascii_safe:1:<autosummary>:1
msgid "Return human representation of bytes b."
msgstr ""

#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.ascii_safe:1:<autosummary>:1
msgid ":obj:`strtime <linkcheck.strformat.strtime>`\\ \\(t\\[\\, func\\]\\)"
msgstr ""

#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.ascii_safe:1:<autosummary>:1
#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.strtime:1
msgid "Return ISO 8601 formatted time."
msgstr ""

#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.ascii_safe:1:<autosummary>:1
msgid ":obj:`strtimezone <linkcheck.strformat.strtimezone>`\\ \\(\\)"
msgstr ""

#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.ascii_safe:1:<autosummary>:1
#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.strtimezone:1
msgid "Return timezone info, %z on some platforms, but not supported on all."
msgstr ""

#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.ascii_safe:1:<autosummary>:1
msgid ":obj:`unquote <linkcheck.strformat.unquote>`\\ \\(s\\[\\, matching\\]\\)"
msgstr ""

#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.ascii_safe:1:<autosummary>:1
msgid "Remove leading and ending single and double quotes."
msgstr ""

#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.ascii_safe:1:<autosummary>:1
msgid ":obj:`wrap <linkcheck.strformat.wrap>`\\ \\(text\\, width\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.ascii_safe:1:<autosummary>:1
msgid "Adjust lines of text to be not longer than width."
msgstr ""

#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.ascii_safe:1
msgid "Get ASCII string without raising encoding errors. Unknown characters of the given encoding will be ignored."
msgstr ""

#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.ascii_safe:4
msgid "the string to be encoded"
msgstr ""

#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.ascii_safe:6
msgid "version of s containing only ASCII characters, or None if s was None"
msgstr ""

#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.get_paragraphs:1
msgid "A new paragraph is considered to start at a line which follows one or more blank lines (lines containing nothing or just spaces). The first line of the text also starts a paragraph."
msgstr ""

#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.limit:4
msgid "the string to limit"
msgstr ""

#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.limit:6
msgid "maximum length"
msgstr ""

#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.limit:8
msgid "limited string, at most length+3 characters long"
msgstr ""

#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.stripurl:1
msgid "Remove any lines from string after the first line. Also remove whitespace at start and end from given string."
msgstr ""

#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.strsize:1
msgid "Return human representation of bytes b. A negative number of bytes raises a value error."
msgstr ""

#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.unquote:1
msgid "Remove leading and ending single and double quotes. The quotes need to match if matching is True. Only one quote from each end will be stripped."
msgstr ""

#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.unquote:5
msgid "if s evaluates to False, return s as is, else return string with stripped quotes"
msgstr ""

#: ../../../linkcheck/strformat.py:docstring of linkcheck.strformat.wrap:1
msgid "Adjust lines of text to be not longer than width. The text will be returned unmodified if width <= 0. See textwrap.wrap() for a list of supported kwargs. Returns text with lines no longer than given width."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.threader.rst:2
msgid "linkcheck.threader"
msgstr ""

#: ../../../linkcheck/threader.py:docstring of linkcheck.threader.StoppableThread:1:<autosummary>:1
msgid ":obj:`StoppableThread <linkcheck.threader.StoppableThread>`\\ \\(\\)"
msgstr ""

#: ../../../linkcheck/threader.py:docstring of linkcheck.threader.StoppableThread:1:<autosummary>:1
msgid "Thread class with a stop() method."
msgstr ""

#: ../../../linkcheck/threader.py:docstring of linkcheck.threader.StoppableThread:1
msgid "Bases: :class:`threading.Thread`"
msgstr ""

#: ../../../linkcheck/threader.py:docstring of linkcheck.threader.StoppableThread:1
msgid "Thread class with a stop() method. The thread itself has to check regularly for the stopped() condition."
msgstr ""

#: ../../../linkcheck/threader.py:docstring of linkcheck.threader.StoppableThread.stop:1
msgid "Set stop event."
msgstr ""

#: ../../../linkcheck/threader.py:docstring of linkcheck.threader.StoppableThread.stopped:1
msgid "Return True if stop event is set."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.trace.rst:2
msgid "linkcheck.trace"
msgstr ""

#: ../../../linkcheck/trace.py:docstring of linkcheck.trace.trace_filter:1:<autosummary>:1
msgid ":obj:`trace_filter <linkcheck.trace.trace_filter>`\\ \\(patterns\\)"
msgstr ""

#: ../../../linkcheck/trace.py:docstring of linkcheck.trace.trace_filter:1:<autosummary>:1
#: ../../../linkcheck/trace.py:docstring of linkcheck.trace.trace_filter:1
msgid "Add given patterns to trace filter set or clear set if patterns is None."
msgstr ""

#: ../../../linkcheck/trace.py:docstring of linkcheck.trace.trace_filter:1:<autosummary>:1
msgid ":obj:`trace_ignore <linkcheck.trace.trace_ignore>`\\ \\(names\\)"
msgstr ""

#: ../../../linkcheck/trace.py:docstring of linkcheck.trace.trace_filter:1:<autosummary>:1
#: ../../../linkcheck/trace.py:docstring of linkcheck.trace.trace_ignore:1
msgid "Add given names to trace ignore set, or clear set if names is None."
msgstr ""

#: ../../../linkcheck/trace.py:docstring of linkcheck.trace.trace_filter:1:<autosummary>:1
msgid ":obj:`trace_off <linkcheck.trace.trace_off>`\\ \\(\\)"
msgstr ""

#: ../../../linkcheck/trace.py:docstring of linkcheck.trace.trace_filter:1:<autosummary>:1
#: ../../../linkcheck/trace.py:docstring of linkcheck.trace.trace_off:1
msgid "Stop tracing of the current thread (and the current thread only)."
msgstr ""

#: ../../../linkcheck/trace.py:docstring of linkcheck.trace.trace_filter:1:<autosummary>:1
msgid ":obj:`trace_on <linkcheck.trace.trace_on>`\\ \\(\\[full\\]\\)"
msgstr ""

#: ../../../linkcheck/trace.py:docstring of linkcheck.trace.trace_filter:1:<autosummary>:1
#: ../../../linkcheck/trace.py:docstring of linkcheck.trace.trace_on:1
msgid "Start tracing of the current thread (and the current thread only)."
msgstr ""

#: ../../src/code/linkcheck/linkcheck.url.rst:2
msgid "linkcheck.url"
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
msgid ":obj:`collapse_segments <linkcheck.url.collapse_segments>`\\ \\(path\\)"
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
msgid "Remove all redundant segments from the given URL path."
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
msgid ":obj:`document_quote <linkcheck.url.document_quote>`\\ \\(document\\)"
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
#: ../../../linkcheck/url.py:docstring of linkcheck.url.document_quote:1
msgid "Quote given document."
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
msgid ":obj:`get_content <linkcheck.url.get_content>`\\ \\(url\\[\\, user\\, password\\, proxy\\, ...\\]\\)"
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
#: ../../../linkcheck/url.py:docstring of linkcheck.url.get_content:1
msgid "Get URL content and info."
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
msgid ":obj:`idna_encode <linkcheck.url.idna_encode>`\\ \\(host\\)"
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
msgid "Encode hostname as internationalized domain name (IDN) according to RFC 3490."
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
msgid ":obj:`is_duplicate_content_url <linkcheck.url.is_duplicate_content_url>`\\ \\(url1\\, url2\\)"
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
#: ../../../linkcheck/url.py:docstring of linkcheck.url.is_duplicate_content_url:1
msgid "Check if both URLs are allowed to point to the same content."
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
msgid ":obj:`is_numeric_port <linkcheck.url.is_numeric_port>`\\ \\(portstr\\)"
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
#: ../../../linkcheck/url.py:docstring of linkcheck.url.is_numeric_port:1
msgid "return: integer port (== True) iff portstr is a valid port number, False otherwise"
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
msgid ":obj:`match_host <linkcheck.url.match_host>`\\ \\(host\\, domainlist\\)"
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
#: ../../../linkcheck/url.py:docstring of linkcheck.url.match_host:1
msgid "Return True if host matches an entry in given domain list."
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
msgid ":obj:`match_url <linkcheck.url.match_url>`\\ \\(url\\, domainlist\\)"
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
#: ../../../linkcheck/url.py:docstring of linkcheck.url.match_url:1
msgid "Return True if host part of url matches an entry in given domain list."
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
msgid ":obj:`parse_qsl <linkcheck.url.parse_qsl>`\\ \\(qs\\, encoding\\[\\, keep\\_blank\\_values\\, ...\\]\\)"
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
#: ../../../linkcheck/url.py:docstring of linkcheck.url.parse_qsl:1
msgid "Parse a query given as a string argument."
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
msgid ":obj:`safe_host_pattern <linkcheck.url.safe_host_pattern>`\\ \\(host\\)"
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
#: ../../../linkcheck/url.py:docstring of linkcheck.url.safe_host_pattern:1
msgid "Return regular expression pattern with given host for URL testing."
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
msgid ":obj:`shorten_duplicate_content_url <linkcheck.url.shorten_duplicate_content_url>`\\ \\(url\\)"
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
#: ../../../linkcheck/url.py:docstring of linkcheck.url.shorten_duplicate_content_url:1
msgid "Remove anchor part and trailing index.html from URL."
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
msgid ":obj:`splitparams <linkcheck.url.splitparams>`\\ \\(path\\)"
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
msgid "Split off parameter part from path."
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
msgid ":obj:`splitport <linkcheck.url.splitport>`\\ \\(host\\[\\, port\\]\\)"
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
msgid "Split optional port number from host."
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
msgid ":obj:`url_fix_common_typos <linkcheck.url.url_fix_common_typos>`\\ \\(url\\)"
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
#: ../../../linkcheck/url.py:docstring of linkcheck.url.url_fix_common_typos:1
msgid "Fix common typos in given URL like forgotten colon."
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
msgid ":obj:`url_fix_host <linkcheck.url.url_fix_host>`\\ \\(urlparts\\, encoding\\)"
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
msgid "Unquote and fix hostname."
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
msgid ":obj:`url_fix_mailto_urlsplit <linkcheck.url.url_fix_mailto_urlsplit>`\\ \\(urlparts\\)"
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
#: ../../../linkcheck/url.py:docstring of linkcheck.url.url_fix_mailto_urlsplit:1
msgid "Split query part of mailto url if found."
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
msgid ":obj:`url_fix_wayback_query <linkcheck.url.url_fix_wayback_query>`\\ \\(path\\)"
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
msgid ":obj:`url_needs_quoting <linkcheck.url.url_needs_quoting>`\\ \\(url\\)"
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
msgid "Check if url needs percent quoting."
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
msgid ":obj:`url_norm <linkcheck.url.url_norm>`\\ \\(url\\, encoding\\)"
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
msgid "Normalize the given URL which must be quoted."
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
msgid ":obj:`url_parse_query <linkcheck.url.url_parse_query>`\\ \\(query\\, encoding\\)"
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
#: ../../../linkcheck/url.py:docstring of linkcheck.url.url_parse_query:1
msgid "Parse and re-join the given CGI query."
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
msgid ":obj:`url_quote <linkcheck.url.url_quote>`\\ \\(url\\, encoding\\)"
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
#: ../../../linkcheck/url.py:docstring of linkcheck.url.url_quote:1
msgid "Quote given URL."
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
msgid ":obj:`url_split <linkcheck.url.url_split>`\\ \\(url\\)"
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
msgid "Split url in a tuple (scheme, hostname, port, document) where hostname is always lowercased."
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
msgid ":obj:`url_unsplit <linkcheck.url.url_unsplit>`\\ \\(parts\\)"
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
#: ../../../linkcheck/url.py:docstring of linkcheck.url.url_unsplit:1
msgid "Rejoin URL parts to a string."
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
msgid ":obj:`urlunsplit <linkcheck.url.urlunsplit>`\\ \\(urlparts\\)"
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1:<autosummary>:1
#: ../../../linkcheck/url.py:docstring of linkcheck.url.urlunsplit:1
msgid "Same as urllib.parse.urlunsplit but with extra UNC path handling for Windows OS."
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.collapse_segments:1
msgid "Remove all redundant segments from the given URL path. Precondition: path is an unquoted url path"
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.get_content:3
msgid "(decoded text content of URL, headers) or (None, errmsg) on error."
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.idna_encode:1
msgid "Encode hostname as internationalized domain name (IDN) according to RFC 3490. :raise: UnicodeError if hostname is not properly IDN encoded."
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.parse_qsl:3
msgid "URL-encoded query string to be parsed"
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.parse_qsl:5
msgid "flag indicating whether blank values in URL encoded queries should be treated as blank strings.  A true value indicates that blanks should be retained as blank strings.  The default false value indicates that blank values are to be ignored and treated as if they were  not included."
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.parse_qsl:11
msgid "flag indicating what to do with parsing errors. If false (the default), errors are silently ignored. If true, errors raise a ValueError exception."
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.parse_qsl:15
msgid "list of triples (key, value, separator) where key and value are the splitted CGI parameter and separator the used separator for this CGI parameter which is either a semicolon or an ampersand"
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.splitparams:1
msgid "Split off parameter part from path. Returns tuple (path-without-param, param)"
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.splitport:1
msgid "Split optional port number from host. If host has no port number, the given default port is returned."
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.splitport:4
msgid "host name"
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.splitport:6
msgid "the port number (default 0)"
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.splitport:9
msgid "tuple of (host, port)"
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.url_fix_host:1
msgid "Unquote and fix hostname. Returns is_idn."
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.url_needs_quoting:1
msgid "Check if url needs percent quoting. Note that the method does only check basic character sets, and not any other syntax. The URL might still be syntactically incorrect even when it is properly quoted."
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.url_norm:1
msgid "Normalize the given URL which must be quoted. Supports unicode hostnames (IDNA encoding) according to RFC 3490."
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.url_norm:4
msgid "(normed url, idna flag)"
msgstr ""

#: ../../../linkcheck/url.py:docstring of linkcheck.url.url_split:1
msgid "Split url in a tuple (scheme, hostname, port, document) where hostname is always lowercased. Precondition: url is syntactically correct URI (eg has no whitespace)"
msgstr ""
